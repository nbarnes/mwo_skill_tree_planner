!function(I){var g={};function C(n){if(g[n])return g[n].exports;var e=g[n]={i:n,l:!1,exports:{}};return I[n].call(e.exports,e,e.exports,C),e.l=!0,e.exports}C.m=I,C.c=g,C.d=function(I,g,n){C.o(I,g)||Object.defineProperty(I,g,{configurable:!1,enumerable:!0,get:n})},C.r=function(I){Object.defineProperty(I,"__esModule",{value:!0})},C.n=function(I){var g=I&&I.__esModule?function(){return I.default}:function(){return I};return C.d(g,"a",g),g},C.o=function(I,g){return Object.prototype.hasOwnProperty.call(I,g)},C.p="",C(C.s=1)}([function(module,exports,__webpack_require__){eval("(function (global) {\n    'use strict';\n\n    var util = newUtil();\n    var inliner = newInliner();\n    var fontFaces = newFontFaces();\n    var images = newImages();\n\n    // Default impl options\n    var defaultOptions = {\n        // Default is to fail on error, no placeholder\n        imagePlaceholder: undefined,\n        // Default cache bust is false, it will use the cache\n        cacheBust: false\n    };\n\n    var domtoimage = {\n        toSvg: toSvg,\n        toPng: toPng,\n        toJpeg: toJpeg,\n        toBlob: toBlob,\n        toPixelData: toPixelData,\n        impl: {\n            fontFaces: fontFaces,\n            images: images,\n            util: util,\n            inliner: inliner,\n            options: {}\n        }\n    };\n\n    if (true)\n        module.exports = domtoimage;\n    else\n        {}\n\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options\n     * @param {Function} options.filter - Should return true if passed node should be included in the output\n     *          (excluding node means excluding it's children as well). Not called on the root node.\n     * @param {String} options.bgcolor - color for the background, any valid CSS color value.\n     * @param {Number} options.width - width to be applied to node before rendering.\n     * @param {Number} options.height - height to be applied to node before rendering.\n     * @param {Object} options.style - an object whose properties to be copied to node's style before rendering.\n     * @param {Number} options.quality - a Number between 0 and 1 indicating image quality (applicable to JPEG only),\n                defaults to 1.0.\n     * @param {String} options.imagePlaceholder - dataURL to use as a placeholder for failed images, default behaviour is to fail fast on images we can't fetch\n     * @param {Boolean} options.cacheBust - set to true to cache bust by appending the time to the request url\n     * @return {Promise} - A promise that is fulfilled with a SVG image data URL\n     * */\n    function toSvg(node, options) {\n        options = options || {};\n        copyOptions(options);\n        return Promise.resolve(node)\n            .then(function (node) {\n                return cloneNode(node, options.filter, true);\n            })\n            .then(embedFonts)\n            .then(inlineImages)\n            .then(applyOptions)\n            .then(function (clone) {\n                return makeSvgDataUri(clone,\n                    options.width || util.width(node),\n                    options.height || util.height(node)\n                );\n            });\n\n        function applyOptions(clone) {\n            if (options.bgcolor) clone.style.backgroundColor = options.bgcolor;\n\n            if (options.width) clone.style.width = options.width + 'px';\n            if (options.height) clone.style.height = options.height + 'px';\n\n            if (options.style)\n                Object.keys(options.style).forEach(function (property) {\n                    clone.style[property] = options.style[property];\n                });\n\n            return clone;\n        }\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a Uint8Array containing RGBA pixel data.\n     * */\n    function toPixelData(node, options) {\n        return draw(node, options || {})\n            .then(function (canvas) {\n                return canvas.getContext('2d').getImageData(\n                    0,\n                    0,\n                    util.width(node),\n                    util.height(node)\n                ).data;\n            });\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a PNG image data URL\n     * */\n    function toPng(node, options) {\n        return draw(node, options || {})\n            .then(function (canvas) {\n                return canvas.toDataURL();\n            });\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a JPEG image data URL\n     * */\n    function toJpeg(node, options) {\n        options = options || {};\n        return draw(node, options)\n            .then(function (canvas) {\n                return canvas.toDataURL('image/jpeg', options.quality || 1.0);\n            });\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a PNG image blob\n     * */\n    function toBlob(node, options) {\n        return draw(node, options || {})\n            .then(util.canvasToBlob);\n    }\n\n    function copyOptions(options) {\n        // Copy options to impl options for use in impl\n        if(typeof(options.imagePlaceholder) === 'undefined') {\n            domtoimage.impl.options.imagePlaceholder = defaultOptions.imagePlaceholder;\n        } else {\n            domtoimage.impl.options.imagePlaceholder = options.imagePlaceholder;\n        }\n\n        if(typeof(options.cacheBust) === 'undefined') {\n            domtoimage.impl.options.cacheBust = defaultOptions.cacheBust;\n        } else {\n            domtoimage.impl.options.cacheBust = options.cacheBust;\n        }\n    }\n\n    function draw(domNode, options) {\n        return toSvg(domNode, options)\n            .then(util.makeImage)\n            .then(util.delay(100))\n            .then(function (image) {\n                var canvas = newCanvas(domNode);\n                canvas.getContext('2d').drawImage(image, 0, 0);\n                return canvas;\n            });\n\n        function newCanvas(domNode) {\n            var canvas = document.createElement('canvas');\n            canvas.width = options.width || util.width(domNode);\n            canvas.height = options.height || util.height(domNode);\n\n            if (options.bgcolor) {\n                var ctx = canvas.getContext('2d');\n                ctx.fillStyle = options.bgcolor;\n                ctx.fillRect(0, 0, canvas.width, canvas.height);\n            }\n\n            return canvas;\n        }\n    }\n\n    function cloneNode(node, filter, root) {\n        if (!root && filter && !filter(node)) return Promise.resolve();\n\n        return Promise.resolve(node)\n            .then(makeNodeCopy)\n            .then(function (clone) {\n                return cloneChildren(node, clone, filter);\n            })\n            .then(function (clone) {\n                return processClone(node, clone);\n            });\n\n        function makeNodeCopy(node) {\n            if (node instanceof HTMLCanvasElement) return util.makeImage(node.toDataURL());\n            return node.cloneNode(false);\n        }\n\n        function cloneChildren(original, clone, filter) {\n            var children = original.childNodes;\n            if (children.length === 0) return Promise.resolve(clone);\n\n            return cloneChildrenInOrder(clone, util.asArray(children), filter)\n                .then(function () {\n                    return clone;\n                });\n\n            function cloneChildrenInOrder(parent, children, filter) {\n                var done = Promise.resolve();\n                children.forEach(function (child) {\n                    done = done\n                        .then(function () {\n                            return cloneNode(child, filter);\n                        })\n                        .then(function (childClone) {\n                            if (childClone) parent.appendChild(childClone);\n                        });\n                });\n                return done;\n            }\n        }\n\n        function processClone(original, clone) {\n            if (!(clone instanceof Element)) return clone;\n\n            return Promise.resolve()\n                .then(cloneStyle)\n                .then(clonePseudoElements)\n                .then(copyUserInput)\n                .then(fixSvg)\n                .then(function () {\n                    return clone;\n                });\n\n            function cloneStyle() {\n                copyStyle(window.getComputedStyle(original), clone.style);\n\n                function copyStyle(source, target) {\n                    if (source.cssText) target.cssText = source.cssText;\n                    else copyProperties(source, target);\n\n                    function copyProperties(source, target) {\n                        util.asArray(source).forEach(function (name) {\n                            target.setProperty(\n                                name,\n                                source.getPropertyValue(name),\n                                source.getPropertyPriority(name)\n                            );\n                        });\n                    }\n                }\n            }\n\n            function clonePseudoElements() {\n                [':before', ':after'].forEach(function (element) {\n                    clonePseudoElement(element);\n                });\n\n                function clonePseudoElement(element) {\n                    var style = window.getComputedStyle(original, element);\n                    var content = style.getPropertyValue('content');\n\n                    if (content === '' || content === 'none') return;\n\n                    var className = util.uid();\n                    clone.className = clone.className + ' ' + className;\n                    var styleElement = document.createElement('style');\n                    styleElement.appendChild(formatPseudoElementStyle(className, element, style));\n                    clone.appendChild(styleElement);\n\n                    function formatPseudoElementStyle(className, element, style) {\n                        var selector = '.' + className + ':' + element;\n                        var cssText = style.cssText ? formatCssText(style) : formatCssProperties(style);\n                        return document.createTextNode(selector + '{' + cssText + '}');\n\n                        function formatCssText(style) {\n                            var content = style.getPropertyValue('content');\n                            return style.cssText + ' content: ' + content + ';';\n                        }\n\n                        function formatCssProperties(style) {\n\n                            return util.asArray(style)\n                                .map(formatProperty)\n                                .join('; ') + ';';\n\n                            function formatProperty(name) {\n                                return name + ': ' +\n                                    style.getPropertyValue(name) +\n                                    (style.getPropertyPriority(name) ? ' !important' : '');\n                            }\n                        }\n                    }\n                }\n            }\n\n            function copyUserInput() {\n                if (original instanceof HTMLTextAreaElement) clone.innerHTML = original.value;\n                if (original instanceof HTMLInputElement) clone.setAttribute(\"value\", original.value);\n            }\n\n            function fixSvg() {\n                if (!(clone instanceof SVGElement)) return;\n                clone.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n\n                if (!(clone instanceof SVGRectElement)) return;\n                ['width', 'height'].forEach(function (attribute) {\n                    var value = clone.getAttribute(attribute);\n                    if (!value) return;\n\n                    clone.style.setProperty(attribute, value);\n                });\n            }\n        }\n    }\n\n    function embedFonts(node) {\n        return fontFaces.resolveAll()\n            .then(function (cssText) {\n                var styleNode = document.createElement('style');\n                node.appendChild(styleNode);\n                styleNode.appendChild(document.createTextNode(cssText));\n                return node;\n            });\n    }\n\n    function inlineImages(node) {\n        return images.inlineAll(node)\n            .then(function () {\n                return node;\n            });\n    }\n\n    function makeSvgDataUri(node, width, height) {\n        return Promise.resolve(node)\n            .then(function (node) {\n                node.setAttribute('xmlns', 'http://www.w3.org/1999/xhtml');\n                return new XMLSerializer().serializeToString(node);\n            })\n            .then(util.escapeXhtml)\n            .then(function (xhtml) {\n                return '<foreignObject x=\"0\" y=\"0\" width=\"100%\" height=\"100%\">' + xhtml + '</foreignObject>';\n            })\n            .then(function (foreignObject) {\n                return '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"' + width + '\" height=\"' + height + '\">' +\n                    foreignObject + '</svg>';\n            })\n            .then(function (svg) {\n                return 'data:image/svg+xml;charset=utf-8,' + svg;\n            });\n    }\n\n    function newUtil() {\n        return {\n            escape: escape,\n            parseExtension: parseExtension,\n            mimeType: mimeType,\n            dataAsUrl: dataAsUrl,\n            isDataUrl: isDataUrl,\n            canvasToBlob: canvasToBlob,\n            resolveUrl: resolveUrl,\n            getAndEncode: getAndEncode,\n            uid: uid(),\n            delay: delay,\n            asArray: asArray,\n            escapeXhtml: escapeXhtml,\n            makeImage: makeImage,\n            width: width,\n            height: height\n        };\n\n        function mimes() {\n            /*\n             * Only WOFF and EOT mime types for fonts are 'real'\n             * see http://www.iana.org/assignments/media-types/media-types.xhtml\n             */\n            var WOFF = 'application/font-woff';\n            var JPEG = 'image/jpeg';\n\n            return {\n                'woff': WOFF,\n                'woff2': WOFF,\n                'ttf': 'application/font-truetype',\n                'eot': 'application/vnd.ms-fontobject',\n                'png': 'image/png',\n                'jpg': JPEG,\n                'jpeg': JPEG,\n                'gif': 'image/gif',\n                'tiff': 'image/tiff',\n                'svg': 'image/svg+xml'\n            };\n        }\n\n        function parseExtension(url) {\n            var match = /\\.([^\\.\\/]*?)$/g.exec(url);\n            if (match) return match[1];\n            else return '';\n        }\n\n        function mimeType(url) {\n            var extension = parseExtension(url).toLowerCase();\n            return mimes()[extension] || '';\n        }\n\n        function isDataUrl(url) {\n            return url.search(/^(data:)/) !== -1;\n        }\n\n        function toBlob(canvas) {\n            return new Promise(function (resolve) {\n                var binaryString = window.atob(canvas.toDataURL().split(',')[1]);\n                var length = binaryString.length;\n                var binaryArray = new Uint8Array(length);\n\n                for (var i = 0; i < length; i++)\n                    binaryArray[i] = binaryString.charCodeAt(i);\n\n                resolve(new Blob([binaryArray], {\n                    type: 'image/png'\n                }));\n            });\n        }\n\n        function canvasToBlob(canvas) {\n            if (canvas.toBlob)\n                return new Promise(function (resolve) {\n                    canvas.toBlob(resolve);\n                });\n\n            return toBlob(canvas);\n        }\n\n        function resolveUrl(url, baseUrl) {\n            var doc = document.implementation.createHTMLDocument();\n            var base = doc.createElement('base');\n            doc.head.appendChild(base);\n            var a = doc.createElement('a');\n            doc.body.appendChild(a);\n            base.href = baseUrl;\n            a.href = url;\n            return a.href;\n        }\n\n        function uid() {\n            var index = 0;\n\n            return function () {\n                return 'u' + fourRandomChars() + index++;\n\n                function fourRandomChars() {\n                    /* see http://stackoverflow.com/a/6248722/2519373 */\n                    return ('0000' + (Math.random() * Math.pow(36, 4) << 0).toString(36)).slice(-4);\n                }\n            };\n        }\n\n        function makeImage(uri) {\n            return new Promise(function (resolve, reject) {\n                var image = new Image();\n                image.onload = function () {\n                    resolve(image);\n                };\n                image.onerror = reject;\n                image.src = uri;\n            });\n        }\n\n        function getAndEncode(url) {\n            var TIMEOUT = 30000;\n            if(domtoimage.impl.options.cacheBust) {\n                // Cache bypass so we dont have CORS issues with cached images\n                // Source: https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#Bypassing_the_cache\n                url += ((/\\?/).test(url) ? \"&\" : \"?\") + (new Date()).getTime();\n            }\n\n            return new Promise(function (resolve) {\n                var request = new XMLHttpRequest();\n\n                request.onreadystatechange = done;\n                request.ontimeout = timeout;\n                request.responseType = 'blob';\n                request.timeout = TIMEOUT;\n                request.open('GET', url, true);\n                request.send();\n\n                var placeholder;\n                if(domtoimage.impl.options.imagePlaceholder) {\n                    var split = domtoimage.impl.options.imagePlaceholder.split(/,/);\n                    if(split && split[1]) {\n                        placeholder = split[1];\n                    }\n                }\n\n                function done() {\n                    if (request.readyState !== 4) return;\n\n                    if (request.status !== 200) {\n                        if(placeholder) {\n                            resolve(placeholder);\n                        } else {\n                            fail('cannot fetch resource: ' + url + ', status: ' + request.status);\n                        }\n\n                        return;\n                    }\n\n                    var encoder = new FileReader();\n                    encoder.onloadend = function () {\n                        var content = encoder.result.split(/,/)[1];\n                        resolve(content);\n                    };\n                    encoder.readAsDataURL(request.response);\n                }\n\n                function timeout() {\n                    if(placeholder) {\n                        resolve(placeholder);\n                    } else {\n                        fail('timeout of ' + TIMEOUT + 'ms occured while fetching resource: ' + url);\n                    }\n                }\n\n                function fail(message) {\n                    console.error(message);\n                    resolve('');\n                }\n            });\n        }\n\n        function dataAsUrl(content, type) {\n            return 'data:' + type + ';base64,' + content;\n        }\n\n        function escape(string) {\n            return string.replace(/([.*+?^${}()|\\[\\]\\/\\\\])/g, '\\\\$1');\n        }\n\n        function delay(ms) {\n            return function (arg) {\n                return new Promise(function (resolve) {\n                    setTimeout(function () {\n                        resolve(arg);\n                    }, ms);\n                });\n            };\n        }\n\n        function asArray(arrayLike) {\n            var array = [];\n            var length = arrayLike.length;\n            for (var i = 0; i < length; i++) array.push(arrayLike[i]);\n            return array;\n        }\n\n        function escapeXhtml(string) {\n            return string.replace(/#/g, '%23').replace(/\\n/g, '%0A');\n        }\n\n        function width(node) {\n            var leftBorder = px(node, 'border-left-width');\n            var rightBorder = px(node, 'border-right-width');\n            return node.scrollWidth + leftBorder + rightBorder;\n        }\n\n        function height(node) {\n            var topBorder = px(node, 'border-top-width');\n            var bottomBorder = px(node, 'border-bottom-width');\n            return node.scrollHeight + topBorder + bottomBorder;\n        }\n\n        function px(node, styleProperty) {\n            var value = window.getComputedStyle(node).getPropertyValue(styleProperty);\n            return parseFloat(value.replace('px', ''));\n        }\n    }\n\n    function newInliner() {\n        var URL_REGEX = /url\\(['\"]?([^'\"]+?)['\"]?\\)/g;\n\n        return {\n            inlineAll: inlineAll,\n            shouldProcess: shouldProcess,\n            impl: {\n                readUrls: readUrls,\n                inline: inline\n            }\n        };\n\n        function shouldProcess(string) {\n            return string.search(URL_REGEX) !== -1;\n        }\n\n        function readUrls(string) {\n            var result = [];\n            var match;\n            while ((match = URL_REGEX.exec(string)) !== null) {\n                result.push(match[1]);\n            }\n            return result.filter(function (url) {\n                return !util.isDataUrl(url);\n            });\n        }\n\n        function inline(string, url, baseUrl, get) {\n            return Promise.resolve(url)\n                .then(function (url) {\n                    return baseUrl ? util.resolveUrl(url, baseUrl) : url;\n                })\n                .then(get || util.getAndEncode)\n                .then(function (data) {\n                    return util.dataAsUrl(data, util.mimeType(url));\n                })\n                .then(function (dataUrl) {\n                    return string.replace(urlAsRegex(url), '$1' + dataUrl + '$3');\n                });\n\n            function urlAsRegex(url) {\n                return new RegExp('(url\\\\([\\'\"]?)(' + util.escape(url) + ')([\\'\"]?\\\\))', 'g');\n            }\n        }\n\n        function inlineAll(string, baseUrl, get) {\n            if (nothingToInline()) return Promise.resolve(string);\n\n            return Promise.resolve(string)\n                .then(readUrls)\n                .then(function (urls) {\n                    var done = Promise.resolve(string);\n                    urls.forEach(function (url) {\n                        done = done.then(function (string) {\n                            return inline(string, url, baseUrl, get);\n                        });\n                    });\n                    return done;\n                });\n\n            function nothingToInline() {\n                return !shouldProcess(string);\n            }\n        }\n    }\n\n    function newFontFaces() {\n        return {\n            resolveAll: resolveAll,\n            impl: {\n                readAll: readAll\n            }\n        };\n\n        function resolveAll() {\n            return readAll(document)\n                .then(function (webFonts) {\n                    return Promise.all(\n                        webFonts.map(function (webFont) {\n                            return webFont.resolve();\n                        })\n                    );\n                })\n                .then(function (cssStrings) {\n                    return cssStrings.join('\\n');\n                });\n        }\n\n        function readAll() {\n            return Promise.resolve(util.asArray(document.styleSheets))\n                .then(getCssRules)\n                .then(selectWebFontRules)\n                .then(function (rules) {\n                    return rules.map(newWebFont);\n                });\n\n            function selectWebFontRules(cssRules) {\n                return cssRules\n                    .filter(function (rule) {\n                        return rule.type === CSSRule.FONT_FACE_RULE;\n                    })\n                    .filter(function (rule) {\n                        return inliner.shouldProcess(rule.style.getPropertyValue('src'));\n                    });\n            }\n\n            function getCssRules(styleSheets) {\n                var cssRules = [];\n                styleSheets.forEach(function (sheet) {\n                    try {\n                        util.asArray(sheet.cssRules || []).forEach(cssRules.push.bind(cssRules));\n                    } catch (e) {\n                        console.log('Error while reading CSS rules from ' + sheet.href, e.toString());\n                    }\n                });\n                return cssRules;\n            }\n\n            function newWebFont(webFontRule) {\n                return {\n                    resolve: function resolve() {\n                        var baseUrl = (webFontRule.parentStyleSheet || {}).href;\n                        return inliner.inlineAll(webFontRule.cssText, baseUrl);\n                    },\n                    src: function () {\n                        return webFontRule.style.getPropertyValue('src');\n                    }\n                };\n            }\n        }\n    }\n\n    function newImages() {\n        return {\n            inlineAll: inlineAll,\n            impl: {\n                newImage: newImage\n            }\n        };\n\n        function newImage(element) {\n            return {\n                inline: inline\n            };\n\n            function inline(get) {\n                if (util.isDataUrl(element.src)) return Promise.resolve();\n\n                return Promise.resolve(element.src)\n                    .then(get || util.getAndEncode)\n                    .then(function (data) {\n                        return util.dataAsUrl(data, util.mimeType(element.src));\n                    })\n                    .then(function (dataUrl) {\n                        return new Promise(function (resolve, reject) {\n                            element.onload = resolve;\n                            element.onerror = reject;\n                            element.src = dataUrl;\n                        });\n                    });\n            }\n        }\n\n        function inlineAll(node) {\n            if (!(node instanceof Element)) return Promise.resolve(node);\n\n            return inlineBackground(node)\n                .then(function () {\n                    if (node instanceof HTMLImageElement)\n                        return newImage(node).inline();\n                    else\n                        return Promise.all(\n                            util.asArray(node.childNodes).map(function (child) {\n                                return inlineAll(child);\n                            })\n                        );\n                });\n\n            function inlineBackground(node) {\n                var background = node.style.getPropertyValue('background');\n\n                if (!background) return Promise.resolve(node);\n\n                return inliner.inlineAll(background)\n                    .then(function (inlined) {\n                        node.style.setProperty(\n                            'background',\n                            inlined,\n                            node.style.getPropertyPriority('background')\n                        );\n                    })\n                    .then(function () {\n                        return node;\n                    });\n            }\n        }\n    }\n})(this);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./src/tree_source.js\n\n// First element of the nodes array MUST be the root node of the skill graph\nlet tree_source_treeSource = [\n  /*\n  ==========================================\n                   WEAPONS\n  ==========================================\n  */\n  {\n    treeName: "Weapons",\n    nodes: [\n      { name: "Range 1",\n        attribute: "Weapon Range",\n        leftChildId: "range-2",\n        rightChildId: "range-3"\n      },\n      { name: "Range 2",\n        attribute: "Weapon Range",\n        leftChildId: "range-4",\n        rightChildId: "range-5"\n      },\n      { name: "Range 3",\n        attribute: "Weapon Range",\n        leftChildId: "range-5",\n        rightChildId: "range-6"\n      },\n      { name: "Range 4",\n        attribute: "Weapon Range",\n        leftChildId: "cooldown-1",\n        centerChildId: "high-explosive-1",\n        rightChildId: "velocity-1"\n      },\n      { name: "Range 5",\n        attribute: "Weapon Range",\n        centerChildId: "cooldown-4"\n      },\n      { name: "Range 6",\n        attribute: "Weapon Range",\n        leftChildId: "velocity-2",\n        centerChildId: "gauss-charge-1",\n        rightChildId: "cooldown-2"\n      },\n\t  { name: "Cooldown 1",\n        attribute: "Weapon Cooldown",\n        leftChildId: "cooldown-3"\n      },\n\t  { name: "Velocity 1",\n        attribute: "Weapon Velocity",\n        rightChildId: "cooldown-4"\n      },\n\t  { name: "Velocity 2",\n        attribute: "Weapon Velocity",\n        leftChildId: "cooldown-4"\n      },\n      { name: "Cooldown 2",\n        attribute: "Weapon Cooldown",\n        rightChildId: "cooldown-5"\n      },\n      { name: "Cooldown 3",\n        attribute: "Weapon Cooldown",\n        leftChildId: "range-7",\n        centerChildId: "missile-spread-1",\n        rightChildId: "heat-gen-1"\n      },\n      { name: "High Explosive 1",\n        attribute: "Missile Crit Damage",\n        leftChildId: "heat-gen-1"\n      },\n      { name: "Cooldown 4",\n        attribute: "Weapon Cooldown",\n        centerChildId: "cooldown-6",\n        rightChildId: "flamer-ventilation-1",\n      },\n      { name: "Gauss Charge 1",\n        attribute: "Gauss Held Time",\n        leftChildId: "flamer-ventilation-1",\n        rightChildId: "heat-gen-2"\n      },\n      { name: "Cooldown 5",\n        attribute: "Weapon Cooldown",\n        leftChildId: "heat-gen-2",\n        centerChildId: "lbx-spread-1",\n        rightChildId: "range-8"\n      },\n      { name: "Range 7",\n        attribute: "Weapon Range",\n        leftChildId: "range-9"\n      },\n      { name: "Heat Gen 1",\n        attribute: "Weapon Heat Gen",\n        leftChildId: "missile-spread-1",\n        rightChildId: "heat-gen-3"\n      },\n      { name: "Flamer Ventilation 1",\n        attribute: "Flamer Ventilation"\n      },\n      { name: "Heat Gen 2",\n        attribute: "Weapon Heat Gen",\n        leftChildId: "heat-gen-4",\n        rightChildId: "lbx-spread-1"\n      },\n      { name: "Range 8",\n        attribute: "Weapon Range",\n        rightChildId: "range-10"\n      },\n      { name: "Range 9",\n        attribute: "Weapon Range",\n        rightChildId: "cooldown-7"\n      },\n      { name: "Missile Spread 1",\n        attribute: "Missile Spread",\n        leftChildId: "cooldown-7"\n      },\n      { name: "Heat Gen 3",\n        attribute: "Weapon Heat Gen",\n        leftChildId: "velocity-3",\n        rightChildId: "range-11"\n      },\n      { name: "Cooldown 6",\n        attribute: "Weapon Cooldown",\n        leftChildId: "range-11",\n        centerChildId: "laser-duration-1",\n        rightChildId: "range-12"\n      },\n      { name: "Heat Gen 4",\n        attribute: "Weapon Heat Gen",\n        leftChildId: "range-12",\n        rightChildId: "velocity-4"\n      },\n      { name: "LBX Spread 1",\n        attribute: "LBX Spread",\n        rightChildId: "cooldown-8"\n      },\n\t  { name: "Range 10",\n        attribute: "Weapon Range",\n        leftChildId: "cooldown-8",\n        rightChildId: "enhanced-uac-rac-1"\n      },\n      { name: "Cooldown 7",\n        attribute: "Weapon Cooldown",\n        leftChildId: "heat-gen-5",\n        rightChildId: "heat-gen-6"\n      },\n      { name: "Velocity 3",\n        attribute: "Weapon Velocity",\n        leftChildId: "heat-gen-6"\n      },\n      { name: "Range 11",\n        attribute: "Weapon Range",\n        leftChildId: "range-13",\n        rightChildId: "laser-duration-1"\n      },\n      { name: "Range 12",\n        attribute: "Weapon Range",\n        leftChildId: "laser-duration-1",\n        rightChildId: "range-14"\n      },\n      { name: "Velocity 4",\n        attribute: "Weapon Velocity",\n        rightChildId: "cooldown-9"\n      },\n      { name: "Cooldown 8",\n        attribute: "Weapon Cooldown",\n        leftChildId: "cooldown-9",\n        centerChildId: "gauss-charge-2",\n        rightChildId: "heat-gen-7"\n      },\n      { name: "Enhanced UAC / RAC 1",\n        attribute: "Enhanced UAC / RAC",\n      },\n      { name: "Heat Gen 5",\n        attribute: "Weapon Heat Gen",\n        leftChildId: "cooldown-10"\n      },\n      { name: "Heat Gen 6",\n        attribute: "Weapon Heat Gen",\n        leftChildId: "high-explosive-2",\n        centerChildId: "laser-duration-2",\n        rightChildId: "heat-gen-8"\n      },\n      { name: "Range 13",\n        attribute: "Weapon Range",\n        leftChildId: "heat-gen-8",\n        centerChildId: "flamer-ventilation-2",\n        rightChildId: "missile-rack-1"\n      },\n      { name: "Laser Duration 1",\n        attribute: "Laser Duration",\n        centerChildId: "cooldown-12"\n      },\n      { name: "Range 14",\n        attribute: "Weapon Range",\n        leftChildId: "magazine-capacity-1",\n        rightChildId: "heat-gen-9"\n      },\n      { name: "Cooldown 9",\n        attribute: "Weapon Cooldown",\n        leftChildId: "heat-gen-9",\n        centerChildId: "laser-duration-3",\n        rightChildId: "gauss-charge-2"\n      },\n\t  { name: "Heat Gen 7",\n        attribute: "Weapon Heat Gen",\n        rightChildId: "cooldown-11"\n      },\n\t  { name: "Cooldown 10",\n        attribute: "Weapon Cooldown",\n        rightChildId: "missile-rack-2"\n      },\n\t  { name: "High Explosive 2",\n        attribute: "Missile Crit Damage",\n        rightChildId: "laser-duration-2"\n      },\n\t  { name: "Heat Gen 8",\n        attribute: "Weapon Heat Gen",\n        leftChildId: "laser-duration-2",\n        centerChildId: "cooldown-13"\n      },\n\t  { name: "Missile Rack 1",\n        attribute: "Missile Ammo",\n        rightChildId: "cooldown-12"\n      },\n\t  { name: "Magazine Capacity 1",\n      attribute: "Ballistic Ammo",\n      leftChildId: "cooldown-12"\n    },\n\t  { name: "Heat Gen 9",\n      attribute: "Weapon Heat Gen",\n      centerChildId: "cooldown-14",\n      rightChildId: "laser-duration-3"\n    },\n\t  { name: "Gauss Charge 2",\n      attribute: "Gauss Held Time",\n      leftChildId: "laser-duration-3"\n    },\n\t  { name: "Cooldown 11",\n      attribute: "Weapon Cooldown",\n      leftChildId: "magazine-capacity-2"\n    },\n\t  { name: "Missile Rack 2",\n      attribute: "Missile Ammo",\n    },\n\t  { name: "Laser Duration 2",\n      attribute: "Laser Duration",\n      rightChildId: "cooldown-13"\n    },\n    { name: "Flamer Ventilation 2",\n      attribute: "Flamer Ventilation"\n    },\n\t  { name: "Cooldown 12",\n        attribute: "Weapon Cooldown",\n        leftChildId: "range-15",\n        rightChildId: "velocity-5"\n      },\n\t  { name: "Laser Duration 3",\n        attribute: "Laser Duration",\n        leftChildId: "cooldown-14"\n      },\n\t  { name: "Magazine Capacity 2",\n        attribute: "Ballistic Ammo",\n      },\n\t  { name: "Cooldown 13",\n        attribute: "Weapon Cooldown",\n        leftChildId: "heat-gen-10",\n        rightChildId: "heat-gen-11"\n      },\n\t  { name: "Range 15",\n        attribute: "Weapon Range",\n        leftChildId: "heat-gen-11",\n        rightChildId: "cooldown-15"\n      },\n\t  { name: "Velocity 5",\n        attribute: "Weapon Velocity",\n        leftChildId: "cooldown-15",\n        rightChildId: "heat-gen-12"\n      },\n\t  { name: "Cooldown 14",\n        attribute: "Weapon Cooldown",\n        leftChildId: "heat-gen-12",\n        rightChildId: "cooldown-16"\n      },\n\t  { name: "Heat Gen 10",\n        attribute: "Weapon Heat Gen",\n      },\n\t  { name: "Heat Gen 11",\n        attribute: "Weapon Heat Gen",\n        centerChildId: "heat-gen-13"\n      },\n\t  { name: "Cooldown 15",\n        attribute: "Weapon Cooldown",\n        leftChildId: "missile-spread-2",\n        centerChildId: "laser-duration-4",\n        rightChildId: "enhanced-uac-rac-2"\n      },\n\t  { name: "Heat Gen 12",\n        attribute: "Weapon Heat Gen",\n        centerChildId: "heat-gen-14",\n        rightChildId: "lbx-spread-2"\n      },\n      { name: "Cooldown 16",\n        attribute: "Weapon Cooldown",\n        leftChildId: "lbx-spread-2"\n      },\n      { name: "Missile Spread 2",\n        attribute: "Missile Spread",\n      },\n      { name: "Enhanced UAC / RAC 2",\n        attribute: "Enhanced UAC / RAC",\n      },\n      { name: "LBX Spread 2",\n        attribute: "LBX Spread",\n      },\n      { name: "Heat Gen 13",\n        attribute: "Weapon Heat Gen",\n      },\n      { name: "Laser Duration 4",\n        attribute: "Laser Duration",\n      },\n      { name: "Heat Gen 14",\n        attribute: "Weapon Heat Gen",\n      }\n    ]\n  },\n  /*\n  ==========================================\n                  SURVIVAL\n  ==========================================\n  */\n  {\n    treeName: "Survival",\n    nodes: [\n      { name: "Reinforced Casing 1",\n        attribute: "Crit Chance Received",\n        leftChildId: "shock-absorbance-1",\n        rightChildId: "ams-overload-1"\n      },\n\t    { name: "Shock Absorbance 1",\n        attribute: "Fall Damage",\n        centerChildId: "reinforced-casing-2",\n        rightChildId: "skeletal-density-1"\n      },\n\t    { name: "AMS Overload 1",\n        attribute: "AMS Effectiveness",\n        leftChildId: "skeletal-density-1",\n        centerChildId: "reinforced-casing-3"\n      },\n\t    { name: "Skeletal Density 1",\n        attribute: "Internal Structure",\n        leftChildId: "reinforced-casing-2",\n        rightChildId: "reinforced-casing-3"\n      },\n\t    { name: "Reinforced Casing 2",\n        attribute: "Crit Chance Received",\n        leftChildId: "armor-hardening-1",\n        centerChildId: "ams-overload-2"\n      },\n\t    { name: "Reinforced Casing 3",\n        attribute: "Crit Chance Received",\n        centerChildId: "shock-absorbance-3",\n        rightChildId: "skeletal-density-2"\n      },\n\t    { name: "Armor Hardening 1",\n        attribute: "Armor",\n        leftChildId: "shock-absorbance-2",\n        centerChildId: "skeletal-density-3",\n        rightChildId: "ams-overload-2"\n      },\n\t    { name: "Skeletal Density 2",\n        attribute: "Internal Structure",\n        leftChildId: "shock-absorbance-3",\n        centerChildId: "reinforced-casing-4",\n        rightChildId: "shock-absorbance-4"\n      },\n\t  { name: "Shock Absorbance 2",\n        attribute: "Fall Damage",\n        leftChildId: "armor-hardening-2",\n        rightChildId: "skeletal-density-3"\n      },\n\t    { name: "AMS Overload 2",\n        attribute: "AMS Effectiveness",\n        leftChildId: "skeletal-density-3",\n        rightChildId: "skeletal-density-4"\n      },\n\t    { name: "Shock Absorbance 3",\n        attribute: "Fall Damage",\n        leftChildId: "skeletal-density-4",\n        rightChildId: "reinforced-casing-4"\n      },\n\t    { name: "Shock Absorbance 4",\n        attribute: "Fall Damage",\n        leftChildId: "reinforced-casing-4",\n        rightChildId: "armor-hardening-3"\n      },\n\t    { name: "Armor Hardening 2",\n        attribute: "Armor",\n        rightChildId: "reinforced-casing-5"\n      },\n\t    { name: "Skeletal Density 3",\n        attribute: "Internal Structure",\n        leftChildId: "reinforced-casing-5",\n        centerChildId: "armor-hardening-5"\n      },\n\t    { name: "Skeletal Density 4",\n        attribute: "Internal Structure",\n        centerChildId: "skeletal-density-5"\n      },\n\t    { name: "Reinforced Casing 4",\n        attribute: "Crit Chance Received",\n        centerChildId: "skeletal-density-6",\n        rightChildId: "reinforced-casing-7"\n      },\n\t    { name: "Armor Hardening 3",\n        attribute: "Armor",\n        leftChildId: "reinforced-casing-7"\n      },\n\t    { name: "Reinforced Casing 5",\n        attribute: "Crit Chance Received",\n        leftChildId: "armor-hardening-4",\n        rightChildId: "armor-hardening-5"\n      },\n\t    { name: "Reinforced Casing 7",\n        attribute: "Crit Chance Received",\n        leftChildId: "skeletal-density-6",\n        rightChildId: "skeletal-density-7"\n      },\n\t    { name: "Armor Hardening 4",\n        attribute: "Armor",\n      },\n  \t  { name: "Armor Hardening 5",\n        attribute: "Armor",\n        rightChildId: "reinforced-casing-6"\n      },\n\t    { name: "Skeletal Density 5",\n        attribute: "Internal Structure",\n        leftChildId: "reinforced-casing-6",\n        rightChildId: "reinforced-casing-8"\n      },\n\t    { name: "Skeletal Density 6",\n        attribute: "Internal Structure",\n        leftChildId: "reinforced-casing-8"\n      },\n\t    { name: "Skeletal Density 7",\n        attribute: "Internal Structure",\n      },\n\t    { name: "Reinforced Casing 6",\n        attribute: "Crit Chance Received",\n        leftChildId: "armor-hardening-6",\n        centerChildId: "skeletal-density-9"\n      },\n\t    { name: "Reinforced Casing 8",\n        attribute: "Crit Chance Received",\n        centerChildId: "skeletal-density-10",\n        rightChildId: "skeletal-density-8"\n      },\n\t    { name: "Armor Hardening 6",\n        attribute: "Armor",\n        rightChildId: "skeletal-density-9"\n      },\n\t    { name: "Skeletal Density 8",\n        attribute: "Internal Structure",\n        leftChildId: "skeletal-density-10"\n      },\n\t    { name: "Skeletal Density 9",\n        attribute: "Internal Structure",\n        leftChildId: "armor-hardening-7",\n        rightChildId: "shock-absorbance-5"\n      },\n\t    { name: "Skeletal Density 10",\n        attribute: "Internal Structure",\n        leftChildId: "shock-absorbance-5",\n        rightChildId: "armor-hardening-8"\n      },\n\t    { name: "Armor Hardening 7",\n        attribute: "Armor",\n      },\n\t    { name: "Shock Absorbance 5",\n        attribute: "Fall Damage",\n        leftChildId: "armor-hardening-9",\n        rightChildId: "armor-hardening-10"\n      },\n\t    { name: "Armor Hardening 8",\n        attribute: "Armor",\n      },\n\t    { name: "Armor Hardening 9",\n        attribute: "Armor",\n      },\n\t    { name: "Armor Hardening 10",\n        attribute: "Armor",\n      },\n    ]\n  },\n  /*\n  ==========================================\n                    MOBiLITY\n  ==========================================\n  */\n  {\n    treeName: "Mobility",\n    nodes: [\n      { name: "Kinetic Burst 1",\n        attribute: "Acceleration",\n        leftChildId: "torso-yaw-1",\n        rightChildId: "hard-brake-1"\n      },\n      { name: "Torso Yaw 1",\n        attribute: "Max Torso Twist",\n        leftChildId: "hard-brake-2",\n        rightChildId: "kinetic-burst-2"\n      },\n      { name: "Hard Brake 1",\n        attribute: "Deceleration",\n        leftChildId: "kinetic-burst-2",\n        rightChildId: "torso-yaw-2"\n      },\n      { name: "Hard Brake 2",\n        attribute: "Deceleration",\n        leftChildId: "torso-speed-1",\n        rightChildId: "torso-yaw-3"\n      },\n      { name: "Kinetic Burst 2",\n        attribute: "Acceleration",\n        leftChildId: "torso-yaw-3",\n        rightChildId: "hard-brake-3"\n      },\n      { name: "Torso Yaw 2",\n        attribute: "Max Torso Twist",\n        leftChildId: "hard-brake-3",\n        rightChildId: "anchor-turn-1"\n      },\n      { name: "Torso Speed 1",\n        attribute: "Torso Twist Speed",\n      },\n      { name: "Torso Yaw 3",\n        attribute: "Max Torso Twist",\n        leftChildId: "kinetic-burst-3",\n        centerChildId: "torso-yaw-4"\n      },\n      { name: "Hard Brake 3",\n        attribute: "Deceleration",\n        centerChildId: "kinetic-burst-5",\n        rightChildId: "kinetic-burst-4"\n      },\n      { name: "Anchor Turn 1",\n        attribute: "Turn Speed",\n      },\n      { name: "Kinetic Burst 3",\n        attribute: "Acceleration",\n        leftChildId: "hard-brake-4",\n        rightChildId: "torso-yaw-4"\n      },\n      { name: "Kinetic Burst 4",\n        attribute: "Acceleration",\n        leftChildId: "kinetic-burst-5",\n        rightChildId: "kinetic-burst-6"\n      },\n      { name: "Hard Brake 4",\n        attribute: "Deceleration",\n        leftChildId: "torso-speed-2",\n        rightChildId: "torso-speed-3"\n      },\n      { name: "Torso Yaw 4",\n        attribute: "Max Torso Twist",\n        leftChildId: "torso-speed-3",\n        rightChildId: "torso-pitch-1"\n      },\n      { name: "Kinetic Burst 5",\n        attribute: "Acceleration",\n        leftChildId: "torso-pitch-1",\n        rightChildId: "kinetic-burst-7"\n      },\n      { name: "Kinetic Burst 6",\n        attribute: "Acceleration",\n        leftChildId: "kinetic-burst-7",\n        rightChildId: "hard-brake-5"\n      },\n      { name: "Torso Speed 2",\n        attribute: "Torso Twist Speed",\n        rightChildId: "torso-yaw-5"\n      },\n      { name: "Torso Speed 3",\n        attribute: "Torso Twist Speed",\n        rightChildId: "torso-pitch-2"\n      },\n      { name: "Torso Pitch 1",\n        attribute: "Max Torso Inclination",\n        leftChildId: "torso-pitch-2",\n        rightChildId: "torso-pitch-3"\n      },\n      { name: "Kinetic Burst 7",\n        attribute: "Acceleration",\n        leftChildId: "torso-pitch-3"\n      },\n      { name: "Hard Brake 5",\n        attribute: "Deceleration",\n        leftChildId: "anchor-turn-2"\n      },\n      { name: "Torso Yaw 5",\n        attribute: "Max Torso Twist",\n        rightChildId: "hard-brake-6"\n      },\n      { name: "Torso Pitch 2",\n        attribute: "Max Torso Inclination",\n        leftChildId: "hard-brake-6"\n      },\n      { name: "Torso Pitch 3",\n        attribute: "Max Torso Inclination",\n        rightChildId: "hard-brake-7"\n      },\n      { name: "Anchor Turn 2",\n        attribute: "Turn Speed",\n        leftChildId: "hard-brake-7"\n      },\n      { name: "Hard Brake 6",\n        attribute: "Deceleration",\n        leftChildId: "anchor-turn-3",\n        rightChildId: "torso-speed-4"\n      },\n      { name: "Hard Brake 7",\n        attribute: "Deceleration",\n        leftChildId: "torso-speed-5",\n        rightChildId: "anchor-turn-4"\n      },\n      { name: "Anchor Turn 3",\n        attribute: "Turn Speed",\n        rightChildId: "torso-pitch-4"\n      },\n      { name: "Torso Speed 4",\n        attribute: "Torso Twist Speed",\n        leftChildId: "torso-pitch-4"\n      },\n      { name: "Torso Speed 5",\n        attribute: "Torso Twist Speed",\n        rightChildId: "torso-pitch-5"\n      },\n      { name: "Anchor Turn 4",\n        attribute: "Turn Speed",\n        leftChildId: "torso-pitch-5"\n      },\n      { name: "Torso Pitch 4",\n        attribute: "Max Torso Inclination",\n        leftChildId: "speed-tweak-1",\n        centerChildId: "torso-speed-6"\n      },\n      { name: "Torso Pitch 5",\n        attribute: "Max Torso Inclination",\n        centerChildId: "anchor-turn-5",\n        rightChildId: "speed-tweak-2"\n      },\n      { name: "Speed Tweak 1",\n        attribute: "Max Speed",\n        rightChildId: "torso-speed-6"\n      },\n      { name: "Speed Tweak 2",\n        attribute: "Max Speed",\n        leftChildId: "anchor-turn-5"\n      },\n      { name: "Torso Speed 6",\n        attribute: "Torso Twist Speed",\n        rightChildId: "speed-tweak-3"\n      },\n      { name: "Anchor Turn 5",\n        attribute: "Turn Speed",\n        leftChildId: "speed-tweak-4"\n      },\n      { name: "Speed Tweak 3",\n        attribute: "Max Speed",\n        rightChildId: "speed-tweak-5"\n      },\n      { name: "Speed Tweak 4",\n        attribute: "Max Speed",\n        leftChildId: "speed-tweak-5"\n      },\n      { name: "Speed Tweak 5",\n        attribute: "Max Speed",\n      }\n    ]\n  },\n  /*\n  ==========================================\n                  JUMP JETS\n  ==========================================\n  */\n  {\n    treeName: "Jump Jets",\n    nodes: [\n      { name: "Heat Shielding 1",\n        attribute: "Jump Jet Heat Reduction",\n        leftChildId: "vent-calibration-1",\n        rightChildId: "vectoring-1"\n      },\n      { name: "Vent Calibration 1",\n        attribute: "Jump Jet Burn Time",\n        centerChildId: "vent-calibration-2",\n        rightChildId: "heat-shielding-2"\n      },\n      { name: "Vectoring 1",\n        attribute: "Jump Jet Forward Thrust",\n        leftChildId: "heat-shielding-2",\n        centerChildId: "vectoring-2",\n        rightChildId: "lift-speed-1"\n      },\n      { name: "Heat Shielding 2",\n        attribute: "Jump Jet Heat Reduction",\n        leftChildId: "vent-calibration-2",\n        rightChildId: "vectoring-2"\n      },\n      { name: "Lift Speed 1",\n        attribute: "Jump Jet Initial Boost",\n        leftChildId: "vectoring-2"\n      },\n      { name: "Vent Calibration 2",\n        attribute: "Jump Jet Burn Time",\n        centerChildId: "vent-calibration-3",\n        rightChildId: "heat-shielding-3"\n      },\n      { name: "Vectoring 2",\n        attribute: "Jump Jet Forward Thrust",\n        leftChildId: "heat-shielding-3",\n        centerChildId: "vectoring-3",\n        rightChildId: "lift-speed-2"\n      },\n      { name: "Heat Shielding 3",\n        attribute: "Jump Jet Heat Reduction",\n        leftChildId: "vent-calibration-3",\n        rightChildId: "vectoring-3"\n      },\n      { name: "Lift Speed 2",\n        attribute: "Jump Jet Initial Boost",\n        leftChildId: "vectoring-3"\n      },\n      { name: "Vent Calibration 3",\n        attribute: "Jump Jet Burn Time",\n        leftChildId: "lift-speed-3",\n        centerChildId: "vent-calibration-4",\n        rightChildId: "heat-shielding-4"\n      },\n      { name: "Vectoring 3",\n        attribute: "Jump Jet Forward Thrust",\n        leftChildId: "heat-shielding-4",\n        centerChildId: "vectoring-4"\n      },\n      { name: "Lift Speed 3",\n        attribute: "Jump Jet Initial Boost",\n        rightChildId: "vent-calibration-4"\n      },\n      { name: "Heat Shielding 4",\n        attribute: "Jump Jet Heat Reduction",\n        leftChildId: "vent-calibration-4",\n        rightChildId: "vectoring-4"\n      },\n      { name: "Vent Calibration 4",\n        attribute: "Jump Jet Burn Time",\n        leftChildId: "lift-speed-4",\n        centerChildId: "vent-calibration-5",\n        rightChildId: "heat-shielding-5"\n      },\n      { name: "Vectoring 4",\n        attribute: "Jump Jet Forward Thrust",\n        leftChildId: "heat-shielding-5",\n        centerChildId: "vectoring-5"\n      },\n      { name: "Lift Speed 4",\n        attribute: "Jump Jet Initial Boost",\n        rightChildId: "vent-calibration-5"\n      },\n      { name: "Heat Shielding 5",\n        attribute: "Jump Jet Heat Reduction",\n        leftChildId: "vent-calibration-5",\n        rightChildId: "vectoring-5"\n      },\n      { name: "Vent Calibration 5",\n        attribute: "Jump Jet Burn Time",\n      },\n      { name: "Vectoring 5",\n        attribute: "Jump Jet Forward Thrust",\n        leftChildId: "lift-speed-5"\n      },\n      { name: "Lift Speed 5",\n        attribute: "Jump Jet Initial Boost",\n      }\n    ]\n  },\n  /*\n  ==========================================\n                 OPERATIONS\n  ==========================================\n  */\n  {\n    treeName: "Operations",\n    nodes: [\n      { name: "Quick Ignition 1",\n        attribute: "Startup Speed",\n        leftChildId: "speed-retention-1",\n        rightChildId: "improved-gyros-1"\n      },\n      { name: "Speed Retention 1",\n        attribute: "Legged Speed",\n        centerChildId: "hill-climb-1",\n        rightChildId: "heat-containment-1"\n      },\n      { name: "Improved Gyros 1",\n        attribute: "Tastier Gyros",\n        leftChildId: "heat-containment-1",\n        centerChildId: "improved-gyros-2"\n      },\n      { name: "Heat Containment 1",\n        attribute: "Heat Capacity",\n        leftChildId: "hill-climb-1",\n        rightChildId: "improved-gyros-2"\n      },\n      { name: "Hill Climb 1",\n        attribute: "Hill Climb",\n        leftChildId: "heat-containment-2",\n        centerChildId: "hill-climb-2"\n      },\n      { name: "Improved Gyros 2",\n        attribute: "Tastier Gyros",\n        centerChildId: "speed-retention-2",\n        rightChildId: "heat-containment-3"\n      },\n      { name: "Heat Containment 2",\n        attribute: "Heat Capacity",\n        leftChildId: "cool-run-1",\n        centerChildId: "quick-ignition-2"\n      },\n      { name: "Heat Containment 3",\n        attribute: "Heat Capacity",\n        centerChildId: "quick-ignition-3",\n        rightChildId: "cool-run-2"\n      },\n      { name: "Cool Run 1",\n        attribute: "Heat Dissipation",\n        rightChildId: "quick-ignition-2"\n      },\n      { name: "Hill Climb 2",\n        attribute: "Hill Climb",\n        centerChildId: "hill-climb-3",\n        rightChildId: "cool-run-3"\n      },\n      { name: "Speed Retention 2",\n        attribute: "Legged Speed",\n        leftChildId: "cool-run-3",\n        centerChildId: "improved-gyros-3"\n      },\n      { name: "Cool Run 2",\n        attribute: "Heat Dissipation",\n        leftChildId: "quick-ignition-3"\n      },\n      { name: "Quick Ignition 2",\n        attribute: "Startup Speed",\n        rightChildId: "hill-climb-3"\n      },\n      { name: "Cool Run 3",\n        attribute: "Heat Dissipation",\n        leftChildId: "hill-climb-3",\n        rightChildId: "improved-gyros-3"\n      },\n      { name: "Quick Ignition 3",\n        attribute: "Startup Speed",\n        leftChildId: "improved-gyros-3"\n      },\n      { name: "Hill Climb 3",\n        attribute: "Hill Climb",\n        leftChildId: "heat-containment-4",\n        rightChildId: "quick-ignition-4"\n      },\n      { name: "Improved Gyros 3",\n        attribute: "Tastier Gyros",\n        leftChildId: "quick-ignition-4",\n        rightChildId: "heat-containment-5"\n      },\n      { name: "Heat Containment 4",\n        attribute: "Heat Capacity",\n      },\n      { name: "Quick Ignition 4",\n        attribute: "Startup Speed",\n        leftChildId: "improved-gyros-4",\n        rightChildId: "speed-retention-3"\n      },\n      { name: "Heat Containment 5",\n        attribute: "Heat Capacity",\n      },\n      { name: "Improved Gyros 4",\n        attribute: "Tastier Gyros",\n        rightChildId: "quick-ignition-5"\n      },\n      { name: "Speed Retention 3",\n        attribute: "Legged Speed",\n        leftChildId: "quick-ignition-5"\n      },\n      { name: "Quick Ignition 5",\n        attribute: "Startup Speed",\n        leftChildId: "cool-run-4",\n        rightChildId: "cool-run-5"\n      },\n      { name: "Cool Run 4",\n        attribute: "Heat Dissipation",\n      },\n      { name: "Cool Run 5",\n        attribute: "Heat Dissipation",\n      }\n    ]\n  },\n  /*\n  ==========================================\n                   SENSORS\n  ==========================================\n  */\n  {\n    treeName: "Sensors",\n    nodes: [\n      { name: "Target Info Gathering 1",\n        attribute: "Target Info Speed",\n        leftChildId: "target-decay-1",\n        rightChildId: "sensor-range-1"\n      },\n      { name: "Target Decay 1",\n        attribute: "Target Lock Decay",\n        leftChildId: "target-retention-1",\n        centerChildId: "target-info-gathering-3",\n        rightChildId: "sensor-range-2"\n      },\n      { name: "Sensor Range 1",\n        attribute: "Sensor Range",\n        leftChildId: "sensor-range-2",\n        centerChildId: "sensor-range-3",\n        rightChildId: "target-info-gathering-2"\n      },\n      { name: "Target Retention 1",\n        attribute: "Target Retention",\n      },\n      { name: "Sensor Range 2",\n        attribute: "Sensor Range",\n        leftChildId: "target-info-gathering-3",\n        rightChildId: "sensor-range-3"\n      },\n      { name: "Target Info Gathering 2",\n        attribute: "Target Info Speed",\n        rightChildId: "advanced-zoom"\n      },\n      { name: "Target Info Gathering 3",\n        attribute: "Target Info Speed",\n        centerChildId: "target-info-gathering-4",\n        rightChildId: "target-decay-2"\n      },\n      { name: "Sensor Range 3",\n        attribute: "Sensor Range",\n        leftChildId: "target-decay-2",\n        centerChildId: "target-retention-2"\n      },\n      { name: "Advanced Zoom",\n        attribute: "Zoom Magnifier",\n      },\n      { name: "Target Decay 2",\n        attribute: "Target Lock Decay",\n      },\n      { name: "Target Info Gathering 4",\n        attribute: "Target Info Speed",\n        leftChildId: "radar-deprivation-1",\n        centerChildId: "sensor-range-4"\n      },\n      { name: "Target Retention 2",\n        attribute: "Target Retention",\n        centerChildId: "sensor-range-5",\n        rightChildId: "target-decay-3"\n      },\n      { name: "Radar Deprivation 1",\n        attribute: "Radar Deprivation",\n      },\n      { name: "Target Decay 3",\n        attribute: "Target Lock Decay",\n        rightChildId: "seismic-sensor-1"\n      },\n      { name: "Sensor Range 4",\n        attribute: "Sensor Range",\n        leftChildId: "radar-deprivation-2",\n        centerChildId: "target-info-gathering-5",\n        rightChildId: "target-decay-4"\n      },\n      { name: "Sensor Range 5",\n        attribute: "Sensor Range",\n        leftChildId: "target-decay-4",\n        centerChildId: "target-decay-5",\n        rightChildId: "radar-deprivation-3"\n      },\n      { name: "Seismic Sensor 1",\n        attribute: "Seismic Sensor",\n      },\n      { name: "Radar Deprivation 2",\n        attribute: "Radar Deprivation",\n        leftChildId: "enhanced-ecm-1",\n      },\n      { name: "Target Decay 4",\n        attribute: "Target Lock Decay",\n      },\n      { name: "Radar Deprivation 3",\n        attribute: "Radar Deprivation",\n        rightChildId: "enhanced-ecm-2"\n      },\n      { name: "Enhanced ECM 1",\n        attribute: "Enhanced ECM Systems",\n      },\n      { name: "Target Info Gathering 5",\n        attribute: "Target Info Speed",\n        leftChildId: "seismic-sensor-2",\n        rightChildId: "radar-deprivation-4"\n      },\n      { name: "Target Decay 5",\n        attribute: "Target Lock Decay",\n        rightChildId: "radar-deprivation-5"\n      },\n      { name: "Enhanced ECM 2",\n        attribute: "Enhanced ECM Systems",\n      },\n      { name: "Seismic Sensor 2",\n        attribute: "Seismic Sensor",\n      },\n      { name: "Radar Deprivation 4",\n        attribute: "Radar Deprivation",\n      },\n      { name: "Radar Deprivation 5",\n        attribute: "Radar Deprivation",\n      }\n    ]\n  },\n  /*\n  ==========================================\n                  AUXILIARY\n  ==========================================\n  */\n  {\n    treeName: "Auxiliary",\n    nodes: [\n      { name: "Consumable Slot 1",\n        attribute: "Additional Consumable Slot",\n        leftChildId: "uav-duration",\n        rightChildId: "advanced-salvos-1"\n      },\n      { name: "UAV Duration",\n        attribute: "UAV Duration",\n        leftChildId: "uav-range-1",\n        centerChildId: "capture-assist-1",\n        rightChildId: "enhanced-coolshot-1"\n      },\n      { name: "Advanced Salvos 1",\n        attribute: "Artillery Strike Duration",\n        leftChildId: "enhanced-coolshot-1",\n        centerChildId: "capture-assist-2",\n        rightChildId: "advanced-salvos-2"\n      },\n      { name: "UAV Range 1",\n        attribute: "UAV Sight Range",\n        leftChildId: "extra-uav",\n        centerChildId: "enhanced-narc-1"\n      },\n      { name: "Enhanced Coolshot 1",\n        attribute: "Coolshot Effectiveness",\n        leftChildId: "capture-assist-1",\n        centerChildId: "enhanced-coolshot-2",\n        rightChildId: "capture-assist-2"\n      },\n      { name: "Advanced Salvos 2",\n        attribute: "Artillery Strike Duration",\n        centerChildId: "enhanced-narc-2",\n        rightChildId: "expanded-reserves"\n      },\n      { name: "Extra UAV",\n        attribute: "UAV Capacity",\n        leftChildId: "uav-range-2",\n        centerChildId: "consumable-slot-2"\n      },\n      { name: "Capture Assist 1",\n        attribute: "Point Capture Speed",\n        leftChildId: "enhanced-narc-1",\n        centerChildId: "capture-assist-3",\n        rightChildId: "enhanced-coolshot-2"\n      },\n      { name: "Capture Assist 2",\n        attribute: "Point Capture Speed",\n        leftChildId: "enhanced-coolshot-2",\n        centerChildId: "capture-assist-4",\n        rightChildId: "enhanced-narc-2"\n      },\n      { name: "Expanded Reserves",\n        attribute: "Additional Air / Arty Strike",\n        centerChildId: "consumable-slot-3",\n        rightChildId: "enhanced-spotting"\n      },\n      { name: "UAV Range 2",\n        attribute: "UAV Sight Range",\n      },\n      { name: "Enhanced NARC 1",\n        attribute: "NARC Velocity and Duration",\n        rightChildId: "capture-assist-3"\n      },\n      { name: "Enhanced Coolshot 2",\n        attribute: "Coolshot Effectiveness",\n        leftChildId: "capture-assist-3",\n        centerChildId: "coolant-reserves",\n        rightChildId: "capture-assist-4"\n      },\n      { name: "Enhanced NARC 2",\n        attribute: "NARC Velocity and Duration",\n        leftChildId: "capture-assist-4"\n      },\n      { name: "Enhanced Spotting",\n        attribute: "Air / Arty Strike Accuracy",\n      },\n      { name: "Consumable Slot 2",\n        attribute: "Additional Consumable Slot",\n      },\n      { name: "Capture Assist 3",\n        attribute: "Point Capture Speed",\n      },\n      { name: "Capture Assist 4",\n        attribute: "Point Capture Speed",\n      },\n      { name: "Consumable Slot 3",\n        attribute: "Additional Consumable Slot",\n      },\n      { name: "Coolant Reserves",\n        attribute: "Coolant Reserves",\n        leftChildId: "coolshot-cooldown",\n        rightChildId: "consumable-slot-4"\n      },\n      { name: "Coolshot Cooldown",\n        attribute: "Coolshot Cooldown",\n      },\n      { name: "Consumable Slot 4",\n        attribute: "Additional Consumable Slot",\n      }\n    ]\n  }\n]\n\n// CONCATENATED MODULE: ./src/attribute_map.js\n\nlet attribute_map_attributeMap = [\n\n  /*\n  ==========================================\n                   WEAPONS\n  ==========================================\n  */\n  {\n    name: "Weapon Range",\n    label: "Range",\n    description: "Increases effective range of all weapons",\n    value: "1",\n    template: "+{}%",\n    color: "#a6cee3"\n  }, {\n    name: "Laser Duration",\n    label: "Laser Duration",\n    description: "Reduces burn duration of lasers",\n    value: "3.75",\n    template: "-{}%",\n    color: "#1f78b4",\n    chassisValues: {\n      light: {\n        is: \'3.75\',\n        clan: \'2.50\'\n      },\n      medium: {\n        is: \'3.75\',\n        clan: \'2.50\'\n      },\n      heavy: {\n        is: \'3.75\',\n        clan: \'2.50\'\n      },\n      assault: {\n        is: \'3.75\',\n        clan: \'2.50\'\n      },\n    }\n  }, {\n    name: "Weapon Velocity",\n    label: "Velocity",\n    description: "Increases velocity of ballistic, missile, and PPC projectiles",\n    value: "3",\n    template: "+{}%",\n    color: "#e31a1c"\n  }, {\n    name: "Weapon Cooldown",\n    label: "Cooldown",\n    description: "Reduces all weapon cooldowns",\n    value: "0.75",\n    template: "-{}%",\n    color: "#33a02c",\n    chassisValues: {\n      light: {\n        is: \'0.75\',\n        clan: \'0.6\'\n      },\n      medium: {\n        is: \'0.75\',\n        clan: \'0.6\'\n      },\n      heavy: {\n        is: \'0.75\',\n        clan: \'0.6\'\n      },\n      assault: {\n        is: \'0.75\',\n        clan: \'0.6\'\n      },\n    }\n  }, {\n    name: "Missile Crit Damage",\n    label: "High Explosive",\n    description: "Increases the damage done by missile critical hits against internal structure",\n    value: "7.5",\n    template: "+{}%",\n    color: "#fb9a99"\n  }, {\n    name: "Gauss Held Time",\n    label: "Gauss Charge",\n    description: "Increases the duration which a Gauss weapon can be held charged before depleting",\n    value: "0.75",\n    template: "+{} sec.",\n    color: "#cab2d6"\n  }, {\n    name: "Weapon Heat Gen",\n    label: "Heat Gen",\n    description: "Reduces the heat generated by all weapons",\n    value: "0.75",\n    template: "-{}%",\n    color: "#fdbf6f",\n    chassisValues: {\n      light: {\n        is: \'0.75\',\n        clan: \'0.6\'\n      },\n      medium: {\n        is: \'0.75\',\n        clan: \'0.6\'\n      },\n      heavy: {\n        is: \'0.75\',\n        clan: \'0.6\'\n      },\n      assault: {\n        is: \'0.75\',\n        clan: \'0.6\'\n      },\n    }\n  }, {\n    name: "Ballistic Ammo",\n    label: "Magazine Capacity",\n    description: "Provides additional per-ton ammunition for Ballstic weapons",\n    value: "8",\n    template: "+{}",\n    color: "#ff7f00"\n  }, {\n    name: "Missile Ammo",\n    label: "Missile Rack",\n    description: "Provides additional per-ton ammunition for Missile weapons",\n    value: "1",\n    template: "+{}",\n    color: "#b15928"\n  }, {\n    name: "Missile Spread",\n    label: "Missile Spread",\n    description: "Reduces missile spread",\n    value: "2.5",\n    template: "+{}%",\n    color: "#6a3d9a"\n  }, {\n    name: "LBX Spread",\n    label: "LBX Spread",\n    description: "Reduces LB-X autocannon spread",\n    value: "5",\n    template: "-{}%",\n    color: "#ffff99"\n  }, {\n    name: "Enhanced UAC / RAC",\n    label: "Enhanced UAC",\n    description: "Reduces jam time for Ultra autocannon; improves jam bar reduction for Rotary autocannon",\n    value: "2.5",\n    template: "-{}%",\n    color: "#b2df8a"\n  }, {\n    name: "Flamer Ventilation",\n    label: "Flamer Ventilation",\n    description: "Increases ramped heat dissipation",\n    value: "7.5",\n    template: "-{}%",\n    color: "#ffff99"\n  },\n  /*\n  ==========================================\n                  SURVIVAL\n  ==========================================\n  */\n  {\n    name: "Armor",\n    label: "Armor Hardening",\n    description: "Increases armor",\n    value: "1.6",\n    template: "+{}%",\n    color: "#e41a1c",\n    chassisValues: {\n      light: {\n        is: \'2.5\',\n        clan: \'2.5\'\n      },\n      medium: {\n        is: \'2.0\',\n        clan: \'2.0\'\n      },\n      heavy: {\n        is: \'1.5\',\n        clan: \'1.5\'\n      },\n      assault: {\n        is: \'1.0\',\n        clan: \'1.0\'\n      },\n    }\n  }, {\n    name: "AMS Effectiveness",\n    label: "AMS Overload",\n    description: "Increases Anti-Missile System shootdown rate",\n    value: "0.75",\n    template: "+{}%",\n    color: "#377eb8"\n  }, {\n    name: "Crit Chance Received",\n    label: "Reinforced Casing",\n    description: "Reduces critical hit against internal structure rate",\n    value: "1",\n    template: "-{}%",\n    color: "#4daf4a"\n  }, {\n    name: "Internal Structure",\n    label: "Skeletal Density",\n    description: "Increases internal structure",\n    value: "3.1",\n    template: "+{}%",\n    color: "#984ea3",\n    chassisValues: {\n      light: {\n        is: \'4\',\n        clan: \'4\'\n      },\n      medium: {\n        is: \'3.5\',\n        clan: \'3.5\'\n      },\n      heavy: {\n        is: \'2.5\',\n        clan: \'2.5\'\n      },\n      assault: {\n        is: \'1.5\',\n        clan: \'1.5\'\n      },\n    }\n  }, {\n    name: "Fall Damage",\n    label: "Shock Absorbtion",\n    description: "Reduces damage taken from falls",\n    value: "10",\n    template: "-{}%",\n    color: "#ff7f00"\n  },\n  /*\n  ==========================================\n                    MOBILITY\n  ==========================================\n  */\n  {\n    name: "Acceleration",\n    label: "Kinetic Burst",\n    description: "Increases acceleration",\n    value: "3.5",\n    template: "+{}%",\n    color: "#e41a1c"\n  }, {\n    name: "Deceleration",\n    label: "Hard Brake",\n    description: "Increases deceleration",\n    value: "3.5",\n    template: "+{}%",\n    color: "#377eb8"\n  }, {\n    name: "Max Torso Inclination",\n    label: "Torso Pitch",\n    description: "Increases the degree to which a \'mech can incline its torso",\n    value: "2",\n    template: "+{}%",\n    color: "#4daf4a"\n  }, {\n    name: "Max Arm Inclination",\n    label: "",\n    description: "",\n    value: "",\n    template: "+{}%",\n    color: "#984ea3"\n  }, {\n    name: "Torso Twist Speed",\n    label: "Torso Speed",\n    description: "Increases the speed with which a \'mech can turn its torso",\n    value: "3.5",\n    template: "+{}%",\n    color: "#ff7f00",\n    chassisValues: {\n      light: {\n        is: \'5\',\n        clan: \'5\'\n      },\n      medium: {\n        is: \'4\',\n        clan: \'4\'\n      },\n      heavy: {\n        is: \'3.5\',\n        clan: \'3.5\'\n      },\n      assault: {\n        is: \'3.5\',\n        clan: \'3.5\'\n      },\n    }\n  }, {\n    name: "Max Torso Twist",\n    label: "Torso Yaw",\n    description: "Increases the maximum degree of a \'mechs torso twist",\n    value: "2",\n    template: "+{}%",\n    color: "#ffff33"\n  }, {\n    name: "Turn Speed",\n    label: "Anchor Turn",\n    description: "Increases the \'mechs turning speed",\n    value: "5",\n    template: "+{}%",\n    color: "#a65628"\n  }, {\n    name: "Max Speed",\n    label: "Speed Tweak",\n    description: "Increases the \'mechs top speed",\n    value: "1.5",\n    template: "+{}%",\n    color: "#f781bf"\n  },\n  /*\n  ==========================================\n                  JUMP JETS\n  ==========================================\n  */\n  {\n    name: "Jump Jet Heat Reduction",\n    label: "Heat Shielding",\n    description: "Decreases the heat generated by jump jets",\n    value: "6",\n    template: "-{}%",\n    color: "#e41a1c"\n  }, {\n    name: "Jump Jet Initial Boost",\n    label: "Lift Speed",\n    description: "Increases the initial boost of jump jets",\n    value: "3",\n    template: "+{}%",\n    color: "#377eb8"\n  }, {\n    name: "Jump Jet Forward Thrust",\n    label: "Vectoring",\n    description: "Increases the forward thrust generated by jump jets",\n    value: "25",\n    template: "+{}%",\n    color: "#4daf4a"\n  }, {\n    name: "Jump Jet Burn Time",\n    label: "Vent Calibration",\n    description: "Increases jump jet duration",\n    value: "3",\n    template: "+{}%",\n    color: "#984ea3"\n  },\n  /*\n  ==========================================\n                 OPERATIONS\n  ==========================================\n  */\n  {\n    name: "Startup Speed",\n    label: "Quick Ignition",\n    description: "Improves start-up and shut-down speeds",\n    value: "7",\n    template: "-{}%",\n    color: "#e41a1c"\n  }, {\n    name: "Legged Speed",\n    label: "Speed Retention",\n    description: "Increases max speed while legged; capped at 50 kph",\n    value: "10",\n    template: "+{}%",\n    color: "#377eb8"\n  }, {\n    name: "Heat Capacity",\n    label: "Heat Containment",\n    description: "Increases maximum heat capacity",\n    value: "3",\n    template: "+{}%",\n    color: "#4daf4a"\n  }, {\n    name: "Hill Climb",\n    label: "Hill Climb",\n    description: "Decreases the speed loss caused by climbing slopes",\n    value: "5",\n    template: "+{}%",\n    color: "#984ea3"\n  }, {\n    name: "Heat Dissipation",\n    label: "Cool Run",\n    description: "Increases heat dissipation",\n    value: "2",\n    template: "+{}%",\n    color: "#ff7f00"\n  }, {\n    name: "Tastier Gyros",\n    label: "Improved Gyros",\n    description: "Mmmm... gyros",\n    value: "17.5",\n    template: "-{}%",\n    color: "#ffff33"\n  },\n  /*\n  ==========================================\n                   SENSORS\n  ==========================================\n  */\n  {\n    name: "Target Info Speed",\n    label: "Target Info Gathering",\n    description: "Decreases time needed for detailed targeting info",\n    value: "7",\n    template: "+{}%",\n    color: "#e41a1c"\n  }, {\n    name: "Target Retention",\n    label: "Target Retention",\n    description: "Increases the range at which a targeting lock will be held when the target moves behind the \'mech",\n    value: "200",\n    template: "+{} m.",\n    color: "#377eb8"\n  }, {\n    name: "Sensor Range",\n    label: "Sensor Range",\n    description: "Increases the range of targeting sensors",\n    value: "7",\n    template: "+{}%",\n    color: "#4daf4a"\n  }, {\n    name: "Target Lock Decay",\n    label: "Target Decay",\n    description: "Increases the time a targeting lock will be held when the target moves out line-of-sight",\n    value: "0.7",\n    template: "+{} sec.",\n    color: "#984ea3"\n  }, {\n    name: "Zoom Magnifier",\n    label: "Advanced Zoom",\n    description: "Adds additional x4 zoom mode",\n    value: "1",\n    template: "+{}",\n    color: "#ff7f00"\n  }, {\n    name: "Radar Deprivation",\n    label: "Radar Deprivation",\n    description: "Decreases the time the \'mech will remain targeted when it moves out of line-of-sight",\n    value: "20",\n    template: "+{}%",\n    color: "#ffff33"\n  }, {\n    name: "Seismic Sensor",\n    label: "Seismic Sensor",\n    description: "Indicates enemy \'mech movements on the minimap; \'mech must remain stationary",\n    value: "100",\n    template: "{} m.",\n    color: "#a65628"\n  }, {\n    name: "Enhanced ECM Systems",\n    label: "Enhanced ECM",\n    description: "Decreases the range at which an ECM-protected \'mech can be targeted; decreases the reactivation cooldown of Stealth Armor",\n    value: "22.5",\n    template: "+{}%",\n    color: "#f781bf"\n  },\n  /*\n  ==========================================\n                  AUXILIARY\n  ==========================================\n  */\n  {\n    name: "UAV Duration",\n    label: "UAV Duration",\n    description: "Increases the duration of deployed UAVs",\n    value: "10",\n    template: "+{} sec.",\n    color: "#1f78b4"\n  }, {\n    name: "UAV Sight Range",\n    label: "UAV Range",\n    description: "Increases the targeting range of deployed UAVs",\n    value: "20",\n    template: "+{}%",\n    color: "#777777"\n  }, {\n    name: "Artillery Strike Duration",\n    label: "Advanced Salvos",\n    description: "Increases the duration of air and artillery strikes",\n    value: "15",\n    template: "+{}%",\n    color: "#33a02c"\n  }, {\n    name: "Coolshot Effectiveness",\n    label: "Enhanced Coolshot",\n    description: "Increases heat dissipation of coolshots",\n    value: "15",\n    template: "+{}%",\n    color: "#fb9a99"\n  }, {\n    name: "UAV Capacity",\n    label: "Extra UAV",\n    description: "Adds an additional UAV use",\n    value: "1",\n    template: "+{}",\n    color: "#e31a1c"\n  }, {\n    name: "Point Capture Speed",\n    label: "Capture Assist",\n    description: "Increases rate of capture of control points",\n    value: "5",\n    template: "+{}%",\n    color: "#b15928"\n  }, {\n    name: "NARC Velocity and Duration",\n    label: "Enhanced NARC",\n    description: "Increases NARC beacon projectile speed; increases NARC beacon duration on target",\n    value: "10",\n    template: "+{}%",\n    color: "#ff7f00"\n  }, {\n    name: "Additional Air / Arty Strike",\n    label: "Expanded Reserves",\n    description: "Adds an additional air or artillery strike",\n    value: "1",\n    template: "+{}",\n    color: "#cab2d6"\n  }, {\n    name: "Air / Arty Strike Accuracy",\n    label: "Enhanced Spotting",\n    description: "Increases the accuracy of air and artillery strikes",\n    value: "20",\n    template: "-{}%",\n    color: "#fdbf6f"\n  }, {\n    name: "Additional Consumable Slot",\n    label: "Consumable Slot",\n    description: "Adds an additional consumable slot",\n    value: "1",\n    template: "+{}",\n    color: "#ffff99"\n  }, {\n    name: "Coolant Reserves",\n    label: "Coolant Reserves",\n    description: "Adds an additional coolshot use",\n    value: "1",\n    template: "+{}",\n    color: "#6a3d9a"\n  }, {\n    name: "Coolshot Cooldown",\n    label: "Coolant Cooldown",\n    description: "Reduces cooldown duration on coolshots",\n    value: "25",\n    template: "-{}%",\n    color: "#b2df8a"\n  }\n]\n\n// CONCATENATED MODULE: ./src/dom.js\n\n\n\nlet findById = function (id) {\n  return document.getElementById(id);\n}\n\nlet findByClass = function (klass) {\n  return document.querySelectorAll(klass);\n}\n\n// CONCATENATED MODULE: ./src/util.js\n\n\n\n\nconst maxSkillNodes = 91; // total allowed number of selected skill nodes, per MWO\nconst cbillsPerNode = 60000;\nconst xpPerNode = 800;\n\nconst stringToCss = string => {\n  return string.replace(/ \\/ | /g, "-").replace(/\\./g, "").toLowerCase();\n}\n\n// strips the "px" off the end of a CSS dimension, returns the number value\nconst dimensionAsNumber = dimension => {\n  return parseFloat(dimension.slice(0, -2));\n}\n\nconst treeNameToId = treeName => {\n  return stringToCss(treeName) + "-skill-tree";\n}\n\nconst formatValue = (attribute, value) => {\n  const template = attribute.template.split("{}");\n  return `${template[0]}${value}${template[1]}`;\n}\n\nconst showModal = message => {\n  setModalCloseability(false);\n  findById("permalink-display").textContent = message;\n  findById("modal-overlay").classList.remove("hide");\n}\n\n// takes a boolean\nconst setModalCloseability = closeability => {\n  findById("modal-overlay").setAttribute("data-closeable", closeability.toString());\n}\n\n// From Pimp Trizkit\'s spectacular public service at\n// https://stackoverflow.com/a/13542669/1720976\nconst shadeColor = (hexColor, percent) => {\n  var f=parseInt(hexColor.slice(1),16),t=percent<0?0:255,p=percent<0?percent*-1:percent,R=f>>16,G=f>>8&0x00FF,B=f&0x0000FF;\n  return "#"+(0x1000000+(Math.round((t-R)*p)+R)*0x10000+(Math.round((t-G)*p)+G)*0x100+(Math.round((t-B)*p)+B)).toString(16).slice(1);\n}\n\n// debounce function from https://davidwalsh.name/javascript-debounce-function\nconst debounce = (func, wait, immediate) => {\n\tvar timeout;\n\treturn function() {\n\t\tvar context = this, args = arguments;\n\t\tvar later = function() {\n\t\t\ttimeout = null;\n\t\t\tif (!immediate) func.apply(context, args);\n\t\t};\n\t\tvar callNow = immediate && !timeout;\n\t\tclearTimeout(timeout);\n\t\ttimeout = setTimeout(later, wait);\n\t\tif (callNow) func.apply(context, args);\n\t};\n};\n\n// CONCATENATED MODULE: ./src/pub_sub.js\n\nconst PubSub = (function() {\n\n  const subscriptionTopics = {};\n\n  function publish(topic, data) {\n    if (subscriptionTopics[topic] == undefined) return;\n    for (let subscription_callback of subscriptionTopics[topic]) {\n      subscription_callback(data);\n    }\n  }\n\n  function subscribe(topic, callback) {\n    if (subscriptionTopics[topic] == undefined) {\n      subscriptionTopics[topic] = [];\n    }\n    let index = subscriptionTopics[topic].push(callback) - 1;\n    return {\n      remove: function() {\n        subscriptionTopics[topic][index] = undefined;\n      }\n    }\n  }\n\n  return {\n    publish: publish,\n    subscribe: subscribe\n  }\n\n})();\n\n// CONCATENATED MODULE: ./src/chassis.js\n\n\n\n\n\nlet theWeightClass = 0;\nlet theTechLevel = 0;\n\nconst techLevels = ["clan", "is"];\nconst weightClasses = ["assault", "light", "medium", "heavy"];\n\nconst weightClass = () => {\n  return weightClasses[theWeightClass];\n}\n\nconst techLevel = () => {\n  return techLevels[theTechLevel];\n}\n\nconst incrementWeightClass = () => {\n  theWeightClass == 3 ? theWeightClass = 0 : theWeightClass++;\n  PubSub.publish("chassisWeightUpdated", {});\n  return weightClasses[theWeightClass];\n}\n\nconst incrementTechLevel = () => {\n  theTechLevel == 1 ? theTechLevel = 0 : theTechLevel++;\n  PubSub.publish("chassisTechUpdated", {});\n  return techLevels[theTechLevel];\n}\n\nconst displayString = (input) => {\n  return displayStrings[input];\n}\n\nconst exportRemote = () => {\n  return {\n    weightClass: theWeightClass,\n    techLevel: theTechLevel\n  }\n}\n\nconst importRemote = (weightClass, techLevel) => {\n  theWeightClass = weightClass;\n  theTechLevel = techLevel;\n}\n\nconst displayStrings = {\n  "is": "I.S.",\n  "clan": "Clan",\n  "light": "Light",\n  "medium": "Medium",\n  "heavy": "Heavy",\n  "assault": "Assault"\n}\n\n// CONCATENATED MODULE: ./src/skill_tree.js\n\n\n\n\n\n\n\n\nfunction buildSkillTree(treeSource) {\n\n  var activeTreeName = treeSource[0].name;\n  let skillTrees = buildSkillTrees(treeSource);\n\n  function buildSkillTrees(treeSource) {\n    let skillTrees = [];\n    for (let treeDef of treeSource) {\n      let skillTree = {}\n      skillTree.name = treeDef.treeName;\n      skillTree.nodes = [];\n      for (let nodeDef of treeDef.nodes) {\n        skillTree.nodes.push(buildNode(nodeDef));\n      }\n      skillTrees.push(skillTree);\n    }\n    return skillTrees;\n  }\n\n  function importJson(blob) {\n    for (let serializedTree of blob.trees) {\n      let tree = getTree(serializedTree.name);\n      let serializedNodes = serializedTree.nodes;\n      for (let serializedNode of serializedNodes) {\n        for (let node of tree.nodes) {\n          if (serializedNode.id == node.id) {\n            if (serializedNode.s == 1) {\n              node.selectWithoutEvent(true);\n            } else {\n              node.selectWithoutEvent(false);\n            }\n          }\n        }\n      }\n    }\n    PubSub.publish("treeImported", { activeTreeName: blob.activeTreeName });\n  }\n\n  function updateNoOp() {\n    PubSub.publish("treeChanged", {} );\n  }\n\n  function setActiveTreeName(newName) {\n    activeTreeName = newName;\n  }\n\n  function getActiveTreeName() {\n    return activeTreeName;\n  }\n\n  function getTree(treeName) {\n    for (let tree of trees) {\n      if (tree.name = treeName) {\n        return tree;\n      }\n    }\n  }\n\n  function getTrees() {\n    return skillTrees;\n  }\n\n  function getTree(treeName) {\n    if (treeName == undefined) {\n      return getTree(activeTreeName);\n    } else {\n      for (let tree of skillTrees) {\n        if (tree.name == treeName) {\n          return tree;\n        }\n      }\n    }\n  }\n\n  function getNode(nodeId) {\n    for (let tree of skillTrees) {\n      for (let node of tree.nodes) {\n        if (node.id == nodeId) {\n          return node;\n        }\n      }\n    }\n  }\n\n  function nodeLegal(node) {\n    let isRootNode = parentsOf(node).length === 0;\n    let legalParentIsSelected = false;\n    for (let parent of parentsOf(node)) {\n      legalParentIsSelected = ( parent.selected() && nodeLegal(parent) ) || legalParentIsSelected;\n    }\n    return isRootNode || legalParentIsSelected;\n  }\n\n  function getNodeCount(treeName) {\n    var nodeCount = 0;\n    if (treeName != undefined) {\n      return getTree(treeName).nodes.length;\n    } else {\n      for (let tree of skillTrees) {\n        nodeCount = getNodeCount(tree.name);\n      }\n    }\n    return nodeCount;\n  }\n\n  function getSelectedNodes(treeName) {\n    let selectedNodes = [];\n    if (treeName != undefined) {\n      for (let node of getTree(treeName).nodes) {\n        if (node.selected()) {\n          selectedNodes.push(node);\n        }\n      }\n    } else {\n      for (let skillTree of skillTrees) {\n        selectedNodes = selectedNodes.concat(getSelectedNodes(skillTree.name));\n      }\n    }\n    return selectedNodes;\n  }\n\n  function getLegalNodes(treeName) {\n    let legalNodes = [];\n    if (treeName != undefined) {\n      let selectedNodes = getSelectedNodes(treeName);\n      selectedNodes.filter( node => {\n        nodeLegal(node);\n      });\n      legalNodes = legalNodes.concat(selectedNodes);\n    } else {\n      for (let skillTree of skillTrees) {\n        legalNodes = legalNodes.concat(getLegalNodes(skillTree.name));\n      }\n    }\n    return legalNodes;\n  }\n\n  function childrenOf(node) {\n    let childNodes = [];\n    pushIfDefined(childNodes, getNode(node.leftChildId));\n    pushIfDefined(childNodes, getNode(node.centerChildId));\n    pushIfDefined(childNodes, getNode(node.rightChildId));\n    return childNodes;\n  }\n\n  function parentsOf(node) {\n    let parentNodes = [];\n    for (let tree of skillTrees) {\n      for (let potentialParent of tree.nodes) {\n        if (potentialParent.leftChildId == node.id || potentialParent.centerChildId == node.id || potentialParent.rightChildId == node.id) {\n          parentNodes.push(potentialParent);\n        }\n      }\n    }\n    return parentNodes;\n  }\n\n  function resetTree(treeName) {\n    if (treeName == undefined) {\n      for (let tree of skillTrees) {\n        resetTree(tree.name);\n      }\n    } else {\n      for (let node of getTree(treeName).nodes) {\n        node.selectWithoutEvent(false);\n      }\n      PubSub.publish("treeChanged", {treeName: treeName});\n    }\n  }\n\n  function selectTree(treeName) {\n    for (let node of getTree(treeName).nodes) {\n      node.selectWithoutEvent(true);\n    }\n    PubSub.publish("treeChanged", {treeName: treeName});\n  }\n\n  function pushIfDefined(collection, node) {\n    if (node !== undefined) {\n      collection.push(node);\n    }\n  }\n\n  return {\n    importJson: importJson,\n    updateNoOp: updateNoOp,\n    getActiveTreeName: getActiveTreeName,\n    setActiveTreeName: setActiveTreeName,\n    getTree: getTree,\n    getTrees: getTrees,\n    getNode: getNode,\n    nodeLegal: nodeLegal,\n    getNodeCount: getNodeCount,\n    getSelectedNodes: getSelectedNodes,\n    getLegalNodes: getLegalNodes,\n    parentsOf: parentsOf,\n    childrenOf: childrenOf,\n    resetTree: resetTree,\n    selectTree: selectTree\n  }\n\n}\n\nfunction buildNode(nodeDef) {\n\n  var isSelected = false;\n\n  function selectWithoutEvent(newSelected) {\n    isSelected = newSelected;\n  }\n\n  function selected(newSelected) {\n    if (newSelected == undefined) {\n      return isSelected;\n    } else {\n      isSelected = newSelected;\n      PubSub.publish("nodeChanged", { node: this } );\n    }\n  }\n\n  let lookupAttribute = attributeName => {\n    for (let attribute of attribute_map_attributeMap) {\n      if (attribute.name == attributeName) {\n        return attribute;\n      }\n    }\n  }\n\n  let value = () => {\n    let value = undefined;\n    let attribute = lookupAttribute(nodeDef.attribute);\n    if (attribute.chassisValues != undefined) {\n      value = attribute.chassisValues[weightClass()][techLevel()];\n    } else {\n      value = attribute.value;\n    }\n    return parseFloat(value);\n  }\n\n  return {\n    // selectWithoutEvent used for bulk / batch updating of nodes while\n    //  avoiding event cascades\n    selectWithoutEvent: selectWithoutEvent,\n    selected: selected,\n    name: nodeDef.name,\n    id: stringToCss(nodeDef.name),\n    attribute: lookupAttribute(nodeDef.attribute),\n    value: value,\n    leftChildId: nodeDef.leftChildId,\n    centerChildId: nodeDef.centerChildId,\n    rightChildId: nodeDef.rightChildId\n  };\n}\n\n// CONCATENATED MODULE: ./src/render_tree.js\n\n\n\n\n\n\n\nfunction renderTree(skillTree) {\n\n  skillTree.getTrees().forEach( (tree) => {\n    buildTab(tree);\n    buildTreeDisplay(tree);\n  });\n  findById("node-total").textContent = maxSkillNodes;\n\n  function buildTab(tree) {\n    let tabElement = document.createElement("div");\n    tabElement.id = stringToCss(tree.name + "-tab");\n    tabElement.classList.add("treeTab");\n    tabElement.textContent = tree.name;\n\n    let counterElement = document.createElement("div");\n    counterElement.id = stringToCss(tree.name) + "-tab-counter";\n    counterElement.classList.add("tab-counter");\n    counterElement.textContent = "0 / " + skillTree.getNodeCount(tree.name);\n    tabElement.appendChild(counterElement);\n\n    tabElement.addEventListener("click", () => {\n      PubSub.publish("treeTabClicked", {treeName: tree.name});\n    });\n\n    findById("tabs-pane").append(tabElement);\n  }\n\n  function buildTreeDisplay(tree) {\n    let treeElement = document.createElement("div");\n    treeElement.id = treeNameToId(tree.name);\n    treeElement.classList.add("skill-tree");\n    treeElement.classList.add("hide");\n\n    // these control the spacing between nodes\n    let xSpacing = 90;\n    let ySpacing = 55;\n\n    var leftmostNodeElement = 0;\n    var rightmostNodeElement = 0;\n\n    // TODO: need to do something here to sort the node array.  Probably search\n    // it each time you add a node and add the children of that node to a queue\n    // to be the next loaded\n\n    // Create graph nodes and insert them into the tree\n    for (let node of tree.nodes) {\n      let nodeFrameElement = buildNodeElement(node);\n\n      // the first element in nodes is the root node, so it starts available\n      if (node == tree.nodes[0]) {\n        nodeFrameElement.classList.add("available");\n      } else {\n        nodeFrameElement.classList.add("unavailable");\n      }\n\n      let parent = skillTree.parentsOf(node)[0];\n      if (parent != undefined) {\n        let relativeChildPostiion = getRelativeChildPosition(parent, node);\n        let parentElement = treeElement.querySelector(`#${parent.id}`);\n\n        let parentTop = dimensionAsNumber(parentElement.style.top);\n        let parentLeft = dimensionAsNumber(parentElement.style.left);\n\n        // derive the offsets from the parent\'s position in the pane to the\n        // child\'s\n        if (relativeChildPostiion == "left") {\n          nodeFrameElement.style.top = parentTop + ySpacing + "px";\n          nodeFrameElement.style.left = parentLeft - xSpacing + "px";\n        } else if (relativeChildPostiion == "right") {\n          nodeFrameElement.style.top = parentTop + ySpacing + "px";\n          nodeFrameElement.style.left = parentLeft + xSpacing + "px";\n        } else {\n          nodeFrameElement.style.top = parentTop + (ySpacing * 2) + "px";\n          nodeFrameElement.style.left = parentLeft + "px";\n        }\n\n      } else {\n        nodeFrameElement.style.top = "25px";\n        nodeFrameElement.style.left = "36px";\n      }\n\n      let leftPosition = dimensionAsNumber(nodeFrameElement.style.left);\n      if (leftPosition < leftmostNodeElement) {\n        leftmostNodeElement = leftPosition;\n      }\n      if (leftPosition > rightmostNodeElement) {\n        rightmostNodeElement = leftPosition;\n      }\n\n      treeElement.appendChild(nodeFrameElement);\n\n    }\n\n    let nodeWidth = 100; // width of a graph node, per planner.css\n    let horzPadding = 25; // horizontal padding on either side of the assembled tree\n    let treeWidth = rightmostNodeElement - leftmostNodeElement + nodeWidth + (horzPadding * 2);\n    treeElement.style.width = treeWidth + "px";\n    treeElement.querySelectorAll(".node").forEach( el => {\n      let newLeft = dimensionAsNumber(el.style.left) + (-leftmostNodeElement) + horzPadding + "px";\n      el.style.left = newLeft;\n    });\n\n    for (let node of tree.nodes) {\n      drawNodeEdges(node, treeElement);\n    }\n\n    findById("graph-view").appendChild(treeElement);\n  }\n\n  function buildNodeElement(node) {\n    let nodeElement = findById("hex-template").content.cloneNode(true).firstElementChild;\n    nodeElement.id = node.id;\n    nodeElement.classList.add(`${stringToCss(node.attribute.name)}`);\n    nodeElement.dataset.attribute = stringToCss(node.attribute.name);\n\n    nodeElement.querySelector(".hex-text").textContent = node.attribute.label;\n\n    return nodeElement;\n  }\n\n  // TODO: childrenOf is slow and probably doesn\'t need to be called here, just\n  // to get the ids of the children.  Is it possible to get the child IDs out of\n  // the parentNode without calling childrenOf?\n\n  function drawNodeEdges(parentNode, treeElement) {\n    let parentElement = treeElement.querySelector(`#${parentNode.id}`);\n    for (let child of skillTree.childrenOf(parentNode)) {\n      let childElement = treeElement.querySelector(`#${child.id}`);\n\n      let lineElement = document.createElement("div");\n      lineElement.classList.add("node-connect-line");\n      lineElement.classList.add(parentNode.id);\n\n      let parentX = dimensionAsNumber(parentElement.style.left);\n      let parentY = dimensionAsNumber(parentElement.style.top);\n      let childX = dimensionAsNumber(childElement.style.left);\n      let childY = dimensionAsNumber(childElement.style.top);\n\n      let deltaX = parentX - childX;\n      let deltaY = parentY - childY;\n\n      let angle  = (Math.atan2(deltaY, deltaX) * 180 / Math.PI) + 180;\n      let transform = "rotate(" + (angle) + "deg)";\n\n      if (angle == 90) {\n        lineElement.style.width = childY - parentY + "px";\n      } else {\n        lineElement.style.width = childY - parentY + 40 + "px";\n      }\n\n      lineElement.style.transform = transform;\n      lineElement.style.top = (parentY + 47) + "px";\n      lineElement.style.left = (parentX + 55) + "px";\n\n      treeElement.appendChild(lineElement);\n    }\n  }\n\n  function getRelativeChildPosition(parent, child) {\n    if (parent.leftChildId == child.id) {\n      return "left";\n    } else if (parent.centerChildId == child.id) {\n      return "center";\n    } else if (parent.rightChildId == child.id) {\n      return "right";\n    }\n    return "child not found in getRelativeChildPosition()"\n  }\n\n}\n\n// CONCATENATED MODULE: ./src/bonuses.js\n\n\n\n\n\nlet sort = 0;\n\nconst sorts = ["tree", "alpha"];\n\nconst bonusSort = () => {\n  return sorts[sort];\n}\n\nconst incrementBonusSort = () => {\n  sort == 1 ? sort = 0 : sort++;\n  PubSub.publish("bonusSortChanged", {bonusSort: sorts[sort], label: bonuses_displayStrings[sorts[sort]]});\n  return sorts[sort];\n}\n\nconst aggregateBonuses = (nodes) => {\n  let bonuses = [];\n  for (let node of nodes) {\n    let bonusForAttribute = getBonusForAttribute(bonuses, node.attribute);\n    if (bonusForAttribute != undefined) {\n      bonusForAttribute.value = ((bonusForAttribute.value * 10) + (node.value() * 10)) / 10;\n    } else {\n      bonuses.push({attribute: node.attribute, value: node.value()});\n    }\n  }\n  bonuses.sort( (a, b) => {\n    return (a.attribute.name > b.attribute.name ? 1 : -1);\n  })\n  return bonuses;\n}\n\nfunction getBonusForAttribute(bonuses, attribute) {\n  for (let bonus of bonuses) {\n    if (bonus.attribute == attribute) {\n      return bonus;\n    }\n  }\n}\n\nconst bonuses_displayString = (input) => {\n  return bonuses_displayStrings[input];\n}\n\n// Note: the TYPE of sort is correlated with a button label that lists the OTHER\n// sort, as the button is claiming to CHANGE the sorting type to the non-active\n// one\nconst bonuses_displayStrings = {\n  "tree": "Sort by Alpha",\n  "alpha": "Sort by Tree"\n}\n\n// CONCATENATED MODULE: ./src/event_wiring.js\n\n\n\n\n\n\n\n\n\nfunction wireEvents(skillTree) {\n\n  PubSub.subscribe("nodeClicked", data => {\n    toggleNode(data.node);\n  });\n\n  PubSub.subscribe("nodeChanged", data => {\n    let treeName = skillTree.getActiveTreeName();\n    updateTotalNodesAndCosts(skillTree.getSelectedNodes().length);\n    updatePerTreeNodeCountDisplay(treeName,\n                                  skillTree.getSelectedNodes(treeName).length,\n                                  skillTree.getNodeCount(treeName)\n    );\n    updateTreeColors(skillTree.getActiveTreeName());\n    updateBonuses();\n    revertURL();\n  });\n\n  PubSub.subscribe("treeChanged", data => {\n    updateTotalNodesAndCosts(skillTree.getSelectedNodes().length);\n    updatePerTreeNodeCountDisplay(data.treeName,\n                                  skillTree.getSelectedNodes(data.treeName).length,\n                                  skillTree.getNodeCount(data.treeName)\n    );\n    updateTreeColors(data.treeName);\n    updateBonuses();\n    revertURL();\n  });\n\n  PubSub.subscribe("treeImported", data => {\n    updateTotalNodesAndCosts(skillTree.getSelectedNodes().length);\n    updatePerTreeNodeCountDisplay();\n    updateTreeColors();\n    updateBonuses();\n    PubSub.publish("treeTabClicked", { treeName: data.activeTreeName } );\n    PubSub.publish("toggleChassisWeight", {} );\n    PubSub.publish("toggleChassisTech", {} );\n  });\n\n  PubSub.subscribe("treeTabClicked", data => {\n    changeSkillTree(data.treeName);\n  });\n\n  PubSub.subscribe("resetActiveTree", data => {\n    skillTree.resetTree(data.treeName);\n  });\n\n  PubSub.subscribe("resetAllTrees", data => {\n    skillTree.resetTree();\n  });\n\n  PubSub.subscribe("selectTree", data => {\n    skillTree.selectTree(data.treeName);\n  });\n\n  PubSub.subscribe("toggleNodeColorization", data => toggleNodeColorization());\n\n  PubSub.subscribe("toggleChassisWeight", data => {\n    let toggleElement = findById("chassis-weight-toggle");\n    toggleElement.textContent = displayString(incrementWeightClass());\n  });\n\n  PubSub.subscribe("toggleChassisTech", data => {\n    let toggleElement = findById("chassis-tech-toggle");\n    toggleElement.textContent = displayString(incrementTechLevel());\n  });\n\n  PubSub.subscribe("chassisWeightUpdated", data => {\n    updateHexValues();\n    updateBonuses();\n  });\n\n  PubSub.subscribe("chassisTechUpdated", data => {\n    updateHexValues();\n    updateBonuses();\n  });\n\n  PubSub.subscribe("bonusSortChanged", data => {\n    updateBonusSortButton(data.label);\n    // don\'t really need to do a full recalc here, just re-render with the new\n    // sort display, but it\'s quick anyway\n    updateBonuses();\n  });\n\n  PubSub.subscribe("nodeMouseEnter", data => {\n    for (let node of findById(`${treeNameToId(data.treeName)}`).querySelectorAll(".node")) {\n      if (node.dataset.attribute == data.attribute) {\n        node.classList.add("mouse-over");\n      } else {\n        node.classList.remove("mouse-over");\n      }\n    }\n  });\n\n  PubSub.subscribe("nodeMouseLeft", data => {\n    for (let node of findById(`${treeNameToId(data.treeName)}`).querySelectorAll(".node")) {\n      node.classList.remove("mouse-over");\n    }\n  });\n\n  function toggleNode(node) {\n    node.selected(!node.selected());\n  }\n\n  function updateTreeColors(treeName) {\n    if (treeName == undefined) {\n      for (let tree of skillTree.getTrees()) {\n        updateTreeColors(tree.name);\n      }\n    } else {\n      let tree = skillTree.getTree(treeName);\n      for (let node of tree.nodes) {\n        let nodeElement = findById(node.id);\n        let childEdges = findByClass(`.${node.id}`);\n        if (node.selected()) {\n          nodeElement.classList.add("selected");\n          skillTree.nodeLegal(node) ? nodeElement.classList.remove("illegal") : nodeElement.classList.add("illegal");\n          for (let edge of childEdges) {\n            edge.classList.add("selected");\n            skillTree.nodeLegal(node) ? edge.classList.remove("illegal") : edge.classList.add("illegal");\n          }\n        } else {\n          nodeElement.classList.remove("selected");\n          nodeElement.classList.remove("illegal");\n          for (let edge of childEdges) {\n            edge.classList.remove("selected");\n            edge.classList.remove("illegal");\n          }\n        }\n      }\n    }\n  }\n\n  function updateHexValues() {\n    let nodeElements = findByClass(\'.node\');\n    for (let nodeElement of nodeElements) {\n      let node = skillTree.getNode(nodeElement.id);\n      nodeElement.querySelector(\'.hex-value\').textContent = formatValue(node.attribute, node.value());\n    }\n  }\n\n  function updateBonusSortButton(newLabel) {\n    findById("bonus-sort-button").textContent = newLabel;\n  }\n\n  function updateBonuses() {\n    findById("bonuses-display").innerHTML = "";\n    let bonusFrame = document.createDocumentFragment();\n    if (bonusSort() === \'tree\') {\n      let trees = skillTree.getTrees();\n      for (let tree of trees) {\n        let treeName = tree.name;\n        if (skillTree.getLegalNodes(treeName).length > 0) {\n          let treeNameElement = document.createElement("div");\n          treeNameElement.classList.add("bonus-tree-name");\n          treeNameElement.classList.add("bonus-list-element");\n          treeNameElement.textContent = treeName;\n          bonusFrame.append(treeNameElement);\n          appendBonuses(aggregateBonuses(skillTree.getLegalNodes(treeName)), bonusFrame);\n        }\n      }\n    } else if (bonusSort() == \'alpha\') {\n      appendBonuses(aggregateBonuses(skillTree.getLegalNodes()), bonusFrame);\n    }\n\n    findById("bonuses-display").append(bonusFrame);\n\n    if (findById("bonuses-display").offsetHeight > 560) {\n      findByClass(".bonus-list-element").forEach(function (el) {\n        el.classList.add("min");\n      });\n    } else {\n      findByClass(".bonus-list-element").forEach(function (el) {\n        el.classList.remove("min");\n      });\n    }\n\n  }\n\n  function appendBonuses(bonuses, bonusFrame) {\n    bonuses.forEach((bonus, index) => {\n      let bonusDisplayElement = document.createElement("div");\n      bonusDisplayElement.classList.add("bonus-display");\n      bonusDisplayElement.classList.add("bonus-list-element");\n      bonusDisplayElement.textContent = bonus.attribute.name + " " + formatValue(bonus.attribute, bonus.value);;\n      bonusFrame.append(bonusDisplayElement);\n    });\n  }\n\n  function changeSkillTree(treeName) {\n    skillTree.setActiveTreeName(treeName);\n    findByClass(".treeTab").forEach(function (el) {\n      el.classList.remove("selected");\n    });\n    getTabForTreeName(treeName).classList.add("selected");\n\n    findByClass(".skill-tree").forEach(function (el) {\n      el.classList.add("hide");\n    });\n    let treeElement = findById(treeNameToId(treeName));\n    treeElement.classList.remove("hide");\n  }\n\n  function getTabForTreeName(treeName) {\n    return findById(stringToCss(treeName) + "-tab");\n  }\n\n  function updateTotalNodesAndCosts(selectedNodeCount) {\n    findById("node-selection-counter").textContent = selectedNodeCount;\n    if (selectedNodeCount > maxSkillNodes) {\n      findById("node-selection-counter").classList.add("exceeded-max-nodes")\n    } else {\n      findById("node-selection-counter").classList.remove("exceeded-max-nodes")\n    }\n    let totalCbillCost = `${(selectedNodeCount * cbillsPerNode).toLocaleString("en-US")} C-Bills and`;\n    let totalXpCost = `${(selectedNodeCount * xpPerNode).toLocaleString("en-US")} XP / GXP`;\n    findById("cost-totals-display").innerHTML = totalCbillCost + "</br>" + totalXpCost;\n  }\n\n  function updatePerTreeNodeCountDisplay(treeName, selectedTreeNodesCount, treeNodesCount) {\n    if (treeName == undefined) {\n      for (let tree of skillTree.getTrees()) {\n        let treeTabName = `${stringToCss(tree.name)}-tab-counter`;\n        let nodeCountDisplay = findById(treeTabName);\n        let selectedCount = skillTree.getSelectedNodes(tree.name).length;\n        let totalCount = skillTree.getNodeCount(tree.name);\n        nodeCountDisplay.textContent = `${selectedCount} / ${totalCount}`;\n      }\n    } else {\n      let nodeCountDisplay = findById(`${stringToCss(treeName)}-tab-counter`);\n      nodeCountDisplay.textContent = `${selectedTreeNodesCount} / ${treeNodesCount}`;\n    }\n  }\n\n  function revertURL() {\n    history.pushState({}, "", window.location.origin + window.location.pathname);\n  }\n\n  function toggleNodeColorization() {\n    document.body.classList.toggle("colorize-nodes");\n  }\n\n}\n\n// CONCATENATED MODULE: ./src/cold_storage.js\n\n\n\n\n\n\n\n\nconst loadFromRemoteId = function(skillTree) {\n  let regex = /([^//?]*)$/;\n  let remoteId = regex.exec(window.location.href)[1];\n\n  if ((remoteId != undefined) && (remoteId !== "")) {\n    showModal("Reactor online, weapons online, sensors online....");\n\n    fetch("https://jsonblob.com/api/jsonBlob/" + remoteId, {\n      method: "GET",\n      headers: {\n        "Content-Type": "application/json"\n      }\n    })\n    .then(function(response) {\n      if (response.ok) {\n        return response.json();\n      } else {\n        console.log("Error response - " + response);\n      }\n    })\n    .then(function(json) {\n      skillTree.importJson(json);\n      importRemote(json.weightClass, json.techLevel);\n      findById("modal-overlay").classList.add("hide");\n    });\n  } else {\n    skillTree.updateNoOp();\n  }\n}\n\nPubSub.subscribe("getPermalink", (data) => {\n  showModal("Permalink inbound on your position.");\n  fetch("https://jsonblob.com/api/jsonBlob", {\n    method: "POST",\n    body: serializeTrees(data.skillTree),\n    headers: {\n      "Content-Type": "application/json"\n    }\n  }).then(function(response) {\n    let regex = /([^//]*)$/;\n    let remoteId = regex.exec(response.headers.get("location"))[0];\n    findById("permalink-display").textContent = pushRemoteIdToURL(remoteId);\n    findById("modal-overlay").classList.remove("hide");\n    setModalCloseability(true);\n  }, function(error) {\n    console.log(error.message);\n    setModalCloseability(true);\n  });\n});\n\nfunction serializeTrees(skillTree) {\n  let trees = skillTree.getTrees();\n  let serializedTrees = {};\n  serializedTrees.trees = [];\n  serializedTrees.activeTreeName = skillTree.getActiveTreeName();\n  serializedTrees.weightClass = exportRemote().weightClass;\n  serializedTrees.techLevel = exportRemote().techLevel;\n  for (let tree of trees) {\n    let serializedTree = {\n      name: tree.name,\n      nodes: []\n    }\n    for (let node of tree.nodes) {\n      serializedTree.nodes.push(serializeNode(node));\n    }\n    serializedTrees.trees.push(serializedTree);\n  }\n  return JSON.stringify(serializedTrees);\n}\n\nfunction serializeNode(node) {\n  let s;\n  if (node.selected()) {\n    s = 1;\n  } else {\n    s = 0;\n  }\n  return {\n    id: node.id,\n    s: s\n  }\n}\n\nfunction pushRemoteIdToURL(remoteId) {\n  let remoteURL = window.location.origin + window.location.pathname + "?" + remoteId\n  history.pushState({}, "", remoteURL);\n  return remoteURL;\n}\n\n// CONCATENATED MODULE: ./src/attribute_colors.js\n\n\n\n\n\nfunction insertAttributeColors(attributeMap) {\n\n  let colorizationStylesElement = document.createElement(\'style\');\n  document.head.appendChild(colorizationStylesElement);\n  let colorizationStyles = colorizationStylesElement.sheet;\n  for (let attribute of attributeMap) {\n\n    // background\n    // selected\n    colorizationStyles.insertRule(`.colorize-nodes .${stringToCss(attribute.name)}.selected .hex-graphic { fill: ${ shadeColor(attribute.color, 0.2) }`);\n    // unselected\n    colorizationStyles.insertRule(`.colorize-nodes .${stringToCss(attribute.name)} .hex-graphic { fill: ${ shadeColor(attribute.color, -0.55) }`);\n\n    // border\n    // selected, no mouse\n    colorizationStyles.insertRule(`.colorize-nodes ` +\n      `.${stringToCss(attribute.name)}.selected .hex-graphic ` +\n      ` { stroke: ${ shadeColor(attribute.color, -0.5) }`);\n    // selected, mouse over\n    colorizationStyles.insertRule(`.colorize-nodes ` +\n      `.${stringToCss(attribute.name)}.selected.mouse-over .hex-graphic ` +\n      `{ stroke: ${ shadeColor(attribute.color, -0.25) }`);\n    // unselected, no mouse\n    colorizationStyles.insertRule(`.colorize-nodes ` +\n      `.${stringToCss(attribute.name)} .hex-graphic ` +\n      `{ stroke: ${ shadeColor(attribute.color, -0.75) }`);\n    // unselected, mouse over\n    colorizationStyles.insertRule(`.colorize-nodes ` +\n      `.${stringToCss(attribute.name)}.mouse-over .hex-graphic ` +\n      `{ stroke: ${ shadeColor(attribute.color, -0.65) }`);\n\n    // hex text\n    colorizationStyles.insertRule(`.colorize-nodes ` +\n     `.${stringToCss(attribute.name)} ` +\n     `.hex-text { color: ${ shadeColor(attribute.color, 0.9) }`);\n     colorizationStyles.insertRule(`.colorize-nodes ` +\n      `.${stringToCss(attribute.name)}.selected ` +\n      `.hex-text { color: ${ shadeColor(attribute.color, -0.8) }`);\n\n    // box shadow\n    // selected, mouse over\n    colorizationStyles.insertRule(`.colorize-nodes ` +\n      `.${stringToCss(attribute.name)}.mouse-over.selected ` +\n      `.hex-graphic { ` +\n      `-webkit-filter: drop-shadow(0px 0px 8px ${ shadeColor(attribute.color, 0.5) }); ` +\n      `filter:         drop-shadow(0px 0px 8px ${ shadeColor(attribute.color, 0.5) }); ` +\n      `}`);\n    // unselected, mouse over\n    colorizationStyles.insertRule(`.colorize-nodes ` +\n      `.${stringToCss(attribute.name)}.mouse-over ` +\n      `.hex-graphic { ` +\n      `-webkit-filter: drop-shadow(0px 0px 8px ${ shadeColor(attribute.color, 0.3) }); ` +\n      `filter:         drop-shadow(0px 0px 8px ${ shadeColor(attribute.color, 0.3) }); ` +\n      `}`);\n    // illegal, mouse over\n    colorizationStyles.insertRule(`body.colorize-nodes ` +\n      `.${stringToCss(attribute.name)}.mouse-over.illegal ` +\n      `.hex-graphic { ` +\n      `-webkit-filter: drop-shadow(0px 0px 8px red); ` +\n      `filter:         drop-shadow(0px 0px 8px red); ` +\n      `}`);\n\n    // tooltip\n    // tooltip border\n    colorizationStyles.insertRule(`.colorize-nodes ` +\n    `#tooltip.${stringToCss(attribute.name)} ` +\n    `{ border-color: ${ shadeColor(attribute.color, -0.75) }`);\n    // tooltip namebar text\n    colorizationStyles.insertRule(`.colorize-nodes ` +\n    `#tooltip.${stringToCss(attribute.name)} #tooltip-name-bar ` +\n    `{ color: ${ shadeColor(attribute.color, 0.9) }; }`);\n\n    // tooltip namebar background\n    colorizationStyles.insertRule(`.colorize-nodes ` +\n    `#tooltip.${stringToCss(attribute.name)} #tooltip-name-bar ` +\n    `{ background: linear-gradient(135deg, ${ shadeColor(attribute.color, -0.75) }BB, ` +\n    `${ shadeColor(attribute.color, -0.4) }BB); }`);\n\n    // tooltip description background\n    colorizationStyles.insertRule(`.colorize-nodes ` +\n    `#tooltip.${stringToCss(attribute.name)} ` +\n    `{ background: linear-gradient(135deg, ${ shadeColor(attribute.color, 0.2) }BB, ` +\n    `${ shadeColor(attribute.color, 0.5) }BB); }`);\n\n  }\n}\n\n// EXTERNAL MODULE: ./node_modules/dom-to-image/src/dom-to-image.js\nvar dom_to_image = __webpack_require__(0);\nvar dom_to_image_default = /*#__PURE__*/__webpack_require__.n(dom_to_image);\n\n// CONCATENATED MODULE: ./src/export_to_image.js\n\n\n\n\n\n\n\n\nlet saveToFile = function (rootNode) {\n\n  let treeView = buildTreeView();\n  document.body.appendChild(treeView);\n  dom_to_image_default.a.toJpeg(treeView, { quality: 0.9 } )\n  .then( dataUrl => {\n    document.body.removeChild(treeView);\n\n    // let image = new Image();\n    // image.src = dataUrl;\n    // document.body.appendChild(image);\n\n    var link = document.createElement(\'a\');\n    link.download = \'skill_tree\';\n    link.href = dataUrl;\n    link.click();\n\n\n  });\n\n\n}\n\nfunction buildTreeView() {\n\n  let treesView = findById("trees-view-template").content.cloneNode(true).firstElementChild;\n\n  for (let tree of tree_source_treeSource) {\n    let labeledTree = findById("labeled-tree-template").content.cloneNode(true).firstElementChild;\n    labeledTree.querySelector(\'.tree-label\').textContent = tree.treeName;\n    let treeElement = findById(treeNameToId(tree.treeName)).cloneNode(true);\n    treeElement.id = \'\';\n    treeElement.classList.remove(\'hide\');\n    labeledTree.appendChild(treeElement);\n    treesView.appendChild(labeledTree);\n  }\n\n  return treesView;\n\n}\n\n// CONCATENATED MODULE: ./src/index.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndocument.addEventListener("DOMContentLoaded", function() {\n\n  let skillTree = buildSkillTree(tree_source_treeSource);\n\n  insertAttributeColors(attribute_map_attributeMap);\n  renderTree(skillTree);\n  wireEvents(skillTree);\n  loadFromRemoteId(skillTree);\n  PubSub.publish("toggleChassisWeight");\n  PubSub.publish("toggleChassisTech");\n  PubSub.publish("bonusSortChanged", {bonusSort: "tree", label: "Sort By Alpha"});\n  PubSub.publish("treeTabClicked", {treeName: skillTree.getTrees()[0].name});\n\n  findById("reset-tree-button").addEventListener("click", () => {\n    PubSub.publish("resetActiveTree", {treeName: skillTree.getActiveTreeName()});\n  });\n\n  findById("reset-all-button").addEventListener("click", () => {\n    PubSub.publish("resetAllTrees");\n  });\n\n  findById("select-tree-button").addEventListener("click", () => {\n    PubSub.publish("selectTree", {treeName: skillTree.getActiveTreeName()});\n  });\n\n  findById("permalink-button").addEventListener("click", () => {\n    PubSub.publish("getPermalink", {skillTree: skillTree} );\n  });\n\n  findById("colorize-nodes-button").addEventListener("click", function(event) {\n    PubSub.publish("toggleNodeColorization");\n  });\n\n  findById("save-to-file-button").addEventListener("click", function(event) {\n    saveToFile(findById("graph-view"));\n  });\n\n  findById("chassis-weight-toggle").addEventListener("click", function(event) {\n    PubSub.publish("toggleChassisWeight");\n  });\n\n  findById("chassis-tech-toggle").addEventListener("click", function(event) {\n    PubSub.publish("toggleChassisTech");\n  });\n\n  findById("bonus-sort-button").addEventListener("click", function(even) {\n    incrementBonusSort();\n  });\n\n  for (let node of findByClass(".node")) {\n    node.addEventListener("mouseenter", function(event) {\n      PubSub.publish("nodeMouseEnter", {attribute: this.dataset.attribute, treeName: skillTree.getActiveTreeName()} );\n    });\n  }\n\n  for (let node of findByClass(".node")) {\n    node.addEventListener("mouseleave", function(event) {\n      PubSub.publish("nodeMouseLeft", {attribute: this.dataset.attribute, treeName: skillTree.getActiveTreeName()} );\n    });\n  }\n\n  var isMouseDragging = false;\n  findById("graph-view").addEventListener("mousedown", function(event) {\n    isMouseDragging = true;\n  });\n\n  findById("graph-view").addEventListener("mouseup", function(event) {\n    isMouseDragging = false;\n  });\n\n  var previousNode = undefined;\n  findById("graph-view").addEventListener("mousemove", function(event) {\n    if (isMouseDragging) {\n      let nodeElement = event.target.closest(\'.node\');\n      if (nodeElement != undefined && nodeElement != previousNode) {\n        let node = skillTree.getNode(nodeElement.id)\n        node.selected(!node.selected());\n        previousNode = nodeElement;\n      };\n    }\n  });\n\n  findById("graph-view").addEventListener("click", function(event) {\n    let node = event.target.closest(\'.node\');\n    if (node != undefined) {\n      PubSub.publish("nodeClicked", { node: skillTree.getNode(node.id) } );\n    };\n  });\n\n  var lastTooltipTarget = undefined;\n  findById("graph-view").addEventListener("mousemove", function(event) {\n    let tooltip = findById(\'tooltip\');\n    let node = event.target.closest(\'.node\');\n    if (node == undefined || node != lastTooltipTarget) {\n      tooltip.classList.remove(\'full-tooltip\');\n      tooltip.classList.add(\'zero-tooltip\');\n    }\n    debouncedMouseMove(tooltip, node, event);\n    lastTooltipTarget = node;\n  });\n\n  var debouncedMouseMove = debounce(function(tooltip, node, event) {\n    if (node != undefined) {\n      styleTooltip(tooltip, node, event);\n      setTimeout(() => {\n        tooltip.classList.remove(\'zero-tooltip\');\n        tooltip.classList.add(\'full-tooltip\');\n      }, 10);\n    }\n  }, 800);\n\n  function styleTooltip(tooltip, nodeElement, event) {\n    tooltip.style.top = dimensionAsNumber(nodeElement.style.top) + 65 +"px";\n    tooltip.style.left = dimensionAsNumber(nodeElement.style.left) + 225 + "px";\n    let attribute = getAttribute(nodeElement.dataset.attribute);\n    tooltip.classList.remove(tooltip.dataset.attribute);\n    tooltip.classList.add(nodeElement.dataset.attribute);\n    tooltip.dataset.attribute = nodeElement.dataset.attribute;\n    let node = skillTree.getNode(nodeElement.id);\n    findById("tooltip-name-bar").textContent = node.name;\n    findById("tooltip-description").textContent = attribute.description;\n  }\n\n  function getAttribute(attributeCss) {\n    for (let attribute of attribute_map_attributeMap) {\n      if (stringToCss(attribute.name) == attributeCss) {\n        return attribute;\n      }\n    }\n  }\n\n  findById("permalink-display").addEventListener("click", function(event) {\n    event.stopPropagation();\n  });\n\n  findById("modal-overlay").addEventListener("click", function() {\n    let closeable = findById("modal-overlay").getAttribute("data-closeable");\n    if (closeable == "true") {\n      findById("modal-overlay").classList.add("hide");\n    }\n  });\n\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy90cmVlX3NvdXJjZS5qcz8zMTE1Iiwid2VicGFjazovLy8uL3NyYy9hdHRyaWJ1dGVfbWFwLmpzP2QwM2MiLCJ3ZWJwYWNrOi8vLy4vc3JjL2RvbS5qcz9jYmYwIiwid2VicGFjazovLy8uL3NyYy91dGlsLmpzP2UwZWIiLCJ3ZWJwYWNrOi8vLy4vc3JjL3B1Yl9zdWIuanM/M2NjZSIsIndlYnBhY2s6Ly8vLi9zcmMvY2hhc3Npcy5qcz84ZDc5Iiwid2VicGFjazovLy8uL3NyYy9za2lsbF90cmVlLmpzPzQwZGUiLCJ3ZWJwYWNrOi8vLy4vc3JjL3JlbmRlcl90cmVlLmpzP2IyOTUiLCJ3ZWJwYWNrOi8vLy4vc3JjL2JvbnVzZXMuanM/OWVjZCIsIndlYnBhY2s6Ly8vLi9zcmMvZXZlbnRfd2lyaW5nLmpzP2E4YjUiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbGRfc3RvcmFnZS5qcz8zMmUxIiwid2VicGFjazovLy8uL3NyYy9hdHRyaWJ1dGVfY29sb3JzLmpzP2RiZWMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2V4cG9ydF90b19pbWFnZS5qcz9hNzg3Iiwid2VicGFjazovLy8uL3NyYy9pbmRleC5qcz9iNjM1Il0sInNvdXJjZXNDb250ZW50IjpbIlxuLy8gRmlyc3QgZWxlbWVudCBvZiB0aGUgbm9kZXMgYXJyYXkgTVVTVCBiZSB0aGUgcm9vdCBub2RlIG9mIHRoZSBza2lsbCBncmFwaFxuZXhwb3J0IGxldCB0cmVlU291cmNlID0gW1xuICAvKlxuICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICAgICAgICAgICAgICAgICBXRUFQT05TXG4gID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAqL1xuICB7XG4gICAgdHJlZU5hbWU6IFwiV2VhcG9uc1wiLFxuICAgIG5vZGVzOiBbXG4gICAgICB7IG5hbWU6IFwiUmFuZ2UgMVwiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiV2VhcG9uIFJhbmdlXCIsXG4gICAgICAgIGxlZnRDaGlsZElkOiBcInJhbmdlLTJcIixcbiAgICAgICAgcmlnaHRDaGlsZElkOiBcInJhbmdlLTNcIlxuICAgICAgfSxcbiAgICAgIHsgbmFtZTogXCJSYW5nZSAyXCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJXZWFwb24gUmFuZ2VcIixcbiAgICAgICAgbGVmdENoaWxkSWQ6IFwicmFuZ2UtNFwiLFxuICAgICAgICByaWdodENoaWxkSWQ6IFwicmFuZ2UtNVwiXG4gICAgICB9LFxuICAgICAgeyBuYW1lOiBcIlJhbmdlIDNcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIldlYXBvbiBSYW5nZVwiLFxuICAgICAgICBsZWZ0Q2hpbGRJZDogXCJyYW5nZS01XCIsXG4gICAgICAgIHJpZ2h0Q2hpbGRJZDogXCJyYW5nZS02XCJcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiUmFuZ2UgNFwiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiV2VhcG9uIFJhbmdlXCIsXG4gICAgICAgIGxlZnRDaGlsZElkOiBcImNvb2xkb3duLTFcIixcbiAgICAgICAgY2VudGVyQ2hpbGRJZDogXCJoaWdoLWV4cGxvc2l2ZS0xXCIsXG4gICAgICAgIHJpZ2h0Q2hpbGRJZDogXCJ2ZWxvY2l0eS0xXCJcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiUmFuZ2UgNVwiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiV2VhcG9uIFJhbmdlXCIsXG4gICAgICAgIGNlbnRlckNoaWxkSWQ6IFwiY29vbGRvd24tNFwiXG4gICAgICB9LFxuICAgICAgeyBuYW1lOiBcIlJhbmdlIDZcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIldlYXBvbiBSYW5nZVwiLFxuICAgICAgICBsZWZ0Q2hpbGRJZDogXCJ2ZWxvY2l0eS0yXCIsXG4gICAgICAgIGNlbnRlckNoaWxkSWQ6IFwiZ2F1c3MtY2hhcmdlLTFcIixcbiAgICAgICAgcmlnaHRDaGlsZElkOiBcImNvb2xkb3duLTJcIlxuICAgICAgfSxcblx0ICB7IG5hbWU6IFwiQ29vbGRvd24gMVwiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiV2VhcG9uIENvb2xkb3duXCIsXG4gICAgICAgIGxlZnRDaGlsZElkOiBcImNvb2xkb3duLTNcIlxuICAgICAgfSxcblx0ICB7IG5hbWU6IFwiVmVsb2NpdHkgMVwiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiV2VhcG9uIFZlbG9jaXR5XCIsXG4gICAgICAgIHJpZ2h0Q2hpbGRJZDogXCJjb29sZG93bi00XCJcbiAgICAgIH0sXG5cdCAgeyBuYW1lOiBcIlZlbG9jaXR5IDJcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIldlYXBvbiBWZWxvY2l0eVwiLFxuICAgICAgICBsZWZ0Q2hpbGRJZDogXCJjb29sZG93bi00XCJcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiQ29vbGRvd24gMlwiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiV2VhcG9uIENvb2xkb3duXCIsXG4gICAgICAgIHJpZ2h0Q2hpbGRJZDogXCJjb29sZG93bi01XCJcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiQ29vbGRvd24gM1wiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiV2VhcG9uIENvb2xkb3duXCIsXG4gICAgICAgIGxlZnRDaGlsZElkOiBcInJhbmdlLTdcIixcbiAgICAgICAgY2VudGVyQ2hpbGRJZDogXCJtaXNzaWxlLXNwcmVhZC0xXCIsXG4gICAgICAgIHJpZ2h0Q2hpbGRJZDogXCJoZWF0LWdlbi0xXCJcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiSGlnaCBFeHBsb3NpdmUgMVwiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiTWlzc2lsZSBDcml0IERhbWFnZVwiLFxuICAgICAgICBsZWZ0Q2hpbGRJZDogXCJoZWF0LWdlbi0xXCJcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiQ29vbGRvd24gNFwiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiV2VhcG9uIENvb2xkb3duXCIsXG4gICAgICAgIGNlbnRlckNoaWxkSWQ6IFwiY29vbGRvd24tNlwiLFxuICAgICAgICByaWdodENoaWxkSWQ6IFwiZmxhbWVyLXZlbnRpbGF0aW9uLTFcIixcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiR2F1c3MgQ2hhcmdlIDFcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIkdhdXNzIEhlbGQgVGltZVwiLFxuICAgICAgICBsZWZ0Q2hpbGRJZDogXCJmbGFtZXItdmVudGlsYXRpb24tMVwiLFxuICAgICAgICByaWdodENoaWxkSWQ6IFwiaGVhdC1nZW4tMlwiXG4gICAgICB9LFxuICAgICAgeyBuYW1lOiBcIkNvb2xkb3duIDVcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIldlYXBvbiBDb29sZG93blwiLFxuICAgICAgICBsZWZ0Q2hpbGRJZDogXCJoZWF0LWdlbi0yXCIsXG4gICAgICAgIGNlbnRlckNoaWxkSWQ6IFwibGJ4LXNwcmVhZC0xXCIsXG4gICAgICAgIHJpZ2h0Q2hpbGRJZDogXCJyYW5nZS04XCJcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiUmFuZ2UgN1wiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiV2VhcG9uIFJhbmdlXCIsXG4gICAgICAgIGxlZnRDaGlsZElkOiBcInJhbmdlLTlcIlxuICAgICAgfSxcbiAgICAgIHsgbmFtZTogXCJIZWF0IEdlbiAxXCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJXZWFwb24gSGVhdCBHZW5cIixcbiAgICAgICAgbGVmdENoaWxkSWQ6IFwibWlzc2lsZS1zcHJlYWQtMVwiLFxuICAgICAgICByaWdodENoaWxkSWQ6IFwiaGVhdC1nZW4tM1wiXG4gICAgICB9LFxuICAgICAgeyBuYW1lOiBcIkZsYW1lciBWZW50aWxhdGlvbiAxXCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJGbGFtZXIgVmVudGlsYXRpb25cIlxuICAgICAgfSxcbiAgICAgIHsgbmFtZTogXCJIZWF0IEdlbiAyXCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJXZWFwb24gSGVhdCBHZW5cIixcbiAgICAgICAgbGVmdENoaWxkSWQ6IFwiaGVhdC1nZW4tNFwiLFxuICAgICAgICByaWdodENoaWxkSWQ6IFwibGJ4LXNwcmVhZC0xXCJcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiUmFuZ2UgOFwiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiV2VhcG9uIFJhbmdlXCIsXG4gICAgICAgIHJpZ2h0Q2hpbGRJZDogXCJyYW5nZS0xMFwiXG4gICAgICB9LFxuICAgICAgeyBuYW1lOiBcIlJhbmdlIDlcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIldlYXBvbiBSYW5nZVwiLFxuICAgICAgICByaWdodENoaWxkSWQ6IFwiY29vbGRvd24tN1wiXG4gICAgICB9LFxuICAgICAgeyBuYW1lOiBcIk1pc3NpbGUgU3ByZWFkIDFcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIk1pc3NpbGUgU3ByZWFkXCIsXG4gICAgICAgIGxlZnRDaGlsZElkOiBcImNvb2xkb3duLTdcIlxuICAgICAgfSxcbiAgICAgIHsgbmFtZTogXCJIZWF0IEdlbiAzXCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJXZWFwb24gSGVhdCBHZW5cIixcbiAgICAgICAgbGVmdENoaWxkSWQ6IFwidmVsb2NpdHktM1wiLFxuICAgICAgICByaWdodENoaWxkSWQ6IFwicmFuZ2UtMTFcIlxuICAgICAgfSxcbiAgICAgIHsgbmFtZTogXCJDb29sZG93biA2XCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJXZWFwb24gQ29vbGRvd25cIixcbiAgICAgICAgbGVmdENoaWxkSWQ6IFwicmFuZ2UtMTFcIixcbiAgICAgICAgY2VudGVyQ2hpbGRJZDogXCJsYXNlci1kdXJhdGlvbi0xXCIsXG4gICAgICAgIHJpZ2h0Q2hpbGRJZDogXCJyYW5nZS0xMlwiXG4gICAgICB9LFxuICAgICAgeyBuYW1lOiBcIkhlYXQgR2VuIDRcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIldlYXBvbiBIZWF0IEdlblwiLFxuICAgICAgICBsZWZ0Q2hpbGRJZDogXCJyYW5nZS0xMlwiLFxuICAgICAgICByaWdodENoaWxkSWQ6IFwidmVsb2NpdHktNFwiXG4gICAgICB9LFxuICAgICAgeyBuYW1lOiBcIkxCWCBTcHJlYWQgMVwiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiTEJYIFNwcmVhZFwiLFxuICAgICAgICByaWdodENoaWxkSWQ6IFwiY29vbGRvd24tOFwiXG4gICAgICB9LFxuXHQgIHsgbmFtZTogXCJSYW5nZSAxMFwiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiV2VhcG9uIFJhbmdlXCIsXG4gICAgICAgIGxlZnRDaGlsZElkOiBcImNvb2xkb3duLThcIixcbiAgICAgICAgcmlnaHRDaGlsZElkOiBcImVuaGFuY2VkLXVhYy1yYWMtMVwiXG4gICAgICB9LFxuICAgICAgeyBuYW1lOiBcIkNvb2xkb3duIDdcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIldlYXBvbiBDb29sZG93blwiLFxuICAgICAgICBsZWZ0Q2hpbGRJZDogXCJoZWF0LWdlbi01XCIsXG4gICAgICAgIHJpZ2h0Q2hpbGRJZDogXCJoZWF0LWdlbi02XCJcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiVmVsb2NpdHkgM1wiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiV2VhcG9uIFZlbG9jaXR5XCIsXG4gICAgICAgIGxlZnRDaGlsZElkOiBcImhlYXQtZ2VuLTZcIlxuICAgICAgfSxcbiAgICAgIHsgbmFtZTogXCJSYW5nZSAxMVwiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiV2VhcG9uIFJhbmdlXCIsXG4gICAgICAgIGxlZnRDaGlsZElkOiBcInJhbmdlLTEzXCIsXG4gICAgICAgIHJpZ2h0Q2hpbGRJZDogXCJsYXNlci1kdXJhdGlvbi0xXCJcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiUmFuZ2UgMTJcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIldlYXBvbiBSYW5nZVwiLFxuICAgICAgICBsZWZ0Q2hpbGRJZDogXCJsYXNlci1kdXJhdGlvbi0xXCIsXG4gICAgICAgIHJpZ2h0Q2hpbGRJZDogXCJyYW5nZS0xNFwiXG4gICAgICB9LFxuICAgICAgeyBuYW1lOiBcIlZlbG9jaXR5IDRcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIldlYXBvbiBWZWxvY2l0eVwiLFxuICAgICAgICByaWdodENoaWxkSWQ6IFwiY29vbGRvd24tOVwiXG4gICAgICB9LFxuICAgICAgeyBuYW1lOiBcIkNvb2xkb3duIDhcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIldlYXBvbiBDb29sZG93blwiLFxuICAgICAgICBsZWZ0Q2hpbGRJZDogXCJjb29sZG93bi05XCIsXG4gICAgICAgIGNlbnRlckNoaWxkSWQ6IFwiZ2F1c3MtY2hhcmdlLTJcIixcbiAgICAgICAgcmlnaHRDaGlsZElkOiBcImhlYXQtZ2VuLTdcIlxuICAgICAgfSxcbiAgICAgIHsgbmFtZTogXCJFbmhhbmNlZCBVQUMgLyBSQUMgMVwiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiRW5oYW5jZWQgVUFDIC8gUkFDXCIsXG4gICAgICB9LFxuICAgICAgeyBuYW1lOiBcIkhlYXQgR2VuIDVcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIldlYXBvbiBIZWF0IEdlblwiLFxuICAgICAgICBsZWZ0Q2hpbGRJZDogXCJjb29sZG93bi0xMFwiXG4gICAgICB9LFxuICAgICAgeyBuYW1lOiBcIkhlYXQgR2VuIDZcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIldlYXBvbiBIZWF0IEdlblwiLFxuICAgICAgICBsZWZ0Q2hpbGRJZDogXCJoaWdoLWV4cGxvc2l2ZS0yXCIsXG4gICAgICAgIGNlbnRlckNoaWxkSWQ6IFwibGFzZXItZHVyYXRpb24tMlwiLFxuICAgICAgICByaWdodENoaWxkSWQ6IFwiaGVhdC1nZW4tOFwiXG4gICAgICB9LFxuICAgICAgeyBuYW1lOiBcIlJhbmdlIDEzXCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJXZWFwb24gUmFuZ2VcIixcbiAgICAgICAgbGVmdENoaWxkSWQ6IFwiaGVhdC1nZW4tOFwiLFxuICAgICAgICBjZW50ZXJDaGlsZElkOiBcImZsYW1lci12ZW50aWxhdGlvbi0yXCIsXG4gICAgICAgIHJpZ2h0Q2hpbGRJZDogXCJtaXNzaWxlLXJhY2stMVwiXG4gICAgICB9LFxuICAgICAgeyBuYW1lOiBcIkxhc2VyIER1cmF0aW9uIDFcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIkxhc2VyIER1cmF0aW9uXCIsXG4gICAgICAgIGNlbnRlckNoaWxkSWQ6IFwiY29vbGRvd24tMTJcIlxuICAgICAgfSxcbiAgICAgIHsgbmFtZTogXCJSYW5nZSAxNFwiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiV2VhcG9uIFJhbmdlXCIsXG4gICAgICAgIGxlZnRDaGlsZElkOiBcIm1hZ2F6aW5lLWNhcGFjaXR5LTFcIixcbiAgICAgICAgcmlnaHRDaGlsZElkOiBcImhlYXQtZ2VuLTlcIlxuICAgICAgfSxcbiAgICAgIHsgbmFtZTogXCJDb29sZG93biA5XCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJXZWFwb24gQ29vbGRvd25cIixcbiAgICAgICAgbGVmdENoaWxkSWQ6IFwiaGVhdC1nZW4tOVwiLFxuICAgICAgICBjZW50ZXJDaGlsZElkOiBcImxhc2VyLWR1cmF0aW9uLTNcIixcbiAgICAgICAgcmlnaHRDaGlsZElkOiBcImdhdXNzLWNoYXJnZS0yXCJcbiAgICAgIH0sXG5cdCAgeyBuYW1lOiBcIkhlYXQgR2VuIDdcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIldlYXBvbiBIZWF0IEdlblwiLFxuICAgICAgICByaWdodENoaWxkSWQ6IFwiY29vbGRvd24tMTFcIlxuICAgICAgfSxcblx0ICB7IG5hbWU6IFwiQ29vbGRvd24gMTBcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIldlYXBvbiBDb29sZG93blwiLFxuICAgICAgICByaWdodENoaWxkSWQ6IFwibWlzc2lsZS1yYWNrLTJcIlxuICAgICAgfSxcblx0ICB7IG5hbWU6IFwiSGlnaCBFeHBsb3NpdmUgMlwiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiTWlzc2lsZSBDcml0IERhbWFnZVwiLFxuICAgICAgICByaWdodENoaWxkSWQ6IFwibGFzZXItZHVyYXRpb24tMlwiXG4gICAgICB9LFxuXHQgIHsgbmFtZTogXCJIZWF0IEdlbiA4XCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJXZWFwb24gSGVhdCBHZW5cIixcbiAgICAgICAgbGVmdENoaWxkSWQ6IFwibGFzZXItZHVyYXRpb24tMlwiLFxuICAgICAgICBjZW50ZXJDaGlsZElkOiBcImNvb2xkb3duLTEzXCJcbiAgICAgIH0sXG5cdCAgeyBuYW1lOiBcIk1pc3NpbGUgUmFjayAxXCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJNaXNzaWxlIEFtbW9cIixcbiAgICAgICAgcmlnaHRDaGlsZElkOiBcImNvb2xkb3duLTEyXCJcbiAgICAgIH0sXG5cdCAgeyBuYW1lOiBcIk1hZ2F6aW5lIENhcGFjaXR5IDFcIixcbiAgICAgIGF0dHJpYnV0ZTogXCJCYWxsaXN0aWMgQW1tb1wiLFxuICAgICAgbGVmdENoaWxkSWQ6IFwiY29vbGRvd24tMTJcIlxuICAgIH0sXG5cdCAgeyBuYW1lOiBcIkhlYXQgR2VuIDlcIixcbiAgICAgIGF0dHJpYnV0ZTogXCJXZWFwb24gSGVhdCBHZW5cIixcbiAgICAgIGNlbnRlckNoaWxkSWQ6IFwiY29vbGRvd24tMTRcIixcbiAgICAgIHJpZ2h0Q2hpbGRJZDogXCJsYXNlci1kdXJhdGlvbi0zXCJcbiAgICB9LFxuXHQgIHsgbmFtZTogXCJHYXVzcyBDaGFyZ2UgMlwiLFxuICAgICAgYXR0cmlidXRlOiBcIkdhdXNzIEhlbGQgVGltZVwiLFxuICAgICAgbGVmdENoaWxkSWQ6IFwibGFzZXItZHVyYXRpb24tM1wiXG4gICAgfSxcblx0ICB7IG5hbWU6IFwiQ29vbGRvd24gMTFcIixcbiAgICAgIGF0dHJpYnV0ZTogXCJXZWFwb24gQ29vbGRvd25cIixcbiAgICAgIGxlZnRDaGlsZElkOiBcIm1hZ2F6aW5lLWNhcGFjaXR5LTJcIlxuICAgIH0sXG5cdCAgeyBuYW1lOiBcIk1pc3NpbGUgUmFjayAyXCIsXG4gICAgICBhdHRyaWJ1dGU6IFwiTWlzc2lsZSBBbW1vXCIsXG4gICAgfSxcblx0ICB7IG5hbWU6IFwiTGFzZXIgRHVyYXRpb24gMlwiLFxuICAgICAgYXR0cmlidXRlOiBcIkxhc2VyIER1cmF0aW9uXCIsXG4gICAgICByaWdodENoaWxkSWQ6IFwiY29vbGRvd24tMTNcIlxuICAgIH0sXG4gICAgeyBuYW1lOiBcIkZsYW1lciBWZW50aWxhdGlvbiAyXCIsXG4gICAgICBhdHRyaWJ1dGU6IFwiRmxhbWVyIFZlbnRpbGF0aW9uXCJcbiAgICB9LFxuXHQgIHsgbmFtZTogXCJDb29sZG93biAxMlwiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiV2VhcG9uIENvb2xkb3duXCIsXG4gICAgICAgIGxlZnRDaGlsZElkOiBcInJhbmdlLTE1XCIsXG4gICAgICAgIHJpZ2h0Q2hpbGRJZDogXCJ2ZWxvY2l0eS01XCJcbiAgICAgIH0sXG5cdCAgeyBuYW1lOiBcIkxhc2VyIER1cmF0aW9uIDNcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIkxhc2VyIER1cmF0aW9uXCIsXG4gICAgICAgIGxlZnRDaGlsZElkOiBcImNvb2xkb3duLTE0XCJcbiAgICAgIH0sXG5cdCAgeyBuYW1lOiBcIk1hZ2F6aW5lIENhcGFjaXR5IDJcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIkJhbGxpc3RpYyBBbW1vXCIsXG4gICAgICB9LFxuXHQgIHsgbmFtZTogXCJDb29sZG93biAxM1wiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiV2VhcG9uIENvb2xkb3duXCIsXG4gICAgICAgIGxlZnRDaGlsZElkOiBcImhlYXQtZ2VuLTEwXCIsXG4gICAgICAgIHJpZ2h0Q2hpbGRJZDogXCJoZWF0LWdlbi0xMVwiXG4gICAgICB9LFxuXHQgIHsgbmFtZTogXCJSYW5nZSAxNVwiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiV2VhcG9uIFJhbmdlXCIsXG4gICAgICAgIGxlZnRDaGlsZElkOiBcImhlYXQtZ2VuLTExXCIsXG4gICAgICAgIHJpZ2h0Q2hpbGRJZDogXCJjb29sZG93bi0xNVwiXG4gICAgICB9LFxuXHQgIHsgbmFtZTogXCJWZWxvY2l0eSA1XCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJXZWFwb24gVmVsb2NpdHlcIixcbiAgICAgICAgbGVmdENoaWxkSWQ6IFwiY29vbGRvd24tMTVcIixcbiAgICAgICAgcmlnaHRDaGlsZElkOiBcImhlYXQtZ2VuLTEyXCJcbiAgICAgIH0sXG5cdCAgeyBuYW1lOiBcIkNvb2xkb3duIDE0XCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJXZWFwb24gQ29vbGRvd25cIixcbiAgICAgICAgbGVmdENoaWxkSWQ6IFwiaGVhdC1nZW4tMTJcIixcbiAgICAgICAgcmlnaHRDaGlsZElkOiBcImNvb2xkb3duLTE2XCJcbiAgICAgIH0sXG5cdCAgeyBuYW1lOiBcIkhlYXQgR2VuIDEwXCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJXZWFwb24gSGVhdCBHZW5cIixcbiAgICAgIH0sXG5cdCAgeyBuYW1lOiBcIkhlYXQgR2VuIDExXCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJXZWFwb24gSGVhdCBHZW5cIixcbiAgICAgICAgY2VudGVyQ2hpbGRJZDogXCJoZWF0LWdlbi0xM1wiXG4gICAgICB9LFxuXHQgIHsgbmFtZTogXCJDb29sZG93biAxNVwiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiV2VhcG9uIENvb2xkb3duXCIsXG4gICAgICAgIGxlZnRDaGlsZElkOiBcIm1pc3NpbGUtc3ByZWFkLTJcIixcbiAgICAgICAgY2VudGVyQ2hpbGRJZDogXCJsYXNlci1kdXJhdGlvbi00XCIsXG4gICAgICAgIHJpZ2h0Q2hpbGRJZDogXCJlbmhhbmNlZC11YWMtcmFjLTJcIlxuICAgICAgfSxcblx0ICB7IG5hbWU6IFwiSGVhdCBHZW4gMTJcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIldlYXBvbiBIZWF0IEdlblwiLFxuICAgICAgICBjZW50ZXJDaGlsZElkOiBcImhlYXQtZ2VuLTE0XCIsXG4gICAgICAgIHJpZ2h0Q2hpbGRJZDogXCJsYngtc3ByZWFkLTJcIlxuICAgICAgfSxcbiAgICAgIHsgbmFtZTogXCJDb29sZG93biAxNlwiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiV2VhcG9uIENvb2xkb3duXCIsXG4gICAgICAgIGxlZnRDaGlsZElkOiBcImxieC1zcHJlYWQtMlwiXG4gICAgICB9LFxuICAgICAgeyBuYW1lOiBcIk1pc3NpbGUgU3ByZWFkIDJcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIk1pc3NpbGUgU3ByZWFkXCIsXG4gICAgICB9LFxuICAgICAgeyBuYW1lOiBcIkVuaGFuY2VkIFVBQyAvIFJBQyAyXCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJFbmhhbmNlZCBVQUMgLyBSQUNcIixcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiTEJYIFNwcmVhZCAyXCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJMQlggU3ByZWFkXCIsXG4gICAgICB9LFxuICAgICAgeyBuYW1lOiBcIkhlYXQgR2VuIDEzXCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJXZWFwb24gSGVhdCBHZW5cIixcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiTGFzZXIgRHVyYXRpb24gNFwiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiTGFzZXIgRHVyYXRpb25cIixcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiSGVhdCBHZW4gMTRcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIldlYXBvbiBIZWF0IEdlblwiLFxuICAgICAgfVxuICAgIF1cbiAgfSxcbiAgLypcbiAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAgICAgICAgICAgICAgICBTVVJWSVZBTFxuICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgKi9cbiAge1xuICAgIHRyZWVOYW1lOiBcIlN1cnZpdmFsXCIsXG4gICAgbm9kZXM6IFtcbiAgICAgIHsgbmFtZTogXCJSZWluZm9yY2VkIENhc2luZyAxXCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJDcml0IENoYW5jZSBSZWNlaXZlZFwiLFxuICAgICAgICBsZWZ0Q2hpbGRJZDogXCJzaG9jay1hYnNvcmJhbmNlLTFcIixcbiAgICAgICAgcmlnaHRDaGlsZElkOiBcImFtcy1vdmVybG9hZC0xXCJcbiAgICAgIH0sXG5cdCAgICB7IG5hbWU6IFwiU2hvY2sgQWJzb3JiYW5jZSAxXCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJGYWxsIERhbWFnZVwiLFxuICAgICAgICBjZW50ZXJDaGlsZElkOiBcInJlaW5mb3JjZWQtY2FzaW5nLTJcIixcbiAgICAgICAgcmlnaHRDaGlsZElkOiBcInNrZWxldGFsLWRlbnNpdHktMVwiXG4gICAgICB9LFxuXHQgICAgeyBuYW1lOiBcIkFNUyBPdmVybG9hZCAxXCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJBTVMgRWZmZWN0aXZlbmVzc1wiLFxuICAgICAgICBsZWZ0Q2hpbGRJZDogXCJza2VsZXRhbC1kZW5zaXR5LTFcIixcbiAgICAgICAgY2VudGVyQ2hpbGRJZDogXCJyZWluZm9yY2VkLWNhc2luZy0zXCJcbiAgICAgIH0sXG5cdCAgICB7IG5hbWU6IFwiU2tlbGV0YWwgRGVuc2l0eSAxXCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJJbnRlcm5hbCBTdHJ1Y3R1cmVcIixcbiAgICAgICAgbGVmdENoaWxkSWQ6IFwicmVpbmZvcmNlZC1jYXNpbmctMlwiLFxuICAgICAgICByaWdodENoaWxkSWQ6IFwicmVpbmZvcmNlZC1jYXNpbmctM1wiXG4gICAgICB9LFxuXHQgICAgeyBuYW1lOiBcIlJlaW5mb3JjZWQgQ2FzaW5nIDJcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIkNyaXQgQ2hhbmNlIFJlY2VpdmVkXCIsXG4gICAgICAgIGxlZnRDaGlsZElkOiBcImFybW9yLWhhcmRlbmluZy0xXCIsXG4gICAgICAgIGNlbnRlckNoaWxkSWQ6IFwiYW1zLW92ZXJsb2FkLTJcIlxuICAgICAgfSxcblx0ICAgIHsgbmFtZTogXCJSZWluZm9yY2VkIENhc2luZyAzXCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJDcml0IENoYW5jZSBSZWNlaXZlZFwiLFxuICAgICAgICBjZW50ZXJDaGlsZElkOiBcInNob2NrLWFic29yYmFuY2UtM1wiLFxuICAgICAgICByaWdodENoaWxkSWQ6IFwic2tlbGV0YWwtZGVuc2l0eS0yXCJcbiAgICAgIH0sXG5cdCAgICB7IG5hbWU6IFwiQXJtb3IgSGFyZGVuaW5nIDFcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIkFybW9yXCIsXG4gICAgICAgIGxlZnRDaGlsZElkOiBcInNob2NrLWFic29yYmFuY2UtMlwiLFxuICAgICAgICBjZW50ZXJDaGlsZElkOiBcInNrZWxldGFsLWRlbnNpdHktM1wiLFxuICAgICAgICByaWdodENoaWxkSWQ6IFwiYW1zLW92ZXJsb2FkLTJcIlxuICAgICAgfSxcblx0ICAgIHsgbmFtZTogXCJTa2VsZXRhbCBEZW5zaXR5IDJcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIkludGVybmFsIFN0cnVjdHVyZVwiLFxuICAgICAgICBsZWZ0Q2hpbGRJZDogXCJzaG9jay1hYnNvcmJhbmNlLTNcIixcbiAgICAgICAgY2VudGVyQ2hpbGRJZDogXCJyZWluZm9yY2VkLWNhc2luZy00XCIsXG4gICAgICAgIHJpZ2h0Q2hpbGRJZDogXCJzaG9jay1hYnNvcmJhbmNlLTRcIlxuICAgICAgfSxcblx0ICB7IG5hbWU6IFwiU2hvY2sgQWJzb3JiYW5jZSAyXCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJGYWxsIERhbWFnZVwiLFxuICAgICAgICBsZWZ0Q2hpbGRJZDogXCJhcm1vci1oYXJkZW5pbmctMlwiLFxuICAgICAgICByaWdodENoaWxkSWQ6IFwic2tlbGV0YWwtZGVuc2l0eS0zXCJcbiAgICAgIH0sXG5cdCAgICB7IG5hbWU6IFwiQU1TIE92ZXJsb2FkIDJcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIkFNUyBFZmZlY3RpdmVuZXNzXCIsXG4gICAgICAgIGxlZnRDaGlsZElkOiBcInNrZWxldGFsLWRlbnNpdHktM1wiLFxuICAgICAgICByaWdodENoaWxkSWQ6IFwic2tlbGV0YWwtZGVuc2l0eS00XCJcbiAgICAgIH0sXG5cdCAgICB7IG5hbWU6IFwiU2hvY2sgQWJzb3JiYW5jZSAzXCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJGYWxsIERhbWFnZVwiLFxuICAgICAgICBsZWZ0Q2hpbGRJZDogXCJza2VsZXRhbC1kZW5zaXR5LTRcIixcbiAgICAgICAgcmlnaHRDaGlsZElkOiBcInJlaW5mb3JjZWQtY2FzaW5nLTRcIlxuICAgICAgfSxcblx0ICAgIHsgbmFtZTogXCJTaG9jayBBYnNvcmJhbmNlIDRcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIkZhbGwgRGFtYWdlXCIsXG4gICAgICAgIGxlZnRDaGlsZElkOiBcInJlaW5mb3JjZWQtY2FzaW5nLTRcIixcbiAgICAgICAgcmlnaHRDaGlsZElkOiBcImFybW9yLWhhcmRlbmluZy0zXCJcbiAgICAgIH0sXG5cdCAgICB7IG5hbWU6IFwiQXJtb3IgSGFyZGVuaW5nIDJcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIkFybW9yXCIsXG4gICAgICAgIHJpZ2h0Q2hpbGRJZDogXCJyZWluZm9yY2VkLWNhc2luZy01XCJcbiAgICAgIH0sXG5cdCAgICB7IG5hbWU6IFwiU2tlbGV0YWwgRGVuc2l0eSAzXCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJJbnRlcm5hbCBTdHJ1Y3R1cmVcIixcbiAgICAgICAgbGVmdENoaWxkSWQ6IFwicmVpbmZvcmNlZC1jYXNpbmctNVwiLFxuICAgICAgICBjZW50ZXJDaGlsZElkOiBcImFybW9yLWhhcmRlbmluZy01XCJcbiAgICAgIH0sXG5cdCAgICB7IG5hbWU6IFwiU2tlbGV0YWwgRGVuc2l0eSA0XCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJJbnRlcm5hbCBTdHJ1Y3R1cmVcIixcbiAgICAgICAgY2VudGVyQ2hpbGRJZDogXCJza2VsZXRhbC1kZW5zaXR5LTVcIlxuICAgICAgfSxcblx0ICAgIHsgbmFtZTogXCJSZWluZm9yY2VkIENhc2luZyA0XCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJDcml0IENoYW5jZSBSZWNlaXZlZFwiLFxuICAgICAgICBjZW50ZXJDaGlsZElkOiBcInNrZWxldGFsLWRlbnNpdHktNlwiLFxuICAgICAgICByaWdodENoaWxkSWQ6IFwicmVpbmZvcmNlZC1jYXNpbmctN1wiXG4gICAgICB9LFxuXHQgICAgeyBuYW1lOiBcIkFybW9yIEhhcmRlbmluZyAzXCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJBcm1vclwiLFxuICAgICAgICBsZWZ0Q2hpbGRJZDogXCJyZWluZm9yY2VkLWNhc2luZy03XCJcbiAgICAgIH0sXG5cdCAgICB7IG5hbWU6IFwiUmVpbmZvcmNlZCBDYXNpbmcgNVwiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiQ3JpdCBDaGFuY2UgUmVjZWl2ZWRcIixcbiAgICAgICAgbGVmdENoaWxkSWQ6IFwiYXJtb3ItaGFyZGVuaW5nLTRcIixcbiAgICAgICAgcmlnaHRDaGlsZElkOiBcImFybW9yLWhhcmRlbmluZy01XCJcbiAgICAgIH0sXG5cdCAgICB7IG5hbWU6IFwiUmVpbmZvcmNlZCBDYXNpbmcgN1wiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiQ3JpdCBDaGFuY2UgUmVjZWl2ZWRcIixcbiAgICAgICAgbGVmdENoaWxkSWQ6IFwic2tlbGV0YWwtZGVuc2l0eS02XCIsXG4gICAgICAgIHJpZ2h0Q2hpbGRJZDogXCJza2VsZXRhbC1kZW5zaXR5LTdcIlxuICAgICAgfSxcblx0ICAgIHsgbmFtZTogXCJBcm1vciBIYXJkZW5pbmcgNFwiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiQXJtb3JcIixcbiAgICAgIH0sXG4gIFx0ICB7IG5hbWU6IFwiQXJtb3IgSGFyZGVuaW5nIDVcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIkFybW9yXCIsXG4gICAgICAgIHJpZ2h0Q2hpbGRJZDogXCJyZWluZm9yY2VkLWNhc2luZy02XCJcbiAgICAgIH0sXG5cdCAgICB7IG5hbWU6IFwiU2tlbGV0YWwgRGVuc2l0eSA1XCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJJbnRlcm5hbCBTdHJ1Y3R1cmVcIixcbiAgICAgICAgbGVmdENoaWxkSWQ6IFwicmVpbmZvcmNlZC1jYXNpbmctNlwiLFxuICAgICAgICByaWdodENoaWxkSWQ6IFwicmVpbmZvcmNlZC1jYXNpbmctOFwiXG4gICAgICB9LFxuXHQgICAgeyBuYW1lOiBcIlNrZWxldGFsIERlbnNpdHkgNlwiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiSW50ZXJuYWwgU3RydWN0dXJlXCIsXG4gICAgICAgIGxlZnRDaGlsZElkOiBcInJlaW5mb3JjZWQtY2FzaW5nLThcIlxuICAgICAgfSxcblx0ICAgIHsgbmFtZTogXCJTa2VsZXRhbCBEZW5zaXR5IDdcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIkludGVybmFsIFN0cnVjdHVyZVwiLFxuICAgICAgfSxcblx0ICAgIHsgbmFtZTogXCJSZWluZm9yY2VkIENhc2luZyA2XCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJDcml0IENoYW5jZSBSZWNlaXZlZFwiLFxuICAgICAgICBsZWZ0Q2hpbGRJZDogXCJhcm1vci1oYXJkZW5pbmctNlwiLFxuICAgICAgICBjZW50ZXJDaGlsZElkOiBcInNrZWxldGFsLWRlbnNpdHktOVwiXG4gICAgICB9LFxuXHQgICAgeyBuYW1lOiBcIlJlaW5mb3JjZWQgQ2FzaW5nIDhcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIkNyaXQgQ2hhbmNlIFJlY2VpdmVkXCIsXG4gICAgICAgIGNlbnRlckNoaWxkSWQ6IFwic2tlbGV0YWwtZGVuc2l0eS0xMFwiLFxuICAgICAgICByaWdodENoaWxkSWQ6IFwic2tlbGV0YWwtZGVuc2l0eS04XCJcbiAgICAgIH0sXG5cdCAgICB7IG5hbWU6IFwiQXJtb3IgSGFyZGVuaW5nIDZcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIkFybW9yXCIsXG4gICAgICAgIHJpZ2h0Q2hpbGRJZDogXCJza2VsZXRhbC1kZW5zaXR5LTlcIlxuICAgICAgfSxcblx0ICAgIHsgbmFtZTogXCJTa2VsZXRhbCBEZW5zaXR5IDhcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIkludGVybmFsIFN0cnVjdHVyZVwiLFxuICAgICAgICBsZWZ0Q2hpbGRJZDogXCJza2VsZXRhbC1kZW5zaXR5LTEwXCJcbiAgICAgIH0sXG5cdCAgICB7IG5hbWU6IFwiU2tlbGV0YWwgRGVuc2l0eSA5XCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJJbnRlcm5hbCBTdHJ1Y3R1cmVcIixcbiAgICAgICAgbGVmdENoaWxkSWQ6IFwiYXJtb3ItaGFyZGVuaW5nLTdcIixcbiAgICAgICAgcmlnaHRDaGlsZElkOiBcInNob2NrLWFic29yYmFuY2UtNVwiXG4gICAgICB9LFxuXHQgICAgeyBuYW1lOiBcIlNrZWxldGFsIERlbnNpdHkgMTBcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIkludGVybmFsIFN0cnVjdHVyZVwiLFxuICAgICAgICBsZWZ0Q2hpbGRJZDogXCJzaG9jay1hYnNvcmJhbmNlLTVcIixcbiAgICAgICAgcmlnaHRDaGlsZElkOiBcImFybW9yLWhhcmRlbmluZy04XCJcbiAgICAgIH0sXG5cdCAgICB7IG5hbWU6IFwiQXJtb3IgSGFyZGVuaW5nIDdcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIkFybW9yXCIsXG4gICAgICB9LFxuXHQgICAgeyBuYW1lOiBcIlNob2NrIEFic29yYmFuY2UgNVwiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiRmFsbCBEYW1hZ2VcIixcbiAgICAgICAgbGVmdENoaWxkSWQ6IFwiYXJtb3ItaGFyZGVuaW5nLTlcIixcbiAgICAgICAgcmlnaHRDaGlsZElkOiBcImFybW9yLWhhcmRlbmluZy0xMFwiXG4gICAgICB9LFxuXHQgICAgeyBuYW1lOiBcIkFybW9yIEhhcmRlbmluZyA4XCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJBcm1vclwiLFxuICAgICAgfSxcblx0ICAgIHsgbmFtZTogXCJBcm1vciBIYXJkZW5pbmcgOVwiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiQXJtb3JcIixcbiAgICAgIH0sXG5cdCAgICB7IG5hbWU6IFwiQXJtb3IgSGFyZGVuaW5nIDEwXCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJBcm1vclwiLFxuICAgICAgfSxcbiAgICBdXG4gIH0sXG4gIC8qXG4gID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgICAgICAgICAgICAgICAgICBNT0JpTElUWVxuICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgKi9cbiAge1xuICAgIHRyZWVOYW1lOiBcIk1vYmlsaXR5XCIsXG4gICAgbm9kZXM6IFtcbiAgICAgIHsgbmFtZTogXCJLaW5ldGljIEJ1cnN0IDFcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIkFjY2VsZXJhdGlvblwiLFxuICAgICAgICBsZWZ0Q2hpbGRJZDogXCJ0b3Jzby15YXctMVwiLFxuICAgICAgICByaWdodENoaWxkSWQ6IFwiaGFyZC1icmFrZS0xXCJcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiVG9yc28gWWF3IDFcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIk1heCBUb3JzbyBUd2lzdFwiLFxuICAgICAgICBsZWZ0Q2hpbGRJZDogXCJoYXJkLWJyYWtlLTJcIixcbiAgICAgICAgcmlnaHRDaGlsZElkOiBcImtpbmV0aWMtYnVyc3QtMlwiXG4gICAgICB9LFxuICAgICAgeyBuYW1lOiBcIkhhcmQgQnJha2UgMVwiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiRGVjZWxlcmF0aW9uXCIsXG4gICAgICAgIGxlZnRDaGlsZElkOiBcImtpbmV0aWMtYnVyc3QtMlwiLFxuICAgICAgICByaWdodENoaWxkSWQ6IFwidG9yc28teWF3LTJcIlxuICAgICAgfSxcbiAgICAgIHsgbmFtZTogXCJIYXJkIEJyYWtlIDJcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIkRlY2VsZXJhdGlvblwiLFxuICAgICAgICBsZWZ0Q2hpbGRJZDogXCJ0b3Jzby1zcGVlZC0xXCIsXG4gICAgICAgIHJpZ2h0Q2hpbGRJZDogXCJ0b3Jzby15YXctM1wiXG4gICAgICB9LFxuICAgICAgeyBuYW1lOiBcIktpbmV0aWMgQnVyc3QgMlwiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiQWNjZWxlcmF0aW9uXCIsXG4gICAgICAgIGxlZnRDaGlsZElkOiBcInRvcnNvLXlhdy0zXCIsXG4gICAgICAgIHJpZ2h0Q2hpbGRJZDogXCJoYXJkLWJyYWtlLTNcIlxuICAgICAgfSxcbiAgICAgIHsgbmFtZTogXCJUb3JzbyBZYXcgMlwiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiTWF4IFRvcnNvIFR3aXN0XCIsXG4gICAgICAgIGxlZnRDaGlsZElkOiBcImhhcmQtYnJha2UtM1wiLFxuICAgICAgICByaWdodENoaWxkSWQ6IFwiYW5jaG9yLXR1cm4tMVwiXG4gICAgICB9LFxuICAgICAgeyBuYW1lOiBcIlRvcnNvIFNwZWVkIDFcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIlRvcnNvIFR3aXN0IFNwZWVkXCIsXG4gICAgICB9LFxuICAgICAgeyBuYW1lOiBcIlRvcnNvIFlhdyAzXCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJNYXggVG9yc28gVHdpc3RcIixcbiAgICAgICAgbGVmdENoaWxkSWQ6IFwia2luZXRpYy1idXJzdC0zXCIsXG4gICAgICAgIGNlbnRlckNoaWxkSWQ6IFwidG9yc28teWF3LTRcIlxuICAgICAgfSxcbiAgICAgIHsgbmFtZTogXCJIYXJkIEJyYWtlIDNcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIkRlY2VsZXJhdGlvblwiLFxuICAgICAgICBjZW50ZXJDaGlsZElkOiBcImtpbmV0aWMtYnVyc3QtNVwiLFxuICAgICAgICByaWdodENoaWxkSWQ6IFwia2luZXRpYy1idXJzdC00XCJcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiQW5jaG9yIFR1cm4gMVwiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiVHVybiBTcGVlZFwiLFxuICAgICAgfSxcbiAgICAgIHsgbmFtZTogXCJLaW5ldGljIEJ1cnN0IDNcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIkFjY2VsZXJhdGlvblwiLFxuICAgICAgICBsZWZ0Q2hpbGRJZDogXCJoYXJkLWJyYWtlLTRcIixcbiAgICAgICAgcmlnaHRDaGlsZElkOiBcInRvcnNvLXlhdy00XCJcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiS2luZXRpYyBCdXJzdCA0XCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJBY2NlbGVyYXRpb25cIixcbiAgICAgICAgbGVmdENoaWxkSWQ6IFwia2luZXRpYy1idXJzdC01XCIsXG4gICAgICAgIHJpZ2h0Q2hpbGRJZDogXCJraW5ldGljLWJ1cnN0LTZcIlxuICAgICAgfSxcbiAgICAgIHsgbmFtZTogXCJIYXJkIEJyYWtlIDRcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIkRlY2VsZXJhdGlvblwiLFxuICAgICAgICBsZWZ0Q2hpbGRJZDogXCJ0b3Jzby1zcGVlZC0yXCIsXG4gICAgICAgIHJpZ2h0Q2hpbGRJZDogXCJ0b3Jzby1zcGVlZC0zXCJcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiVG9yc28gWWF3IDRcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIk1heCBUb3JzbyBUd2lzdFwiLFxuICAgICAgICBsZWZ0Q2hpbGRJZDogXCJ0b3Jzby1zcGVlZC0zXCIsXG4gICAgICAgIHJpZ2h0Q2hpbGRJZDogXCJ0b3Jzby1waXRjaC0xXCJcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiS2luZXRpYyBCdXJzdCA1XCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJBY2NlbGVyYXRpb25cIixcbiAgICAgICAgbGVmdENoaWxkSWQ6IFwidG9yc28tcGl0Y2gtMVwiLFxuICAgICAgICByaWdodENoaWxkSWQ6IFwia2luZXRpYy1idXJzdC03XCJcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiS2luZXRpYyBCdXJzdCA2XCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJBY2NlbGVyYXRpb25cIixcbiAgICAgICAgbGVmdENoaWxkSWQ6IFwia2luZXRpYy1idXJzdC03XCIsXG4gICAgICAgIHJpZ2h0Q2hpbGRJZDogXCJoYXJkLWJyYWtlLTVcIlxuICAgICAgfSxcbiAgICAgIHsgbmFtZTogXCJUb3JzbyBTcGVlZCAyXCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJUb3JzbyBUd2lzdCBTcGVlZFwiLFxuICAgICAgICByaWdodENoaWxkSWQ6IFwidG9yc28teWF3LTVcIlxuICAgICAgfSxcbiAgICAgIHsgbmFtZTogXCJUb3JzbyBTcGVlZCAzXCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJUb3JzbyBUd2lzdCBTcGVlZFwiLFxuICAgICAgICByaWdodENoaWxkSWQ6IFwidG9yc28tcGl0Y2gtMlwiXG4gICAgICB9LFxuICAgICAgeyBuYW1lOiBcIlRvcnNvIFBpdGNoIDFcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIk1heCBUb3JzbyBJbmNsaW5hdGlvblwiLFxuICAgICAgICBsZWZ0Q2hpbGRJZDogXCJ0b3Jzby1waXRjaC0yXCIsXG4gICAgICAgIHJpZ2h0Q2hpbGRJZDogXCJ0b3Jzby1waXRjaC0zXCJcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiS2luZXRpYyBCdXJzdCA3XCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJBY2NlbGVyYXRpb25cIixcbiAgICAgICAgbGVmdENoaWxkSWQ6IFwidG9yc28tcGl0Y2gtM1wiXG4gICAgICB9LFxuICAgICAgeyBuYW1lOiBcIkhhcmQgQnJha2UgNVwiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiRGVjZWxlcmF0aW9uXCIsXG4gICAgICAgIGxlZnRDaGlsZElkOiBcImFuY2hvci10dXJuLTJcIlxuICAgICAgfSxcbiAgICAgIHsgbmFtZTogXCJUb3JzbyBZYXcgNVwiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiTWF4IFRvcnNvIFR3aXN0XCIsXG4gICAgICAgIHJpZ2h0Q2hpbGRJZDogXCJoYXJkLWJyYWtlLTZcIlxuICAgICAgfSxcbiAgICAgIHsgbmFtZTogXCJUb3JzbyBQaXRjaCAyXCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJNYXggVG9yc28gSW5jbGluYXRpb25cIixcbiAgICAgICAgbGVmdENoaWxkSWQ6IFwiaGFyZC1icmFrZS02XCJcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiVG9yc28gUGl0Y2ggM1wiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiTWF4IFRvcnNvIEluY2xpbmF0aW9uXCIsXG4gICAgICAgIHJpZ2h0Q2hpbGRJZDogXCJoYXJkLWJyYWtlLTdcIlxuICAgICAgfSxcbiAgICAgIHsgbmFtZTogXCJBbmNob3IgVHVybiAyXCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJUdXJuIFNwZWVkXCIsXG4gICAgICAgIGxlZnRDaGlsZElkOiBcImhhcmQtYnJha2UtN1wiXG4gICAgICB9LFxuICAgICAgeyBuYW1lOiBcIkhhcmQgQnJha2UgNlwiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiRGVjZWxlcmF0aW9uXCIsXG4gICAgICAgIGxlZnRDaGlsZElkOiBcImFuY2hvci10dXJuLTNcIixcbiAgICAgICAgcmlnaHRDaGlsZElkOiBcInRvcnNvLXNwZWVkLTRcIlxuICAgICAgfSxcbiAgICAgIHsgbmFtZTogXCJIYXJkIEJyYWtlIDdcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIkRlY2VsZXJhdGlvblwiLFxuICAgICAgICBsZWZ0Q2hpbGRJZDogXCJ0b3Jzby1zcGVlZC01XCIsXG4gICAgICAgIHJpZ2h0Q2hpbGRJZDogXCJhbmNob3ItdHVybi00XCJcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiQW5jaG9yIFR1cm4gM1wiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiVHVybiBTcGVlZFwiLFxuICAgICAgICByaWdodENoaWxkSWQ6IFwidG9yc28tcGl0Y2gtNFwiXG4gICAgICB9LFxuICAgICAgeyBuYW1lOiBcIlRvcnNvIFNwZWVkIDRcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIlRvcnNvIFR3aXN0IFNwZWVkXCIsXG4gICAgICAgIGxlZnRDaGlsZElkOiBcInRvcnNvLXBpdGNoLTRcIlxuICAgICAgfSxcbiAgICAgIHsgbmFtZTogXCJUb3JzbyBTcGVlZCA1XCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJUb3JzbyBUd2lzdCBTcGVlZFwiLFxuICAgICAgICByaWdodENoaWxkSWQ6IFwidG9yc28tcGl0Y2gtNVwiXG4gICAgICB9LFxuICAgICAgeyBuYW1lOiBcIkFuY2hvciBUdXJuIDRcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIlR1cm4gU3BlZWRcIixcbiAgICAgICAgbGVmdENoaWxkSWQ6IFwidG9yc28tcGl0Y2gtNVwiXG4gICAgICB9LFxuICAgICAgeyBuYW1lOiBcIlRvcnNvIFBpdGNoIDRcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIk1heCBUb3JzbyBJbmNsaW5hdGlvblwiLFxuICAgICAgICBsZWZ0Q2hpbGRJZDogXCJzcGVlZC10d2Vhay0xXCIsXG4gICAgICAgIGNlbnRlckNoaWxkSWQ6IFwidG9yc28tc3BlZWQtNlwiXG4gICAgICB9LFxuICAgICAgeyBuYW1lOiBcIlRvcnNvIFBpdGNoIDVcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIk1heCBUb3JzbyBJbmNsaW5hdGlvblwiLFxuICAgICAgICBjZW50ZXJDaGlsZElkOiBcImFuY2hvci10dXJuLTVcIixcbiAgICAgICAgcmlnaHRDaGlsZElkOiBcInNwZWVkLXR3ZWFrLTJcIlxuICAgICAgfSxcbiAgICAgIHsgbmFtZTogXCJTcGVlZCBUd2VhayAxXCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJNYXggU3BlZWRcIixcbiAgICAgICAgcmlnaHRDaGlsZElkOiBcInRvcnNvLXNwZWVkLTZcIlxuICAgICAgfSxcbiAgICAgIHsgbmFtZTogXCJTcGVlZCBUd2VhayAyXCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJNYXggU3BlZWRcIixcbiAgICAgICAgbGVmdENoaWxkSWQ6IFwiYW5jaG9yLXR1cm4tNVwiXG4gICAgICB9LFxuICAgICAgeyBuYW1lOiBcIlRvcnNvIFNwZWVkIDZcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIlRvcnNvIFR3aXN0IFNwZWVkXCIsXG4gICAgICAgIHJpZ2h0Q2hpbGRJZDogXCJzcGVlZC10d2Vhay0zXCJcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiQW5jaG9yIFR1cm4gNVwiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiVHVybiBTcGVlZFwiLFxuICAgICAgICBsZWZ0Q2hpbGRJZDogXCJzcGVlZC10d2Vhay00XCJcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiU3BlZWQgVHdlYWsgM1wiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiTWF4IFNwZWVkXCIsXG4gICAgICAgIHJpZ2h0Q2hpbGRJZDogXCJzcGVlZC10d2Vhay01XCJcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiU3BlZWQgVHdlYWsgNFwiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiTWF4IFNwZWVkXCIsXG4gICAgICAgIGxlZnRDaGlsZElkOiBcInNwZWVkLXR3ZWFrLTVcIlxuICAgICAgfSxcbiAgICAgIHsgbmFtZTogXCJTcGVlZCBUd2VhayA1XCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJNYXggU3BlZWRcIixcbiAgICAgIH1cbiAgICBdXG4gIH0sXG4gIC8qXG4gID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgICAgICAgICAgICAgICAgSlVNUCBKRVRTXG4gID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAqL1xuICB7XG4gICAgdHJlZU5hbWU6IFwiSnVtcCBKZXRzXCIsXG4gICAgbm9kZXM6IFtcbiAgICAgIHsgbmFtZTogXCJIZWF0IFNoaWVsZGluZyAxXCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJKdW1wIEpldCBIZWF0IFJlZHVjdGlvblwiLFxuICAgICAgICBsZWZ0Q2hpbGRJZDogXCJ2ZW50LWNhbGlicmF0aW9uLTFcIixcbiAgICAgICAgcmlnaHRDaGlsZElkOiBcInZlY3RvcmluZy0xXCJcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiVmVudCBDYWxpYnJhdGlvbiAxXCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJKdW1wIEpldCBCdXJuIFRpbWVcIixcbiAgICAgICAgY2VudGVyQ2hpbGRJZDogXCJ2ZW50LWNhbGlicmF0aW9uLTJcIixcbiAgICAgICAgcmlnaHRDaGlsZElkOiBcImhlYXQtc2hpZWxkaW5nLTJcIlxuICAgICAgfSxcbiAgICAgIHsgbmFtZTogXCJWZWN0b3JpbmcgMVwiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiSnVtcCBKZXQgRm9yd2FyZCBUaHJ1c3RcIixcbiAgICAgICAgbGVmdENoaWxkSWQ6IFwiaGVhdC1zaGllbGRpbmctMlwiLFxuICAgICAgICBjZW50ZXJDaGlsZElkOiBcInZlY3RvcmluZy0yXCIsXG4gICAgICAgIHJpZ2h0Q2hpbGRJZDogXCJsaWZ0LXNwZWVkLTFcIlxuICAgICAgfSxcbiAgICAgIHsgbmFtZTogXCJIZWF0IFNoaWVsZGluZyAyXCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJKdW1wIEpldCBIZWF0IFJlZHVjdGlvblwiLFxuICAgICAgICBsZWZ0Q2hpbGRJZDogXCJ2ZW50LWNhbGlicmF0aW9uLTJcIixcbiAgICAgICAgcmlnaHRDaGlsZElkOiBcInZlY3RvcmluZy0yXCJcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiTGlmdCBTcGVlZCAxXCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJKdW1wIEpldCBJbml0aWFsIEJvb3N0XCIsXG4gICAgICAgIGxlZnRDaGlsZElkOiBcInZlY3RvcmluZy0yXCJcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiVmVudCBDYWxpYnJhdGlvbiAyXCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJKdW1wIEpldCBCdXJuIFRpbWVcIixcbiAgICAgICAgY2VudGVyQ2hpbGRJZDogXCJ2ZW50LWNhbGlicmF0aW9uLTNcIixcbiAgICAgICAgcmlnaHRDaGlsZElkOiBcImhlYXQtc2hpZWxkaW5nLTNcIlxuICAgICAgfSxcbiAgICAgIHsgbmFtZTogXCJWZWN0b3JpbmcgMlwiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiSnVtcCBKZXQgRm9yd2FyZCBUaHJ1c3RcIixcbiAgICAgICAgbGVmdENoaWxkSWQ6IFwiaGVhdC1zaGllbGRpbmctM1wiLFxuICAgICAgICBjZW50ZXJDaGlsZElkOiBcInZlY3RvcmluZy0zXCIsXG4gICAgICAgIHJpZ2h0Q2hpbGRJZDogXCJsaWZ0LXNwZWVkLTJcIlxuICAgICAgfSxcbiAgICAgIHsgbmFtZTogXCJIZWF0IFNoaWVsZGluZyAzXCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJKdW1wIEpldCBIZWF0IFJlZHVjdGlvblwiLFxuICAgICAgICBsZWZ0Q2hpbGRJZDogXCJ2ZW50LWNhbGlicmF0aW9uLTNcIixcbiAgICAgICAgcmlnaHRDaGlsZElkOiBcInZlY3RvcmluZy0zXCJcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiTGlmdCBTcGVlZCAyXCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJKdW1wIEpldCBJbml0aWFsIEJvb3N0XCIsXG4gICAgICAgIGxlZnRDaGlsZElkOiBcInZlY3RvcmluZy0zXCJcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiVmVudCBDYWxpYnJhdGlvbiAzXCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJKdW1wIEpldCBCdXJuIFRpbWVcIixcbiAgICAgICAgbGVmdENoaWxkSWQ6IFwibGlmdC1zcGVlZC0zXCIsXG4gICAgICAgIGNlbnRlckNoaWxkSWQ6IFwidmVudC1jYWxpYnJhdGlvbi00XCIsXG4gICAgICAgIHJpZ2h0Q2hpbGRJZDogXCJoZWF0LXNoaWVsZGluZy00XCJcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiVmVjdG9yaW5nIDNcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIkp1bXAgSmV0IEZvcndhcmQgVGhydXN0XCIsXG4gICAgICAgIGxlZnRDaGlsZElkOiBcImhlYXQtc2hpZWxkaW5nLTRcIixcbiAgICAgICAgY2VudGVyQ2hpbGRJZDogXCJ2ZWN0b3JpbmctNFwiXG4gICAgICB9LFxuICAgICAgeyBuYW1lOiBcIkxpZnQgU3BlZWQgM1wiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiSnVtcCBKZXQgSW5pdGlhbCBCb29zdFwiLFxuICAgICAgICByaWdodENoaWxkSWQ6IFwidmVudC1jYWxpYnJhdGlvbi00XCJcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiSGVhdCBTaGllbGRpbmcgNFwiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiSnVtcCBKZXQgSGVhdCBSZWR1Y3Rpb25cIixcbiAgICAgICAgbGVmdENoaWxkSWQ6IFwidmVudC1jYWxpYnJhdGlvbi00XCIsXG4gICAgICAgIHJpZ2h0Q2hpbGRJZDogXCJ2ZWN0b3JpbmctNFwiXG4gICAgICB9LFxuICAgICAgeyBuYW1lOiBcIlZlbnQgQ2FsaWJyYXRpb24gNFwiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiSnVtcCBKZXQgQnVybiBUaW1lXCIsXG4gICAgICAgIGxlZnRDaGlsZElkOiBcImxpZnQtc3BlZWQtNFwiLFxuICAgICAgICBjZW50ZXJDaGlsZElkOiBcInZlbnQtY2FsaWJyYXRpb24tNVwiLFxuICAgICAgICByaWdodENoaWxkSWQ6IFwiaGVhdC1zaGllbGRpbmctNVwiXG4gICAgICB9LFxuICAgICAgeyBuYW1lOiBcIlZlY3RvcmluZyA0XCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJKdW1wIEpldCBGb3J3YXJkIFRocnVzdFwiLFxuICAgICAgICBsZWZ0Q2hpbGRJZDogXCJoZWF0LXNoaWVsZGluZy01XCIsXG4gICAgICAgIGNlbnRlckNoaWxkSWQ6IFwidmVjdG9yaW5nLTVcIlxuICAgICAgfSxcbiAgICAgIHsgbmFtZTogXCJMaWZ0IFNwZWVkIDRcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIkp1bXAgSmV0IEluaXRpYWwgQm9vc3RcIixcbiAgICAgICAgcmlnaHRDaGlsZElkOiBcInZlbnQtY2FsaWJyYXRpb24tNVwiXG4gICAgICB9LFxuICAgICAgeyBuYW1lOiBcIkhlYXQgU2hpZWxkaW5nIDVcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIkp1bXAgSmV0IEhlYXQgUmVkdWN0aW9uXCIsXG4gICAgICAgIGxlZnRDaGlsZElkOiBcInZlbnQtY2FsaWJyYXRpb24tNVwiLFxuICAgICAgICByaWdodENoaWxkSWQ6IFwidmVjdG9yaW5nLTVcIlxuICAgICAgfSxcbiAgICAgIHsgbmFtZTogXCJWZW50IENhbGlicmF0aW9uIDVcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIkp1bXAgSmV0IEJ1cm4gVGltZVwiLFxuICAgICAgfSxcbiAgICAgIHsgbmFtZTogXCJWZWN0b3JpbmcgNVwiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiSnVtcCBKZXQgRm9yd2FyZCBUaHJ1c3RcIixcbiAgICAgICAgbGVmdENoaWxkSWQ6IFwibGlmdC1zcGVlZC01XCJcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiTGlmdCBTcGVlZCA1XCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJKdW1wIEpldCBJbml0aWFsIEJvb3N0XCIsXG4gICAgICB9XG4gICAgXVxuICB9LFxuICAvKlxuICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICAgICAgICAgICAgICAgT1BFUkFUSU9OU1xuICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgKi9cbiAge1xuICAgIHRyZWVOYW1lOiBcIk9wZXJhdGlvbnNcIixcbiAgICBub2RlczogW1xuICAgICAgeyBuYW1lOiBcIlF1aWNrIElnbml0aW9uIDFcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIlN0YXJ0dXAgU3BlZWRcIixcbiAgICAgICAgbGVmdENoaWxkSWQ6IFwic3BlZWQtcmV0ZW50aW9uLTFcIixcbiAgICAgICAgcmlnaHRDaGlsZElkOiBcImltcHJvdmVkLWd5cm9zLTFcIlxuICAgICAgfSxcbiAgICAgIHsgbmFtZTogXCJTcGVlZCBSZXRlbnRpb24gMVwiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiTGVnZ2VkIFNwZWVkXCIsXG4gICAgICAgIGNlbnRlckNoaWxkSWQ6IFwiaGlsbC1jbGltYi0xXCIsXG4gICAgICAgIHJpZ2h0Q2hpbGRJZDogXCJoZWF0LWNvbnRhaW5tZW50LTFcIlxuICAgICAgfSxcbiAgICAgIHsgbmFtZTogXCJJbXByb3ZlZCBHeXJvcyAxXCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJUYXN0aWVyIEd5cm9zXCIsXG4gICAgICAgIGxlZnRDaGlsZElkOiBcImhlYXQtY29udGFpbm1lbnQtMVwiLFxuICAgICAgICBjZW50ZXJDaGlsZElkOiBcImltcHJvdmVkLWd5cm9zLTJcIlxuICAgICAgfSxcbiAgICAgIHsgbmFtZTogXCJIZWF0IENvbnRhaW5tZW50IDFcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIkhlYXQgQ2FwYWNpdHlcIixcbiAgICAgICAgbGVmdENoaWxkSWQ6IFwiaGlsbC1jbGltYi0xXCIsXG4gICAgICAgIHJpZ2h0Q2hpbGRJZDogXCJpbXByb3ZlZC1neXJvcy0yXCJcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiSGlsbCBDbGltYiAxXCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJIaWxsIENsaW1iXCIsXG4gICAgICAgIGxlZnRDaGlsZElkOiBcImhlYXQtY29udGFpbm1lbnQtMlwiLFxuICAgICAgICBjZW50ZXJDaGlsZElkOiBcImhpbGwtY2xpbWItMlwiXG4gICAgICB9LFxuICAgICAgeyBuYW1lOiBcIkltcHJvdmVkIEd5cm9zIDJcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIlRhc3RpZXIgR3lyb3NcIixcbiAgICAgICAgY2VudGVyQ2hpbGRJZDogXCJzcGVlZC1yZXRlbnRpb24tMlwiLFxuICAgICAgICByaWdodENoaWxkSWQ6IFwiaGVhdC1jb250YWlubWVudC0zXCJcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiSGVhdCBDb250YWlubWVudCAyXCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJIZWF0IENhcGFjaXR5XCIsXG4gICAgICAgIGxlZnRDaGlsZElkOiBcImNvb2wtcnVuLTFcIixcbiAgICAgICAgY2VudGVyQ2hpbGRJZDogXCJxdWljay1pZ25pdGlvbi0yXCJcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiSGVhdCBDb250YWlubWVudCAzXCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJIZWF0IENhcGFjaXR5XCIsXG4gICAgICAgIGNlbnRlckNoaWxkSWQ6IFwicXVpY2staWduaXRpb24tM1wiLFxuICAgICAgICByaWdodENoaWxkSWQ6IFwiY29vbC1ydW4tMlwiXG4gICAgICB9LFxuICAgICAgeyBuYW1lOiBcIkNvb2wgUnVuIDFcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIkhlYXQgRGlzc2lwYXRpb25cIixcbiAgICAgICAgcmlnaHRDaGlsZElkOiBcInF1aWNrLWlnbml0aW9uLTJcIlxuICAgICAgfSxcbiAgICAgIHsgbmFtZTogXCJIaWxsIENsaW1iIDJcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIkhpbGwgQ2xpbWJcIixcbiAgICAgICAgY2VudGVyQ2hpbGRJZDogXCJoaWxsLWNsaW1iLTNcIixcbiAgICAgICAgcmlnaHRDaGlsZElkOiBcImNvb2wtcnVuLTNcIlxuICAgICAgfSxcbiAgICAgIHsgbmFtZTogXCJTcGVlZCBSZXRlbnRpb24gMlwiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiTGVnZ2VkIFNwZWVkXCIsXG4gICAgICAgIGxlZnRDaGlsZElkOiBcImNvb2wtcnVuLTNcIixcbiAgICAgICAgY2VudGVyQ2hpbGRJZDogXCJpbXByb3ZlZC1neXJvcy0zXCJcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiQ29vbCBSdW4gMlwiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiSGVhdCBEaXNzaXBhdGlvblwiLFxuICAgICAgICBsZWZ0Q2hpbGRJZDogXCJxdWljay1pZ25pdGlvbi0zXCJcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiUXVpY2sgSWduaXRpb24gMlwiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiU3RhcnR1cCBTcGVlZFwiLFxuICAgICAgICByaWdodENoaWxkSWQ6IFwiaGlsbC1jbGltYi0zXCJcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiQ29vbCBSdW4gM1wiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiSGVhdCBEaXNzaXBhdGlvblwiLFxuICAgICAgICBsZWZ0Q2hpbGRJZDogXCJoaWxsLWNsaW1iLTNcIixcbiAgICAgICAgcmlnaHRDaGlsZElkOiBcImltcHJvdmVkLWd5cm9zLTNcIlxuICAgICAgfSxcbiAgICAgIHsgbmFtZTogXCJRdWljayBJZ25pdGlvbiAzXCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJTdGFydHVwIFNwZWVkXCIsXG4gICAgICAgIGxlZnRDaGlsZElkOiBcImltcHJvdmVkLWd5cm9zLTNcIlxuICAgICAgfSxcbiAgICAgIHsgbmFtZTogXCJIaWxsIENsaW1iIDNcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIkhpbGwgQ2xpbWJcIixcbiAgICAgICAgbGVmdENoaWxkSWQ6IFwiaGVhdC1jb250YWlubWVudC00XCIsXG4gICAgICAgIHJpZ2h0Q2hpbGRJZDogXCJxdWljay1pZ25pdGlvbi00XCJcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiSW1wcm92ZWQgR3lyb3MgM1wiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiVGFzdGllciBHeXJvc1wiLFxuICAgICAgICBsZWZ0Q2hpbGRJZDogXCJxdWljay1pZ25pdGlvbi00XCIsXG4gICAgICAgIHJpZ2h0Q2hpbGRJZDogXCJoZWF0LWNvbnRhaW5tZW50LTVcIlxuICAgICAgfSxcbiAgICAgIHsgbmFtZTogXCJIZWF0IENvbnRhaW5tZW50IDRcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIkhlYXQgQ2FwYWNpdHlcIixcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiUXVpY2sgSWduaXRpb24gNFwiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiU3RhcnR1cCBTcGVlZFwiLFxuICAgICAgICBsZWZ0Q2hpbGRJZDogXCJpbXByb3ZlZC1neXJvcy00XCIsXG4gICAgICAgIHJpZ2h0Q2hpbGRJZDogXCJzcGVlZC1yZXRlbnRpb24tM1wiXG4gICAgICB9LFxuICAgICAgeyBuYW1lOiBcIkhlYXQgQ29udGFpbm1lbnQgNVwiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiSGVhdCBDYXBhY2l0eVwiLFxuICAgICAgfSxcbiAgICAgIHsgbmFtZTogXCJJbXByb3ZlZCBHeXJvcyA0XCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJUYXN0aWVyIEd5cm9zXCIsXG4gICAgICAgIHJpZ2h0Q2hpbGRJZDogXCJxdWljay1pZ25pdGlvbi01XCJcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiU3BlZWQgUmV0ZW50aW9uIDNcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIkxlZ2dlZCBTcGVlZFwiLFxuICAgICAgICBsZWZ0Q2hpbGRJZDogXCJxdWljay1pZ25pdGlvbi01XCJcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiUXVpY2sgSWduaXRpb24gNVwiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiU3RhcnR1cCBTcGVlZFwiLFxuICAgICAgICBsZWZ0Q2hpbGRJZDogXCJjb29sLXJ1bi00XCIsXG4gICAgICAgIHJpZ2h0Q2hpbGRJZDogXCJjb29sLXJ1bi01XCJcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiQ29vbCBSdW4gNFwiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiSGVhdCBEaXNzaXBhdGlvblwiLFxuICAgICAgfSxcbiAgICAgIHsgbmFtZTogXCJDb29sIFJ1biA1XCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJIZWF0IERpc3NpcGF0aW9uXCIsXG4gICAgICB9XG4gICAgXVxuICB9LFxuICAvKlxuICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICAgICAgICAgICAgICAgICBTRU5TT1JTXG4gID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAqL1xuICB7XG4gICAgdHJlZU5hbWU6IFwiU2Vuc29yc1wiLFxuICAgIG5vZGVzOiBbXG4gICAgICB7IG5hbWU6IFwiVGFyZ2V0IEluZm8gR2F0aGVyaW5nIDFcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIlRhcmdldCBJbmZvIFNwZWVkXCIsXG4gICAgICAgIGxlZnRDaGlsZElkOiBcInRhcmdldC1kZWNheS0xXCIsXG4gICAgICAgIHJpZ2h0Q2hpbGRJZDogXCJzZW5zb3ItcmFuZ2UtMVwiXG4gICAgICB9LFxuICAgICAgeyBuYW1lOiBcIlRhcmdldCBEZWNheSAxXCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJUYXJnZXQgTG9jayBEZWNheVwiLFxuICAgICAgICBsZWZ0Q2hpbGRJZDogXCJ0YXJnZXQtcmV0ZW50aW9uLTFcIixcbiAgICAgICAgY2VudGVyQ2hpbGRJZDogXCJ0YXJnZXQtaW5mby1nYXRoZXJpbmctM1wiLFxuICAgICAgICByaWdodENoaWxkSWQ6IFwic2Vuc29yLXJhbmdlLTJcIlxuICAgICAgfSxcbiAgICAgIHsgbmFtZTogXCJTZW5zb3IgUmFuZ2UgMVwiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiU2Vuc29yIFJhbmdlXCIsXG4gICAgICAgIGxlZnRDaGlsZElkOiBcInNlbnNvci1yYW5nZS0yXCIsXG4gICAgICAgIGNlbnRlckNoaWxkSWQ6IFwic2Vuc29yLXJhbmdlLTNcIixcbiAgICAgICAgcmlnaHRDaGlsZElkOiBcInRhcmdldC1pbmZvLWdhdGhlcmluZy0yXCJcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiVGFyZ2V0IFJldGVudGlvbiAxXCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJUYXJnZXQgUmV0ZW50aW9uXCIsXG4gICAgICB9LFxuICAgICAgeyBuYW1lOiBcIlNlbnNvciBSYW5nZSAyXCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJTZW5zb3IgUmFuZ2VcIixcbiAgICAgICAgbGVmdENoaWxkSWQ6IFwidGFyZ2V0LWluZm8tZ2F0aGVyaW5nLTNcIixcbiAgICAgICAgcmlnaHRDaGlsZElkOiBcInNlbnNvci1yYW5nZS0zXCJcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiVGFyZ2V0IEluZm8gR2F0aGVyaW5nIDJcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIlRhcmdldCBJbmZvIFNwZWVkXCIsXG4gICAgICAgIHJpZ2h0Q2hpbGRJZDogXCJhZHZhbmNlZC16b29tXCJcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiVGFyZ2V0IEluZm8gR2F0aGVyaW5nIDNcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIlRhcmdldCBJbmZvIFNwZWVkXCIsXG4gICAgICAgIGNlbnRlckNoaWxkSWQ6IFwidGFyZ2V0LWluZm8tZ2F0aGVyaW5nLTRcIixcbiAgICAgICAgcmlnaHRDaGlsZElkOiBcInRhcmdldC1kZWNheS0yXCJcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiU2Vuc29yIFJhbmdlIDNcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIlNlbnNvciBSYW5nZVwiLFxuICAgICAgICBsZWZ0Q2hpbGRJZDogXCJ0YXJnZXQtZGVjYXktMlwiLFxuICAgICAgICBjZW50ZXJDaGlsZElkOiBcInRhcmdldC1yZXRlbnRpb24tMlwiXG4gICAgICB9LFxuICAgICAgeyBuYW1lOiBcIkFkdmFuY2VkIFpvb21cIixcbiAgICAgICAgYXR0cmlidXRlOiBcIlpvb20gTWFnbmlmaWVyXCIsXG4gICAgICB9LFxuICAgICAgeyBuYW1lOiBcIlRhcmdldCBEZWNheSAyXCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJUYXJnZXQgTG9jayBEZWNheVwiLFxuICAgICAgfSxcbiAgICAgIHsgbmFtZTogXCJUYXJnZXQgSW5mbyBHYXRoZXJpbmcgNFwiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiVGFyZ2V0IEluZm8gU3BlZWRcIixcbiAgICAgICAgbGVmdENoaWxkSWQ6IFwicmFkYXItZGVwcml2YXRpb24tMVwiLFxuICAgICAgICBjZW50ZXJDaGlsZElkOiBcInNlbnNvci1yYW5nZS00XCJcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiVGFyZ2V0IFJldGVudGlvbiAyXCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJUYXJnZXQgUmV0ZW50aW9uXCIsXG4gICAgICAgIGNlbnRlckNoaWxkSWQ6IFwic2Vuc29yLXJhbmdlLTVcIixcbiAgICAgICAgcmlnaHRDaGlsZElkOiBcInRhcmdldC1kZWNheS0zXCJcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiUmFkYXIgRGVwcml2YXRpb24gMVwiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiUmFkYXIgRGVwcml2YXRpb25cIixcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiVGFyZ2V0IERlY2F5IDNcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIlRhcmdldCBMb2NrIERlY2F5XCIsXG4gICAgICAgIHJpZ2h0Q2hpbGRJZDogXCJzZWlzbWljLXNlbnNvci0xXCJcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiU2Vuc29yIFJhbmdlIDRcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIlNlbnNvciBSYW5nZVwiLFxuICAgICAgICBsZWZ0Q2hpbGRJZDogXCJyYWRhci1kZXByaXZhdGlvbi0yXCIsXG4gICAgICAgIGNlbnRlckNoaWxkSWQ6IFwidGFyZ2V0LWluZm8tZ2F0aGVyaW5nLTVcIixcbiAgICAgICAgcmlnaHRDaGlsZElkOiBcInRhcmdldC1kZWNheS00XCJcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiU2Vuc29yIFJhbmdlIDVcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIlNlbnNvciBSYW5nZVwiLFxuICAgICAgICBsZWZ0Q2hpbGRJZDogXCJ0YXJnZXQtZGVjYXktNFwiLFxuICAgICAgICBjZW50ZXJDaGlsZElkOiBcInRhcmdldC1kZWNheS01XCIsXG4gICAgICAgIHJpZ2h0Q2hpbGRJZDogXCJyYWRhci1kZXByaXZhdGlvbi0zXCJcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiU2Vpc21pYyBTZW5zb3IgMVwiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiU2Vpc21pYyBTZW5zb3JcIixcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiUmFkYXIgRGVwcml2YXRpb24gMlwiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiUmFkYXIgRGVwcml2YXRpb25cIixcbiAgICAgICAgbGVmdENoaWxkSWQ6IFwiZW5oYW5jZWQtZWNtLTFcIixcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiVGFyZ2V0IERlY2F5IDRcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIlRhcmdldCBMb2NrIERlY2F5XCIsXG4gICAgICB9LFxuICAgICAgeyBuYW1lOiBcIlJhZGFyIERlcHJpdmF0aW9uIDNcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIlJhZGFyIERlcHJpdmF0aW9uXCIsXG4gICAgICAgIHJpZ2h0Q2hpbGRJZDogXCJlbmhhbmNlZC1lY20tMlwiXG4gICAgICB9LFxuICAgICAgeyBuYW1lOiBcIkVuaGFuY2VkIEVDTSAxXCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJFbmhhbmNlZCBFQ00gU3lzdGVtc1wiLFxuICAgICAgfSxcbiAgICAgIHsgbmFtZTogXCJUYXJnZXQgSW5mbyBHYXRoZXJpbmcgNVwiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiVGFyZ2V0IEluZm8gU3BlZWRcIixcbiAgICAgICAgbGVmdENoaWxkSWQ6IFwic2Vpc21pYy1zZW5zb3ItMlwiLFxuICAgICAgICByaWdodENoaWxkSWQ6IFwicmFkYXItZGVwcml2YXRpb24tNFwiXG4gICAgICB9LFxuICAgICAgeyBuYW1lOiBcIlRhcmdldCBEZWNheSA1XCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJUYXJnZXQgTG9jayBEZWNheVwiLFxuICAgICAgICByaWdodENoaWxkSWQ6IFwicmFkYXItZGVwcml2YXRpb24tNVwiXG4gICAgICB9LFxuICAgICAgeyBuYW1lOiBcIkVuaGFuY2VkIEVDTSAyXCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJFbmhhbmNlZCBFQ00gU3lzdGVtc1wiLFxuICAgICAgfSxcbiAgICAgIHsgbmFtZTogXCJTZWlzbWljIFNlbnNvciAyXCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJTZWlzbWljIFNlbnNvclwiLFxuICAgICAgfSxcbiAgICAgIHsgbmFtZTogXCJSYWRhciBEZXByaXZhdGlvbiA0XCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJSYWRhciBEZXByaXZhdGlvblwiLFxuICAgICAgfSxcbiAgICAgIHsgbmFtZTogXCJSYWRhciBEZXByaXZhdGlvbiA1XCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJSYWRhciBEZXByaXZhdGlvblwiLFxuICAgICAgfVxuICAgIF1cbiAgfSxcbiAgLypcbiAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAgICAgICAgICAgICAgICBBVVhJTElBUllcbiAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICovXG4gIHtcbiAgICB0cmVlTmFtZTogXCJBdXhpbGlhcnlcIixcbiAgICBub2RlczogW1xuICAgICAgeyBuYW1lOiBcIkNvbnN1bWFibGUgU2xvdCAxXCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJBZGRpdGlvbmFsIENvbnN1bWFibGUgU2xvdFwiLFxuICAgICAgICBsZWZ0Q2hpbGRJZDogXCJ1YXYtZHVyYXRpb25cIixcbiAgICAgICAgcmlnaHRDaGlsZElkOiBcImFkdmFuY2VkLXNhbHZvcy0xXCJcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiVUFWIER1cmF0aW9uXCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJVQVYgRHVyYXRpb25cIixcbiAgICAgICAgbGVmdENoaWxkSWQ6IFwidWF2LXJhbmdlLTFcIixcbiAgICAgICAgY2VudGVyQ2hpbGRJZDogXCJjYXB0dXJlLWFzc2lzdC0xXCIsXG4gICAgICAgIHJpZ2h0Q2hpbGRJZDogXCJlbmhhbmNlZC1jb29sc2hvdC0xXCJcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiQWR2YW5jZWQgU2Fsdm9zIDFcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIkFydGlsbGVyeSBTdHJpa2UgRHVyYXRpb25cIixcbiAgICAgICAgbGVmdENoaWxkSWQ6IFwiZW5oYW5jZWQtY29vbHNob3QtMVwiLFxuICAgICAgICBjZW50ZXJDaGlsZElkOiBcImNhcHR1cmUtYXNzaXN0LTJcIixcbiAgICAgICAgcmlnaHRDaGlsZElkOiBcImFkdmFuY2VkLXNhbHZvcy0yXCJcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiVUFWIFJhbmdlIDFcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIlVBViBTaWdodCBSYW5nZVwiLFxuICAgICAgICBsZWZ0Q2hpbGRJZDogXCJleHRyYS11YXZcIixcbiAgICAgICAgY2VudGVyQ2hpbGRJZDogXCJlbmhhbmNlZC1uYXJjLTFcIlxuICAgICAgfSxcbiAgICAgIHsgbmFtZTogXCJFbmhhbmNlZCBDb29sc2hvdCAxXCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJDb29sc2hvdCBFZmZlY3RpdmVuZXNzXCIsXG4gICAgICAgIGxlZnRDaGlsZElkOiBcImNhcHR1cmUtYXNzaXN0LTFcIixcbiAgICAgICAgY2VudGVyQ2hpbGRJZDogXCJlbmhhbmNlZC1jb29sc2hvdC0yXCIsXG4gICAgICAgIHJpZ2h0Q2hpbGRJZDogXCJjYXB0dXJlLWFzc2lzdC0yXCJcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiQWR2YW5jZWQgU2Fsdm9zIDJcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIkFydGlsbGVyeSBTdHJpa2UgRHVyYXRpb25cIixcbiAgICAgICAgY2VudGVyQ2hpbGRJZDogXCJlbmhhbmNlZC1uYXJjLTJcIixcbiAgICAgICAgcmlnaHRDaGlsZElkOiBcImV4cGFuZGVkLXJlc2VydmVzXCJcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiRXh0cmEgVUFWXCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJVQVYgQ2FwYWNpdHlcIixcbiAgICAgICAgbGVmdENoaWxkSWQ6IFwidWF2LXJhbmdlLTJcIixcbiAgICAgICAgY2VudGVyQ2hpbGRJZDogXCJjb25zdW1hYmxlLXNsb3QtMlwiXG4gICAgICB9LFxuICAgICAgeyBuYW1lOiBcIkNhcHR1cmUgQXNzaXN0IDFcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIlBvaW50IENhcHR1cmUgU3BlZWRcIixcbiAgICAgICAgbGVmdENoaWxkSWQ6IFwiZW5oYW5jZWQtbmFyYy0xXCIsXG4gICAgICAgIGNlbnRlckNoaWxkSWQ6IFwiY2FwdHVyZS1hc3Npc3QtM1wiLFxuICAgICAgICByaWdodENoaWxkSWQ6IFwiZW5oYW5jZWQtY29vbHNob3QtMlwiXG4gICAgICB9LFxuICAgICAgeyBuYW1lOiBcIkNhcHR1cmUgQXNzaXN0IDJcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIlBvaW50IENhcHR1cmUgU3BlZWRcIixcbiAgICAgICAgbGVmdENoaWxkSWQ6IFwiZW5oYW5jZWQtY29vbHNob3QtMlwiLFxuICAgICAgICBjZW50ZXJDaGlsZElkOiBcImNhcHR1cmUtYXNzaXN0LTRcIixcbiAgICAgICAgcmlnaHRDaGlsZElkOiBcImVuaGFuY2VkLW5hcmMtMlwiXG4gICAgICB9LFxuICAgICAgeyBuYW1lOiBcIkV4cGFuZGVkIFJlc2VydmVzXCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJBZGRpdGlvbmFsIEFpciAvIEFydHkgU3RyaWtlXCIsXG4gICAgICAgIGNlbnRlckNoaWxkSWQ6IFwiY29uc3VtYWJsZS1zbG90LTNcIixcbiAgICAgICAgcmlnaHRDaGlsZElkOiBcImVuaGFuY2VkLXNwb3R0aW5nXCJcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiVUFWIFJhbmdlIDJcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIlVBViBTaWdodCBSYW5nZVwiLFxuICAgICAgfSxcbiAgICAgIHsgbmFtZTogXCJFbmhhbmNlZCBOQVJDIDFcIixcbiAgICAgICAgYXR0cmlidXRlOiBcIk5BUkMgVmVsb2NpdHkgYW5kIER1cmF0aW9uXCIsXG4gICAgICAgIHJpZ2h0Q2hpbGRJZDogXCJjYXB0dXJlLWFzc2lzdC0zXCJcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiRW5oYW5jZWQgQ29vbHNob3QgMlwiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiQ29vbHNob3QgRWZmZWN0aXZlbmVzc1wiLFxuICAgICAgICBsZWZ0Q2hpbGRJZDogXCJjYXB0dXJlLWFzc2lzdC0zXCIsXG4gICAgICAgIGNlbnRlckNoaWxkSWQ6IFwiY29vbGFudC1yZXNlcnZlc1wiLFxuICAgICAgICByaWdodENoaWxkSWQ6IFwiY2FwdHVyZS1hc3Npc3QtNFwiXG4gICAgICB9LFxuICAgICAgeyBuYW1lOiBcIkVuaGFuY2VkIE5BUkMgMlwiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiTkFSQyBWZWxvY2l0eSBhbmQgRHVyYXRpb25cIixcbiAgICAgICAgbGVmdENoaWxkSWQ6IFwiY2FwdHVyZS1hc3Npc3QtNFwiXG4gICAgICB9LFxuICAgICAgeyBuYW1lOiBcIkVuaGFuY2VkIFNwb3R0aW5nXCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJBaXIgLyBBcnR5IFN0cmlrZSBBY2N1cmFjeVwiLFxuICAgICAgfSxcbiAgICAgIHsgbmFtZTogXCJDb25zdW1hYmxlIFNsb3QgMlwiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiQWRkaXRpb25hbCBDb25zdW1hYmxlIFNsb3RcIixcbiAgICAgIH0sXG4gICAgICB7IG5hbWU6IFwiQ2FwdHVyZSBBc3Npc3QgM1wiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiUG9pbnQgQ2FwdHVyZSBTcGVlZFwiLFxuICAgICAgfSxcbiAgICAgIHsgbmFtZTogXCJDYXB0dXJlIEFzc2lzdCA0XCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJQb2ludCBDYXB0dXJlIFNwZWVkXCIsXG4gICAgICB9LFxuICAgICAgeyBuYW1lOiBcIkNvbnN1bWFibGUgU2xvdCAzXCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJBZGRpdGlvbmFsIENvbnN1bWFibGUgU2xvdFwiLFxuICAgICAgfSxcbiAgICAgIHsgbmFtZTogXCJDb29sYW50IFJlc2VydmVzXCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJDb29sYW50IFJlc2VydmVzXCIsXG4gICAgICAgIGxlZnRDaGlsZElkOiBcImNvb2xzaG90LWNvb2xkb3duXCIsXG4gICAgICAgIHJpZ2h0Q2hpbGRJZDogXCJjb25zdW1hYmxlLXNsb3QtNFwiXG4gICAgICB9LFxuICAgICAgeyBuYW1lOiBcIkNvb2xzaG90IENvb2xkb3duXCIsXG4gICAgICAgIGF0dHJpYnV0ZTogXCJDb29sc2hvdCBDb29sZG93blwiLFxuICAgICAgfSxcbiAgICAgIHsgbmFtZTogXCJDb25zdW1hYmxlIFNsb3QgNFwiLFxuICAgICAgICBhdHRyaWJ1dGU6IFwiQWRkaXRpb25hbCBDb25zdW1hYmxlIFNsb3RcIixcbiAgICAgIH1cbiAgICBdXG4gIH1cbl1cbiIsIlxuZXhwb3J0IGxldCBhdHRyaWJ1dGVNYXAgPSBbXG5cbiAgLypcbiAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAgICAgICAgICAgICAgICAgV0VBUE9OU1xuICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgKi9cbiAge1xuICAgIG5hbWU6IFwiV2VhcG9uIFJhbmdlXCIsXG4gICAgbGFiZWw6IFwiUmFuZ2VcIixcbiAgICBkZXNjcmlwdGlvbjogXCJJbmNyZWFzZXMgZWZmZWN0aXZlIHJhbmdlIG9mIGFsbCB3ZWFwb25zXCIsXG4gICAgdmFsdWU6IFwiMVwiLFxuICAgIHRlbXBsYXRlOiBcIit7fSVcIixcbiAgICBjb2xvcjogXCIjYTZjZWUzXCJcbiAgfSwge1xuICAgIG5hbWU6IFwiTGFzZXIgRHVyYXRpb25cIixcbiAgICBsYWJlbDogXCJMYXNlciBEdXJhdGlvblwiLFxuICAgIGRlc2NyaXB0aW9uOiBcIlJlZHVjZXMgYnVybiBkdXJhdGlvbiBvZiBsYXNlcnNcIixcbiAgICB2YWx1ZTogXCIzLjc1XCIsXG4gICAgdGVtcGxhdGU6IFwiLXt9JVwiLFxuICAgIGNvbG9yOiBcIiMxZjc4YjRcIixcbiAgICBjaGFzc2lzVmFsdWVzOiB7XG4gICAgICBsaWdodDoge1xuICAgICAgICBpczogJzMuNzUnLFxuICAgICAgICBjbGFuOiAnMi41MCdcbiAgICAgIH0sXG4gICAgICBtZWRpdW06IHtcbiAgICAgICAgaXM6ICczLjc1JyxcbiAgICAgICAgY2xhbjogJzIuNTAnXG4gICAgICB9LFxuICAgICAgaGVhdnk6IHtcbiAgICAgICAgaXM6ICczLjc1JyxcbiAgICAgICAgY2xhbjogJzIuNTAnXG4gICAgICB9LFxuICAgICAgYXNzYXVsdDoge1xuICAgICAgICBpczogJzMuNzUnLFxuICAgICAgICBjbGFuOiAnMi41MCdcbiAgICAgIH0sXG4gICAgfVxuICB9LCB7XG4gICAgbmFtZTogXCJXZWFwb24gVmVsb2NpdHlcIixcbiAgICBsYWJlbDogXCJWZWxvY2l0eVwiLFxuICAgIGRlc2NyaXB0aW9uOiBcIkluY3JlYXNlcyB2ZWxvY2l0eSBvZiBiYWxsaXN0aWMsIG1pc3NpbGUsIGFuZCBQUEMgcHJvamVjdGlsZXNcIixcbiAgICB2YWx1ZTogXCIzXCIsXG4gICAgdGVtcGxhdGU6IFwiK3t9JVwiLFxuICAgIGNvbG9yOiBcIiNlMzFhMWNcIlxuICB9LCB7XG4gICAgbmFtZTogXCJXZWFwb24gQ29vbGRvd25cIixcbiAgICBsYWJlbDogXCJDb29sZG93blwiLFxuICAgIGRlc2NyaXB0aW9uOiBcIlJlZHVjZXMgYWxsIHdlYXBvbiBjb29sZG93bnNcIixcbiAgICB2YWx1ZTogXCIwLjc1XCIsXG4gICAgdGVtcGxhdGU6IFwiLXt9JVwiLFxuICAgIGNvbG9yOiBcIiMzM2EwMmNcIixcbiAgICBjaGFzc2lzVmFsdWVzOiB7XG4gICAgICBsaWdodDoge1xuICAgICAgICBpczogJzAuNzUnLFxuICAgICAgICBjbGFuOiAnMC42J1xuICAgICAgfSxcbiAgICAgIG1lZGl1bToge1xuICAgICAgICBpczogJzAuNzUnLFxuICAgICAgICBjbGFuOiAnMC42J1xuICAgICAgfSxcbiAgICAgIGhlYXZ5OiB7XG4gICAgICAgIGlzOiAnMC43NScsXG4gICAgICAgIGNsYW46ICcwLjYnXG4gICAgICB9LFxuICAgICAgYXNzYXVsdDoge1xuICAgICAgICBpczogJzAuNzUnLFxuICAgICAgICBjbGFuOiAnMC42J1xuICAgICAgfSxcbiAgICB9XG4gIH0sIHtcbiAgICBuYW1lOiBcIk1pc3NpbGUgQ3JpdCBEYW1hZ2VcIixcbiAgICBsYWJlbDogXCJIaWdoIEV4cGxvc2l2ZVwiLFxuICAgIGRlc2NyaXB0aW9uOiBcIkluY3JlYXNlcyB0aGUgZGFtYWdlIGRvbmUgYnkgbWlzc2lsZSBjcml0aWNhbCBoaXRzIGFnYWluc3QgaW50ZXJuYWwgc3RydWN0dXJlXCIsXG4gICAgdmFsdWU6IFwiNy41XCIsXG4gICAgdGVtcGxhdGU6IFwiK3t9JVwiLFxuICAgIGNvbG9yOiBcIiNmYjlhOTlcIlxuICB9LCB7XG4gICAgbmFtZTogXCJHYXVzcyBIZWxkIFRpbWVcIixcbiAgICBsYWJlbDogXCJHYXVzcyBDaGFyZ2VcIixcbiAgICBkZXNjcmlwdGlvbjogXCJJbmNyZWFzZXMgdGhlIGR1cmF0aW9uIHdoaWNoIGEgR2F1c3Mgd2VhcG9uIGNhbiBiZSBoZWxkIGNoYXJnZWQgYmVmb3JlIGRlcGxldGluZ1wiLFxuICAgIHZhbHVlOiBcIjAuNzVcIixcbiAgICB0ZW1wbGF0ZTogXCIre30gc2VjLlwiLFxuICAgIGNvbG9yOiBcIiNjYWIyZDZcIlxuICB9LCB7XG4gICAgbmFtZTogXCJXZWFwb24gSGVhdCBHZW5cIixcbiAgICBsYWJlbDogXCJIZWF0IEdlblwiLFxuICAgIGRlc2NyaXB0aW9uOiBcIlJlZHVjZXMgdGhlIGhlYXQgZ2VuZXJhdGVkIGJ5IGFsbCB3ZWFwb25zXCIsXG4gICAgdmFsdWU6IFwiMC43NVwiLFxuICAgIHRlbXBsYXRlOiBcIi17fSVcIixcbiAgICBjb2xvcjogXCIjZmRiZjZmXCIsXG4gICAgY2hhc3Npc1ZhbHVlczoge1xuICAgICAgbGlnaHQ6IHtcbiAgICAgICAgaXM6ICcwLjc1JyxcbiAgICAgICAgY2xhbjogJzAuNidcbiAgICAgIH0sXG4gICAgICBtZWRpdW06IHtcbiAgICAgICAgaXM6ICcwLjc1JyxcbiAgICAgICAgY2xhbjogJzAuNidcbiAgICAgIH0sXG4gICAgICBoZWF2eToge1xuICAgICAgICBpczogJzAuNzUnLFxuICAgICAgICBjbGFuOiAnMC42J1xuICAgICAgfSxcbiAgICAgIGFzc2F1bHQ6IHtcbiAgICAgICAgaXM6ICcwLjc1JyxcbiAgICAgICAgY2xhbjogJzAuNidcbiAgICAgIH0sXG4gICAgfVxuICB9LCB7XG4gICAgbmFtZTogXCJCYWxsaXN0aWMgQW1tb1wiLFxuICAgIGxhYmVsOiBcIk1hZ2F6aW5lIENhcGFjaXR5XCIsXG4gICAgZGVzY3JpcHRpb246IFwiUHJvdmlkZXMgYWRkaXRpb25hbCBwZXItdG9uIGFtbXVuaXRpb24gZm9yIEJhbGxzdGljIHdlYXBvbnNcIixcbiAgICB2YWx1ZTogXCI4XCIsXG4gICAgdGVtcGxhdGU6IFwiK3t9XCIsXG4gICAgY29sb3I6IFwiI2ZmN2YwMFwiXG4gIH0sIHtcbiAgICBuYW1lOiBcIk1pc3NpbGUgQW1tb1wiLFxuICAgIGxhYmVsOiBcIk1pc3NpbGUgUmFja1wiLFxuICAgIGRlc2NyaXB0aW9uOiBcIlByb3ZpZGVzIGFkZGl0aW9uYWwgcGVyLXRvbiBhbW11bml0aW9uIGZvciBNaXNzaWxlIHdlYXBvbnNcIixcbiAgICB2YWx1ZTogXCIxXCIsXG4gICAgdGVtcGxhdGU6IFwiK3t9XCIsXG4gICAgY29sb3I6IFwiI2IxNTkyOFwiXG4gIH0sIHtcbiAgICBuYW1lOiBcIk1pc3NpbGUgU3ByZWFkXCIsXG4gICAgbGFiZWw6IFwiTWlzc2lsZSBTcHJlYWRcIixcbiAgICBkZXNjcmlwdGlvbjogXCJSZWR1Y2VzIG1pc3NpbGUgc3ByZWFkXCIsXG4gICAgdmFsdWU6IFwiMi41XCIsXG4gICAgdGVtcGxhdGU6IFwiK3t9JVwiLFxuICAgIGNvbG9yOiBcIiM2YTNkOWFcIlxuICB9LCB7XG4gICAgbmFtZTogXCJMQlggU3ByZWFkXCIsXG4gICAgbGFiZWw6IFwiTEJYIFNwcmVhZFwiLFxuICAgIGRlc2NyaXB0aW9uOiBcIlJlZHVjZXMgTEItWCBhdXRvY2Fubm9uIHNwcmVhZFwiLFxuICAgIHZhbHVlOiBcIjVcIixcbiAgICB0ZW1wbGF0ZTogXCIte30lXCIsXG4gICAgY29sb3I6IFwiI2ZmZmY5OVwiXG4gIH0sIHtcbiAgICBuYW1lOiBcIkVuaGFuY2VkIFVBQyAvIFJBQ1wiLFxuICAgIGxhYmVsOiBcIkVuaGFuY2VkIFVBQ1wiLFxuICAgIGRlc2NyaXB0aW9uOiBcIlJlZHVjZXMgamFtIHRpbWUgZm9yIFVsdHJhIGF1dG9jYW5ub247IGltcHJvdmVzIGphbSBiYXIgcmVkdWN0aW9uIGZvciBSb3RhcnkgYXV0b2Nhbm5vblwiLFxuICAgIHZhbHVlOiBcIjIuNVwiLFxuICAgIHRlbXBsYXRlOiBcIi17fSVcIixcbiAgICBjb2xvcjogXCIjYjJkZjhhXCJcbiAgfSwge1xuICAgIG5hbWU6IFwiRmxhbWVyIFZlbnRpbGF0aW9uXCIsXG4gICAgbGFiZWw6IFwiRmxhbWVyIFZlbnRpbGF0aW9uXCIsXG4gICAgZGVzY3JpcHRpb246IFwiSW5jcmVhc2VzIHJhbXBlZCBoZWF0IGRpc3NpcGF0aW9uXCIsXG4gICAgdmFsdWU6IFwiNy41XCIsXG4gICAgdGVtcGxhdGU6IFwiLXt9JVwiLFxuICAgIGNvbG9yOiBcIiNmZmZmOTlcIlxuICB9LFxuICAvKlxuICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICAgICAgICAgICAgICAgIFNVUlZJVkFMXG4gID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAqL1xuICB7XG4gICAgbmFtZTogXCJBcm1vclwiLFxuICAgIGxhYmVsOiBcIkFybW9yIEhhcmRlbmluZ1wiLFxuICAgIGRlc2NyaXB0aW9uOiBcIkluY3JlYXNlcyBhcm1vclwiLFxuICAgIHZhbHVlOiBcIjEuNlwiLFxuICAgIHRlbXBsYXRlOiBcIit7fSVcIixcbiAgICBjb2xvcjogXCIjZTQxYTFjXCIsXG4gICAgY2hhc3Npc1ZhbHVlczoge1xuICAgICAgbGlnaHQ6IHtcbiAgICAgICAgaXM6ICcyLjUnLFxuICAgICAgICBjbGFuOiAnMi41J1xuICAgICAgfSxcbiAgICAgIG1lZGl1bToge1xuICAgICAgICBpczogJzIuMCcsXG4gICAgICAgIGNsYW46ICcyLjAnXG4gICAgICB9LFxuICAgICAgaGVhdnk6IHtcbiAgICAgICAgaXM6ICcxLjUnLFxuICAgICAgICBjbGFuOiAnMS41J1xuICAgICAgfSxcbiAgICAgIGFzc2F1bHQ6IHtcbiAgICAgICAgaXM6ICcxLjAnLFxuICAgICAgICBjbGFuOiAnMS4wJ1xuICAgICAgfSxcbiAgICB9XG4gIH0sIHtcbiAgICBuYW1lOiBcIkFNUyBFZmZlY3RpdmVuZXNzXCIsXG4gICAgbGFiZWw6IFwiQU1TIE92ZXJsb2FkXCIsXG4gICAgZGVzY3JpcHRpb246IFwiSW5jcmVhc2VzIEFudGktTWlzc2lsZSBTeXN0ZW0gc2hvb3Rkb3duIHJhdGVcIixcbiAgICB2YWx1ZTogXCIwLjc1XCIsXG4gICAgdGVtcGxhdGU6IFwiK3t9JVwiLFxuICAgIGNvbG9yOiBcIiMzNzdlYjhcIlxuICB9LCB7XG4gICAgbmFtZTogXCJDcml0IENoYW5jZSBSZWNlaXZlZFwiLFxuICAgIGxhYmVsOiBcIlJlaW5mb3JjZWQgQ2FzaW5nXCIsXG4gICAgZGVzY3JpcHRpb246IFwiUmVkdWNlcyBjcml0aWNhbCBoaXQgYWdhaW5zdCBpbnRlcm5hbCBzdHJ1Y3R1cmUgcmF0ZVwiLFxuICAgIHZhbHVlOiBcIjFcIixcbiAgICB0ZW1wbGF0ZTogXCIte30lXCIsXG4gICAgY29sb3I6IFwiIzRkYWY0YVwiXG4gIH0sIHtcbiAgICBuYW1lOiBcIkludGVybmFsIFN0cnVjdHVyZVwiLFxuICAgIGxhYmVsOiBcIlNrZWxldGFsIERlbnNpdHlcIixcbiAgICBkZXNjcmlwdGlvbjogXCJJbmNyZWFzZXMgaW50ZXJuYWwgc3RydWN0dXJlXCIsXG4gICAgdmFsdWU6IFwiMy4xXCIsXG4gICAgdGVtcGxhdGU6IFwiK3t9JVwiLFxuICAgIGNvbG9yOiBcIiM5ODRlYTNcIixcbiAgICBjaGFzc2lzVmFsdWVzOiB7XG4gICAgICBsaWdodDoge1xuICAgICAgICBpczogJzQnLFxuICAgICAgICBjbGFuOiAnNCdcbiAgICAgIH0sXG4gICAgICBtZWRpdW06IHtcbiAgICAgICAgaXM6ICczLjUnLFxuICAgICAgICBjbGFuOiAnMy41J1xuICAgICAgfSxcbiAgICAgIGhlYXZ5OiB7XG4gICAgICAgIGlzOiAnMi41JyxcbiAgICAgICAgY2xhbjogJzIuNSdcbiAgICAgIH0sXG4gICAgICBhc3NhdWx0OiB7XG4gICAgICAgIGlzOiAnMS41JyxcbiAgICAgICAgY2xhbjogJzEuNSdcbiAgICAgIH0sXG4gICAgfVxuICB9LCB7XG4gICAgbmFtZTogXCJGYWxsIERhbWFnZVwiLFxuICAgIGxhYmVsOiBcIlNob2NrIEFic29yYnRpb25cIixcbiAgICBkZXNjcmlwdGlvbjogXCJSZWR1Y2VzIGRhbWFnZSB0YWtlbiBmcm9tIGZhbGxzXCIsXG4gICAgdmFsdWU6IFwiMTBcIixcbiAgICB0ZW1wbGF0ZTogXCIte30lXCIsXG4gICAgY29sb3I6IFwiI2ZmN2YwMFwiXG4gIH0sXG4gIC8qXG4gID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgICAgICAgICAgICAgICAgICBNT0JJTElUWVxuICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgKi9cbiAge1xuICAgIG5hbWU6IFwiQWNjZWxlcmF0aW9uXCIsXG4gICAgbGFiZWw6IFwiS2luZXRpYyBCdXJzdFwiLFxuICAgIGRlc2NyaXB0aW9uOiBcIkluY3JlYXNlcyBhY2NlbGVyYXRpb25cIixcbiAgICB2YWx1ZTogXCIzLjVcIixcbiAgICB0ZW1wbGF0ZTogXCIre30lXCIsXG4gICAgY29sb3I6IFwiI2U0MWExY1wiXG4gIH0sIHtcbiAgICBuYW1lOiBcIkRlY2VsZXJhdGlvblwiLFxuICAgIGxhYmVsOiBcIkhhcmQgQnJha2VcIixcbiAgICBkZXNjcmlwdGlvbjogXCJJbmNyZWFzZXMgZGVjZWxlcmF0aW9uXCIsXG4gICAgdmFsdWU6IFwiMy41XCIsXG4gICAgdGVtcGxhdGU6IFwiK3t9JVwiLFxuICAgIGNvbG9yOiBcIiMzNzdlYjhcIlxuICB9LCB7XG4gICAgbmFtZTogXCJNYXggVG9yc28gSW5jbGluYXRpb25cIixcbiAgICBsYWJlbDogXCJUb3JzbyBQaXRjaFwiLFxuICAgIGRlc2NyaXB0aW9uOiBcIkluY3JlYXNlcyB0aGUgZGVncmVlIHRvIHdoaWNoIGEgJ21lY2ggY2FuIGluY2xpbmUgaXRzIHRvcnNvXCIsXG4gICAgdmFsdWU6IFwiMlwiLFxuICAgIHRlbXBsYXRlOiBcIit7fSVcIixcbiAgICBjb2xvcjogXCIjNGRhZjRhXCJcbiAgfSwge1xuICAgIG5hbWU6IFwiTWF4IEFybSBJbmNsaW5hdGlvblwiLFxuICAgIGxhYmVsOiBcIlwiLFxuICAgIGRlc2NyaXB0aW9uOiBcIlwiLFxuICAgIHZhbHVlOiBcIlwiLFxuICAgIHRlbXBsYXRlOiBcIit7fSVcIixcbiAgICBjb2xvcjogXCIjOTg0ZWEzXCJcbiAgfSwge1xuICAgIG5hbWU6IFwiVG9yc28gVHdpc3QgU3BlZWRcIixcbiAgICBsYWJlbDogXCJUb3JzbyBTcGVlZFwiLFxuICAgIGRlc2NyaXB0aW9uOiBcIkluY3JlYXNlcyB0aGUgc3BlZWQgd2l0aCB3aGljaCBhICdtZWNoIGNhbiB0dXJuIGl0cyB0b3Jzb1wiLFxuICAgIHZhbHVlOiBcIjMuNVwiLFxuICAgIHRlbXBsYXRlOiBcIit7fSVcIixcbiAgICBjb2xvcjogXCIjZmY3ZjAwXCIsXG4gICAgY2hhc3Npc1ZhbHVlczoge1xuICAgICAgbGlnaHQ6IHtcbiAgICAgICAgaXM6ICc1JyxcbiAgICAgICAgY2xhbjogJzUnXG4gICAgICB9LFxuICAgICAgbWVkaXVtOiB7XG4gICAgICAgIGlzOiAnNCcsXG4gICAgICAgIGNsYW46ICc0J1xuICAgICAgfSxcbiAgICAgIGhlYXZ5OiB7XG4gICAgICAgIGlzOiAnMy41JyxcbiAgICAgICAgY2xhbjogJzMuNSdcbiAgICAgIH0sXG4gICAgICBhc3NhdWx0OiB7XG4gICAgICAgIGlzOiAnMy41JyxcbiAgICAgICAgY2xhbjogJzMuNSdcbiAgICAgIH0sXG4gICAgfVxuICB9LCB7XG4gICAgbmFtZTogXCJNYXggVG9yc28gVHdpc3RcIixcbiAgICBsYWJlbDogXCJUb3JzbyBZYXdcIixcbiAgICBkZXNjcmlwdGlvbjogXCJJbmNyZWFzZXMgdGhlIG1heGltdW0gZGVncmVlIG9mIGEgJ21lY2hzIHRvcnNvIHR3aXN0XCIsXG4gICAgdmFsdWU6IFwiMlwiLFxuICAgIHRlbXBsYXRlOiBcIit7fSVcIixcbiAgICBjb2xvcjogXCIjZmZmZjMzXCJcbiAgfSwge1xuICAgIG5hbWU6IFwiVHVybiBTcGVlZFwiLFxuICAgIGxhYmVsOiBcIkFuY2hvciBUdXJuXCIsXG4gICAgZGVzY3JpcHRpb246IFwiSW5jcmVhc2VzIHRoZSAnbWVjaHMgdHVybmluZyBzcGVlZFwiLFxuICAgIHZhbHVlOiBcIjVcIixcbiAgICB0ZW1wbGF0ZTogXCIre30lXCIsXG4gICAgY29sb3I6IFwiI2E2NTYyOFwiXG4gIH0sIHtcbiAgICBuYW1lOiBcIk1heCBTcGVlZFwiLFxuICAgIGxhYmVsOiBcIlNwZWVkIFR3ZWFrXCIsXG4gICAgZGVzY3JpcHRpb246IFwiSW5jcmVhc2VzIHRoZSAnbWVjaHMgdG9wIHNwZWVkXCIsXG4gICAgdmFsdWU6IFwiMS41XCIsXG4gICAgdGVtcGxhdGU6IFwiK3t9JVwiLFxuICAgIGNvbG9yOiBcIiNmNzgxYmZcIlxuICB9LFxuICAvKlxuICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICAgICAgICAgICAgICAgIEpVTVAgSkVUU1xuICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgKi9cbiAge1xuICAgIG5hbWU6IFwiSnVtcCBKZXQgSGVhdCBSZWR1Y3Rpb25cIixcbiAgICBsYWJlbDogXCJIZWF0IFNoaWVsZGluZ1wiLFxuICAgIGRlc2NyaXB0aW9uOiBcIkRlY3JlYXNlcyB0aGUgaGVhdCBnZW5lcmF0ZWQgYnkganVtcCBqZXRzXCIsXG4gICAgdmFsdWU6IFwiNlwiLFxuICAgIHRlbXBsYXRlOiBcIi17fSVcIixcbiAgICBjb2xvcjogXCIjZTQxYTFjXCJcbiAgfSwge1xuICAgIG5hbWU6IFwiSnVtcCBKZXQgSW5pdGlhbCBCb29zdFwiLFxuICAgIGxhYmVsOiBcIkxpZnQgU3BlZWRcIixcbiAgICBkZXNjcmlwdGlvbjogXCJJbmNyZWFzZXMgdGhlIGluaXRpYWwgYm9vc3Qgb2YganVtcCBqZXRzXCIsXG4gICAgdmFsdWU6IFwiM1wiLFxuICAgIHRlbXBsYXRlOiBcIit7fSVcIixcbiAgICBjb2xvcjogXCIjMzc3ZWI4XCJcbiAgfSwge1xuICAgIG5hbWU6IFwiSnVtcCBKZXQgRm9yd2FyZCBUaHJ1c3RcIixcbiAgICBsYWJlbDogXCJWZWN0b3JpbmdcIixcbiAgICBkZXNjcmlwdGlvbjogXCJJbmNyZWFzZXMgdGhlIGZvcndhcmQgdGhydXN0IGdlbmVyYXRlZCBieSBqdW1wIGpldHNcIixcbiAgICB2YWx1ZTogXCIyNVwiLFxuICAgIHRlbXBsYXRlOiBcIit7fSVcIixcbiAgICBjb2xvcjogXCIjNGRhZjRhXCJcbiAgfSwge1xuICAgIG5hbWU6IFwiSnVtcCBKZXQgQnVybiBUaW1lXCIsXG4gICAgbGFiZWw6IFwiVmVudCBDYWxpYnJhdGlvblwiLFxuICAgIGRlc2NyaXB0aW9uOiBcIkluY3JlYXNlcyBqdW1wIGpldCBkdXJhdGlvblwiLFxuICAgIHZhbHVlOiBcIjNcIixcbiAgICB0ZW1wbGF0ZTogXCIre30lXCIsXG4gICAgY29sb3I6IFwiIzk4NGVhM1wiXG4gIH0sXG4gIC8qXG4gID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgICAgICAgICAgICAgICBPUEVSQVRJT05TXG4gID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAqL1xuICB7XG4gICAgbmFtZTogXCJTdGFydHVwIFNwZWVkXCIsXG4gICAgbGFiZWw6IFwiUXVpY2sgSWduaXRpb25cIixcbiAgICBkZXNjcmlwdGlvbjogXCJJbXByb3ZlcyBzdGFydC11cCBhbmQgc2h1dC1kb3duIHNwZWVkc1wiLFxuICAgIHZhbHVlOiBcIjdcIixcbiAgICB0ZW1wbGF0ZTogXCIte30lXCIsXG4gICAgY29sb3I6IFwiI2U0MWExY1wiXG4gIH0sIHtcbiAgICBuYW1lOiBcIkxlZ2dlZCBTcGVlZFwiLFxuICAgIGxhYmVsOiBcIlNwZWVkIFJldGVudGlvblwiLFxuICAgIGRlc2NyaXB0aW9uOiBcIkluY3JlYXNlcyBtYXggc3BlZWQgd2hpbGUgbGVnZ2VkOyBjYXBwZWQgYXQgNTAga3BoXCIsXG4gICAgdmFsdWU6IFwiMTBcIixcbiAgICB0ZW1wbGF0ZTogXCIre30lXCIsXG4gICAgY29sb3I6IFwiIzM3N2ViOFwiXG4gIH0sIHtcbiAgICBuYW1lOiBcIkhlYXQgQ2FwYWNpdHlcIixcbiAgICBsYWJlbDogXCJIZWF0IENvbnRhaW5tZW50XCIsXG4gICAgZGVzY3JpcHRpb246IFwiSW5jcmVhc2VzIG1heGltdW0gaGVhdCBjYXBhY2l0eVwiLFxuICAgIHZhbHVlOiBcIjNcIixcbiAgICB0ZW1wbGF0ZTogXCIre30lXCIsXG4gICAgY29sb3I6IFwiIzRkYWY0YVwiXG4gIH0sIHtcbiAgICBuYW1lOiBcIkhpbGwgQ2xpbWJcIixcbiAgICBsYWJlbDogXCJIaWxsIENsaW1iXCIsXG4gICAgZGVzY3JpcHRpb246IFwiRGVjcmVhc2VzIHRoZSBzcGVlZCBsb3NzIGNhdXNlZCBieSBjbGltYmluZyBzbG9wZXNcIixcbiAgICB2YWx1ZTogXCI1XCIsXG4gICAgdGVtcGxhdGU6IFwiK3t9JVwiLFxuICAgIGNvbG9yOiBcIiM5ODRlYTNcIlxuICB9LCB7XG4gICAgbmFtZTogXCJIZWF0IERpc3NpcGF0aW9uXCIsXG4gICAgbGFiZWw6IFwiQ29vbCBSdW5cIixcbiAgICBkZXNjcmlwdGlvbjogXCJJbmNyZWFzZXMgaGVhdCBkaXNzaXBhdGlvblwiLFxuICAgIHZhbHVlOiBcIjJcIixcbiAgICB0ZW1wbGF0ZTogXCIre30lXCIsXG4gICAgY29sb3I6IFwiI2ZmN2YwMFwiXG4gIH0sIHtcbiAgICBuYW1lOiBcIlRhc3RpZXIgR3lyb3NcIixcbiAgICBsYWJlbDogXCJJbXByb3ZlZCBHeXJvc1wiLFxuICAgIGRlc2NyaXB0aW9uOiBcIk1tbW0uLi4gZ3lyb3NcIixcbiAgICB2YWx1ZTogXCIxNy41XCIsXG4gICAgdGVtcGxhdGU6IFwiLXt9JVwiLFxuICAgIGNvbG9yOiBcIiNmZmZmMzNcIlxuICB9LFxuICAvKlxuICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICAgICAgICAgICAgICAgICBTRU5TT1JTXG4gID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAqL1xuICB7XG4gICAgbmFtZTogXCJUYXJnZXQgSW5mbyBTcGVlZFwiLFxuICAgIGxhYmVsOiBcIlRhcmdldCBJbmZvIEdhdGhlcmluZ1wiLFxuICAgIGRlc2NyaXB0aW9uOiBcIkRlY3JlYXNlcyB0aW1lIG5lZWRlZCBmb3IgZGV0YWlsZWQgdGFyZ2V0aW5nIGluZm9cIixcbiAgICB2YWx1ZTogXCI3XCIsXG4gICAgdGVtcGxhdGU6IFwiK3t9JVwiLFxuICAgIGNvbG9yOiBcIiNlNDFhMWNcIlxuICB9LCB7XG4gICAgbmFtZTogXCJUYXJnZXQgUmV0ZW50aW9uXCIsXG4gICAgbGFiZWw6IFwiVGFyZ2V0IFJldGVudGlvblwiLFxuICAgIGRlc2NyaXB0aW9uOiBcIkluY3JlYXNlcyB0aGUgcmFuZ2UgYXQgd2hpY2ggYSB0YXJnZXRpbmcgbG9jayB3aWxsIGJlIGhlbGQgd2hlbiB0aGUgdGFyZ2V0IG1vdmVzIGJlaGluZCB0aGUgJ21lY2hcIixcbiAgICB2YWx1ZTogXCIyMDBcIixcbiAgICB0ZW1wbGF0ZTogXCIre30gbS5cIixcbiAgICBjb2xvcjogXCIjMzc3ZWI4XCJcbiAgfSwge1xuICAgIG5hbWU6IFwiU2Vuc29yIFJhbmdlXCIsXG4gICAgbGFiZWw6IFwiU2Vuc29yIFJhbmdlXCIsXG4gICAgZGVzY3JpcHRpb246IFwiSW5jcmVhc2VzIHRoZSByYW5nZSBvZiB0YXJnZXRpbmcgc2Vuc29yc1wiLFxuICAgIHZhbHVlOiBcIjdcIixcbiAgICB0ZW1wbGF0ZTogXCIre30lXCIsXG4gICAgY29sb3I6IFwiIzRkYWY0YVwiXG4gIH0sIHtcbiAgICBuYW1lOiBcIlRhcmdldCBMb2NrIERlY2F5XCIsXG4gICAgbGFiZWw6IFwiVGFyZ2V0IERlY2F5XCIsXG4gICAgZGVzY3JpcHRpb246IFwiSW5jcmVhc2VzIHRoZSB0aW1lIGEgdGFyZ2V0aW5nIGxvY2sgd2lsbCBiZSBoZWxkIHdoZW4gdGhlIHRhcmdldCBtb3ZlcyBvdXQgbGluZS1vZi1zaWdodFwiLFxuICAgIHZhbHVlOiBcIjAuN1wiLFxuICAgIHRlbXBsYXRlOiBcIit7fSBzZWMuXCIsXG4gICAgY29sb3I6IFwiIzk4NGVhM1wiXG4gIH0sIHtcbiAgICBuYW1lOiBcIlpvb20gTWFnbmlmaWVyXCIsXG4gICAgbGFiZWw6IFwiQWR2YW5jZWQgWm9vbVwiLFxuICAgIGRlc2NyaXB0aW9uOiBcIkFkZHMgYWRkaXRpb25hbCB4NCB6b29tIG1vZGVcIixcbiAgICB2YWx1ZTogXCIxXCIsXG4gICAgdGVtcGxhdGU6IFwiK3t9XCIsXG4gICAgY29sb3I6IFwiI2ZmN2YwMFwiXG4gIH0sIHtcbiAgICBuYW1lOiBcIlJhZGFyIERlcHJpdmF0aW9uXCIsXG4gICAgbGFiZWw6IFwiUmFkYXIgRGVwcml2YXRpb25cIixcbiAgICBkZXNjcmlwdGlvbjogXCJEZWNyZWFzZXMgdGhlIHRpbWUgdGhlICdtZWNoIHdpbGwgcmVtYWluIHRhcmdldGVkIHdoZW4gaXQgbW92ZXMgb3V0IG9mIGxpbmUtb2Ytc2lnaHRcIixcbiAgICB2YWx1ZTogXCIyMFwiLFxuICAgIHRlbXBsYXRlOiBcIit7fSVcIixcbiAgICBjb2xvcjogXCIjZmZmZjMzXCJcbiAgfSwge1xuICAgIG5hbWU6IFwiU2Vpc21pYyBTZW5zb3JcIixcbiAgICBsYWJlbDogXCJTZWlzbWljIFNlbnNvclwiLFxuICAgIGRlc2NyaXB0aW9uOiBcIkluZGljYXRlcyBlbmVteSAnbWVjaCBtb3ZlbWVudHMgb24gdGhlIG1pbmltYXA7ICdtZWNoIG11c3QgcmVtYWluIHN0YXRpb25hcnlcIixcbiAgICB2YWx1ZTogXCIxMDBcIixcbiAgICB0ZW1wbGF0ZTogXCJ7fSBtLlwiLFxuICAgIGNvbG9yOiBcIiNhNjU2MjhcIlxuICB9LCB7XG4gICAgbmFtZTogXCJFbmhhbmNlZCBFQ00gU3lzdGVtc1wiLFxuICAgIGxhYmVsOiBcIkVuaGFuY2VkIEVDTVwiLFxuICAgIGRlc2NyaXB0aW9uOiBcIkRlY3JlYXNlcyB0aGUgcmFuZ2UgYXQgd2hpY2ggYW4gRUNNLXByb3RlY3RlZCAnbWVjaCBjYW4gYmUgdGFyZ2V0ZWQ7IGRlY3JlYXNlcyB0aGUgcmVhY3RpdmF0aW9uIGNvb2xkb3duIG9mIFN0ZWFsdGggQXJtb3JcIixcbiAgICB2YWx1ZTogXCIyMi41XCIsXG4gICAgdGVtcGxhdGU6IFwiK3t9JVwiLFxuICAgIGNvbG9yOiBcIiNmNzgxYmZcIlxuICB9LFxuICAvKlxuICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICAgICAgICAgICAgICAgIEFVWElMSUFSWVxuICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgKi9cbiAge1xuICAgIG5hbWU6IFwiVUFWIER1cmF0aW9uXCIsXG4gICAgbGFiZWw6IFwiVUFWIER1cmF0aW9uXCIsXG4gICAgZGVzY3JpcHRpb246IFwiSW5jcmVhc2VzIHRoZSBkdXJhdGlvbiBvZiBkZXBsb3llZCBVQVZzXCIsXG4gICAgdmFsdWU6IFwiMTBcIixcbiAgICB0ZW1wbGF0ZTogXCIre30gc2VjLlwiLFxuICAgIGNvbG9yOiBcIiMxZjc4YjRcIlxuICB9LCB7XG4gICAgbmFtZTogXCJVQVYgU2lnaHQgUmFuZ2VcIixcbiAgICBsYWJlbDogXCJVQVYgUmFuZ2VcIixcbiAgICBkZXNjcmlwdGlvbjogXCJJbmNyZWFzZXMgdGhlIHRhcmdldGluZyByYW5nZSBvZiBkZXBsb3llZCBVQVZzXCIsXG4gICAgdmFsdWU6IFwiMjBcIixcbiAgICB0ZW1wbGF0ZTogXCIre30lXCIsXG4gICAgY29sb3I6IFwiIzc3Nzc3N1wiXG4gIH0sIHtcbiAgICBuYW1lOiBcIkFydGlsbGVyeSBTdHJpa2UgRHVyYXRpb25cIixcbiAgICBsYWJlbDogXCJBZHZhbmNlZCBTYWx2b3NcIixcbiAgICBkZXNjcmlwdGlvbjogXCJJbmNyZWFzZXMgdGhlIGR1cmF0aW9uIG9mIGFpciBhbmQgYXJ0aWxsZXJ5IHN0cmlrZXNcIixcbiAgICB2YWx1ZTogXCIxNVwiLFxuICAgIHRlbXBsYXRlOiBcIit7fSVcIixcbiAgICBjb2xvcjogXCIjMzNhMDJjXCJcbiAgfSwge1xuICAgIG5hbWU6IFwiQ29vbHNob3QgRWZmZWN0aXZlbmVzc1wiLFxuICAgIGxhYmVsOiBcIkVuaGFuY2VkIENvb2xzaG90XCIsXG4gICAgZGVzY3JpcHRpb246IFwiSW5jcmVhc2VzIGhlYXQgZGlzc2lwYXRpb24gb2YgY29vbHNob3RzXCIsXG4gICAgdmFsdWU6IFwiMTVcIixcbiAgICB0ZW1wbGF0ZTogXCIre30lXCIsXG4gICAgY29sb3I6IFwiI2ZiOWE5OVwiXG4gIH0sIHtcbiAgICBuYW1lOiBcIlVBViBDYXBhY2l0eVwiLFxuICAgIGxhYmVsOiBcIkV4dHJhIFVBVlwiLFxuICAgIGRlc2NyaXB0aW9uOiBcIkFkZHMgYW4gYWRkaXRpb25hbCBVQVYgdXNlXCIsXG4gICAgdmFsdWU6IFwiMVwiLFxuICAgIHRlbXBsYXRlOiBcIit7fVwiLFxuICAgIGNvbG9yOiBcIiNlMzFhMWNcIlxuICB9LCB7XG4gICAgbmFtZTogXCJQb2ludCBDYXB0dXJlIFNwZWVkXCIsXG4gICAgbGFiZWw6IFwiQ2FwdHVyZSBBc3Npc3RcIixcbiAgICBkZXNjcmlwdGlvbjogXCJJbmNyZWFzZXMgcmF0ZSBvZiBjYXB0dXJlIG9mIGNvbnRyb2wgcG9pbnRzXCIsXG4gICAgdmFsdWU6IFwiNVwiLFxuICAgIHRlbXBsYXRlOiBcIit7fSVcIixcbiAgICBjb2xvcjogXCIjYjE1OTI4XCJcbiAgfSwge1xuICAgIG5hbWU6IFwiTkFSQyBWZWxvY2l0eSBhbmQgRHVyYXRpb25cIixcbiAgICBsYWJlbDogXCJFbmhhbmNlZCBOQVJDXCIsXG4gICAgZGVzY3JpcHRpb246IFwiSW5jcmVhc2VzIE5BUkMgYmVhY29uIHByb2plY3RpbGUgc3BlZWQ7IGluY3JlYXNlcyBOQVJDIGJlYWNvbiBkdXJhdGlvbiBvbiB0YXJnZXRcIixcbiAgICB2YWx1ZTogXCIxMFwiLFxuICAgIHRlbXBsYXRlOiBcIit7fSVcIixcbiAgICBjb2xvcjogXCIjZmY3ZjAwXCJcbiAgfSwge1xuICAgIG5hbWU6IFwiQWRkaXRpb25hbCBBaXIgLyBBcnR5IFN0cmlrZVwiLFxuICAgIGxhYmVsOiBcIkV4cGFuZGVkIFJlc2VydmVzXCIsXG4gICAgZGVzY3JpcHRpb246IFwiQWRkcyBhbiBhZGRpdGlvbmFsIGFpciBvciBhcnRpbGxlcnkgc3RyaWtlXCIsXG4gICAgdmFsdWU6IFwiMVwiLFxuICAgIHRlbXBsYXRlOiBcIit7fVwiLFxuICAgIGNvbG9yOiBcIiNjYWIyZDZcIlxuICB9LCB7XG4gICAgbmFtZTogXCJBaXIgLyBBcnR5IFN0cmlrZSBBY2N1cmFjeVwiLFxuICAgIGxhYmVsOiBcIkVuaGFuY2VkIFNwb3R0aW5nXCIsXG4gICAgZGVzY3JpcHRpb246IFwiSW5jcmVhc2VzIHRoZSBhY2N1cmFjeSBvZiBhaXIgYW5kIGFydGlsbGVyeSBzdHJpa2VzXCIsXG4gICAgdmFsdWU6IFwiMjBcIixcbiAgICB0ZW1wbGF0ZTogXCIte30lXCIsXG4gICAgY29sb3I6IFwiI2ZkYmY2ZlwiXG4gIH0sIHtcbiAgICBuYW1lOiBcIkFkZGl0aW9uYWwgQ29uc3VtYWJsZSBTbG90XCIsXG4gICAgbGFiZWw6IFwiQ29uc3VtYWJsZSBTbG90XCIsXG4gICAgZGVzY3JpcHRpb246IFwiQWRkcyBhbiBhZGRpdGlvbmFsIGNvbnN1bWFibGUgc2xvdFwiLFxuICAgIHZhbHVlOiBcIjFcIixcbiAgICB0ZW1wbGF0ZTogXCIre31cIixcbiAgICBjb2xvcjogXCIjZmZmZjk5XCJcbiAgfSwge1xuICAgIG5hbWU6IFwiQ29vbGFudCBSZXNlcnZlc1wiLFxuICAgIGxhYmVsOiBcIkNvb2xhbnQgUmVzZXJ2ZXNcIixcbiAgICBkZXNjcmlwdGlvbjogXCJBZGRzIGFuIGFkZGl0aW9uYWwgY29vbHNob3QgdXNlXCIsXG4gICAgdmFsdWU6IFwiMVwiLFxuICAgIHRlbXBsYXRlOiBcIit7fVwiLFxuICAgIGNvbG9yOiBcIiM2YTNkOWFcIlxuICB9LCB7XG4gICAgbmFtZTogXCJDb29sc2hvdCBDb29sZG93blwiLFxuICAgIGxhYmVsOiBcIkNvb2xhbnQgQ29vbGRvd25cIixcbiAgICBkZXNjcmlwdGlvbjogXCJSZWR1Y2VzIGNvb2xkb3duIGR1cmF0aW9uIG9uIGNvb2xzaG90c1wiLFxuICAgIHZhbHVlOiBcIjI1XCIsXG4gICAgdGVtcGxhdGU6IFwiLXt9JVwiLFxuICAgIGNvbG9yOiBcIiNiMmRmOGFcIlxuICB9XG5dXG4iLCJcblwidXNlIHN0cmljdFwiO1xuXG5leHBvcnQgbGV0IGZpbmRCeUlkID0gZnVuY3Rpb24gKGlkKSB7XG4gIHJldHVybiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChpZCk7XG59XG5cbmV4cG9ydCBsZXQgZmluZEJ5Q2xhc3MgPSBmdW5jdGlvbiAoa2xhc3MpIHtcbiAgcmV0dXJuIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoa2xhc3MpO1xufVxuIiwiXG5pbXBvcnQgeyBhdHRyaWJ1dGVNYXAgfSBmcm9tIFwiLi9hdHRyaWJ1dGVfbWFwXCI7XG5pbXBvcnQgeyBmaW5kQnlJZCB9IGZyb20gXCIuL2RvbS5qc1wiO1xuXG5leHBvcnQgY29uc3QgbWF4U2tpbGxOb2RlcyA9IDkxOyAvLyB0b3RhbCBhbGxvd2VkIG51bWJlciBvZiBzZWxlY3RlZCBza2lsbCBub2RlcywgcGVyIE1XT1xuZXhwb3J0IGNvbnN0IGNiaWxsc1Blck5vZGUgPSA2MDAwMDtcbmV4cG9ydCBjb25zdCB4cFBlck5vZGUgPSA4MDA7XG5cbmV4cG9ydCBjb25zdCBzdHJpbmdUb0NzcyA9IHN0cmluZyA9PiB7XG4gIHJldHVybiBzdHJpbmcucmVwbGFjZSgvIFxcLyB8IC9nLCBcIi1cIikucmVwbGFjZSgvXFwuL2csIFwiXCIpLnRvTG93ZXJDYXNlKCk7XG59XG5cbi8vIHN0cmlwcyB0aGUgXCJweFwiIG9mZiB0aGUgZW5kIG9mIGEgQ1NTIGRpbWVuc2lvbiwgcmV0dXJucyB0aGUgbnVtYmVyIHZhbHVlXG5leHBvcnQgY29uc3QgZGltZW5zaW9uQXNOdW1iZXIgPSBkaW1lbnNpb24gPT4ge1xuICByZXR1cm4gcGFyc2VGbG9hdChkaW1lbnNpb24uc2xpY2UoMCwgLTIpKTtcbn1cblxuZXhwb3J0IGNvbnN0IHRyZWVOYW1lVG9JZCA9IHRyZWVOYW1lID0+IHtcbiAgcmV0dXJuIHN0cmluZ1RvQ3NzKHRyZWVOYW1lKSArIFwiLXNraWxsLXRyZWVcIjtcbn1cblxuZXhwb3J0IGNvbnN0IGZvcm1hdFZhbHVlID0gKGF0dHJpYnV0ZSwgdmFsdWUpID0+IHtcbiAgY29uc3QgdGVtcGxhdGUgPSBhdHRyaWJ1dGUudGVtcGxhdGUuc3BsaXQoXCJ7fVwiKTtcbiAgcmV0dXJuIGAke3RlbXBsYXRlWzBdfSR7dmFsdWV9JHt0ZW1wbGF0ZVsxXX1gO1xufVxuXG5leHBvcnQgY29uc3Qgc2hvd01vZGFsID0gbWVzc2FnZSA9PiB7XG4gIHNldE1vZGFsQ2xvc2VhYmlsaXR5KGZhbHNlKTtcbiAgZmluZEJ5SWQoXCJwZXJtYWxpbmstZGlzcGxheVwiKS50ZXh0Q29udGVudCA9IG1lc3NhZ2U7XG4gIGZpbmRCeUlkKFwibW9kYWwtb3ZlcmxheVwiKS5jbGFzc0xpc3QucmVtb3ZlKFwiaGlkZVwiKTtcbn1cblxuLy8gdGFrZXMgYSBib29sZWFuXG5leHBvcnQgY29uc3Qgc2V0TW9kYWxDbG9zZWFiaWxpdHkgPSBjbG9zZWFiaWxpdHkgPT4ge1xuICBmaW5kQnlJZChcIm1vZGFsLW92ZXJsYXlcIikuc2V0QXR0cmlidXRlKFwiZGF0YS1jbG9zZWFibGVcIiwgY2xvc2VhYmlsaXR5LnRvU3RyaW5nKCkpO1xufVxuXG4vLyBGcm9tIFBpbXAgVHJpemtpdCdzIHNwZWN0YWN1bGFyIHB1YmxpYyBzZXJ2aWNlIGF0XG4vLyBodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMTM1NDI2NjkvMTcyMDk3NlxuZXhwb3J0IGNvbnN0IHNoYWRlQ29sb3IgPSAoaGV4Q29sb3IsIHBlcmNlbnQpID0+IHtcbiAgdmFyIGY9cGFyc2VJbnQoaGV4Q29sb3Iuc2xpY2UoMSksMTYpLHQ9cGVyY2VudDwwPzA6MjU1LHA9cGVyY2VudDwwP3BlcmNlbnQqLTE6cGVyY2VudCxSPWY+PjE2LEc9Zj4+OCYweDAwRkYsQj1mJjB4MDAwMEZGO1xuICByZXR1cm4gXCIjXCIrKDB4MTAwMDAwMCsoTWF0aC5yb3VuZCgodC1SKSpwKStSKSoweDEwMDAwKyhNYXRoLnJvdW5kKCh0LUcpKnApK0cpKjB4MTAwKyhNYXRoLnJvdW5kKCh0LUIpKnApK0IpKS50b1N0cmluZygxNikuc2xpY2UoMSk7XG59XG5cbi8vIGRlYm91bmNlIGZ1bmN0aW9uIGZyb20gaHR0cHM6Ly9kYXZpZHdhbHNoLm5hbWUvamF2YXNjcmlwdC1kZWJvdW5jZS1mdW5jdGlvblxuZXhwb3J0IGNvbnN0IGRlYm91bmNlID0gKGZ1bmMsIHdhaXQsIGltbWVkaWF0ZSkgPT4ge1xuXHR2YXIgdGltZW91dDtcblx0cmV0dXJuIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBjb250ZXh0ID0gdGhpcywgYXJncyA9IGFyZ3VtZW50cztcblx0XHR2YXIgbGF0ZXIgPSBmdW5jdGlvbigpIHtcblx0XHRcdHRpbWVvdXQgPSBudWxsO1xuXHRcdFx0aWYgKCFpbW1lZGlhdGUpIGZ1bmMuYXBwbHkoY29udGV4dCwgYXJncyk7XG5cdFx0fTtcblx0XHR2YXIgY2FsbE5vdyA9IGltbWVkaWF0ZSAmJiAhdGltZW91dDtcblx0XHRjbGVhclRpbWVvdXQodGltZW91dCk7XG5cdFx0dGltZW91dCA9IHNldFRpbWVvdXQobGF0ZXIsIHdhaXQpO1xuXHRcdGlmIChjYWxsTm93KSBmdW5jLmFwcGx5KGNvbnRleHQsIGFyZ3MpO1xuXHR9O1xufTtcbiIsIlxuZXhwb3J0IGNvbnN0IFB1YlN1YiA9IChmdW5jdGlvbigpIHtcblxuICBjb25zdCBzdWJzY3JpcHRpb25Ub3BpY3MgPSB7fTtcblxuICBmdW5jdGlvbiBwdWJsaXNoKHRvcGljLCBkYXRhKSB7XG4gICAgaWYgKHN1YnNjcmlwdGlvblRvcGljc1t0b3BpY10gPT0gdW5kZWZpbmVkKSByZXR1cm47XG4gICAgZm9yIChsZXQgc3Vic2NyaXB0aW9uX2NhbGxiYWNrIG9mIHN1YnNjcmlwdGlvblRvcGljc1t0b3BpY10pIHtcbiAgICAgIHN1YnNjcmlwdGlvbl9jYWxsYmFjayhkYXRhKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBzdWJzY3JpYmUodG9waWMsIGNhbGxiYWNrKSB7XG4gICAgaWYgKHN1YnNjcmlwdGlvblRvcGljc1t0b3BpY10gPT0gdW5kZWZpbmVkKSB7XG4gICAgICBzdWJzY3JpcHRpb25Ub3BpY3NbdG9waWNdID0gW107XG4gICAgfVxuICAgIGxldCBpbmRleCA9IHN1YnNjcmlwdGlvblRvcGljc1t0b3BpY10ucHVzaChjYWxsYmFjaykgLSAxO1xuICAgIHJldHVybiB7XG4gICAgICByZW1vdmU6IGZ1bmN0aW9uKCkge1xuICAgICAgICBzdWJzY3JpcHRpb25Ub3BpY3NbdG9waWNdW2luZGV4XSA9IHVuZGVmaW5lZDtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4ge1xuICAgIHB1Ymxpc2g6IHB1Ymxpc2gsXG4gICAgc3Vic2NyaWJlOiBzdWJzY3JpYmVcbiAgfVxuXG59KSgpO1xuIiwiXG5cInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgUHViU3ViIH0gZnJvbSBcIi4vcHViX3N1Yi5qc1wiO1xuXG5sZXQgdGhlV2VpZ2h0Q2xhc3MgPSAwO1xubGV0IHRoZVRlY2hMZXZlbCA9IDA7XG5cbmNvbnN0IHRlY2hMZXZlbHMgPSBbXCJjbGFuXCIsIFwiaXNcIl07XG5jb25zdCB3ZWlnaHRDbGFzc2VzID0gW1wiYXNzYXVsdFwiLCBcImxpZ2h0XCIsIFwibWVkaXVtXCIsIFwiaGVhdnlcIl07XG5cbmV4cG9ydCBjb25zdCB3ZWlnaHRDbGFzcyA9ICgpID0+IHtcbiAgcmV0dXJuIHdlaWdodENsYXNzZXNbdGhlV2VpZ2h0Q2xhc3NdO1xufVxuXG5leHBvcnQgY29uc3QgdGVjaExldmVsID0gKCkgPT4ge1xuICByZXR1cm4gdGVjaExldmVsc1t0aGVUZWNoTGV2ZWxdO1xufVxuXG5leHBvcnQgY29uc3QgaW5jcmVtZW50V2VpZ2h0Q2xhc3MgPSAoKSA9PiB7XG4gIHRoZVdlaWdodENsYXNzID09IDMgPyB0aGVXZWlnaHRDbGFzcyA9IDAgOiB0aGVXZWlnaHRDbGFzcysrO1xuICBQdWJTdWIucHVibGlzaChcImNoYXNzaXNXZWlnaHRVcGRhdGVkXCIsIHt9KTtcbiAgcmV0dXJuIHdlaWdodENsYXNzZXNbdGhlV2VpZ2h0Q2xhc3NdO1xufVxuXG5leHBvcnQgY29uc3QgaW5jcmVtZW50VGVjaExldmVsID0gKCkgPT4ge1xuICB0aGVUZWNoTGV2ZWwgPT0gMSA/IHRoZVRlY2hMZXZlbCA9IDAgOiB0aGVUZWNoTGV2ZWwrKztcbiAgUHViU3ViLnB1Ymxpc2goXCJjaGFzc2lzVGVjaFVwZGF0ZWRcIiwge30pO1xuICByZXR1cm4gdGVjaExldmVsc1t0aGVUZWNoTGV2ZWxdO1xufVxuXG5leHBvcnQgY29uc3QgZGlzcGxheVN0cmluZyA9IChpbnB1dCkgPT4ge1xuICByZXR1cm4gZGlzcGxheVN0cmluZ3NbaW5wdXRdO1xufVxuXG5leHBvcnQgY29uc3QgZXhwb3J0UmVtb3RlID0gKCkgPT4ge1xuICByZXR1cm4ge1xuICAgIHdlaWdodENsYXNzOiB0aGVXZWlnaHRDbGFzcyxcbiAgICB0ZWNoTGV2ZWw6IHRoZVRlY2hMZXZlbFxuICB9XG59XG5cbmV4cG9ydCBjb25zdCBpbXBvcnRSZW1vdGUgPSAod2VpZ2h0Q2xhc3MsIHRlY2hMZXZlbCkgPT4ge1xuICB0aGVXZWlnaHRDbGFzcyA9IHdlaWdodENsYXNzO1xuICB0aGVUZWNoTGV2ZWwgPSB0ZWNoTGV2ZWw7XG59XG5cbmNvbnN0IGRpc3BsYXlTdHJpbmdzID0ge1xuICBcImlzXCI6IFwiSS5TLlwiLFxuICBcImNsYW5cIjogXCJDbGFuXCIsXG4gIFwibGlnaHRcIjogXCJMaWdodFwiLFxuICBcIm1lZGl1bVwiOiBcIk1lZGl1bVwiLFxuICBcImhlYXZ5XCI6IFwiSGVhdnlcIixcbiAgXCJhc3NhdWx0XCI6IFwiQXNzYXVsdFwiXG59XG4iLCJcblwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgeyBzdHJpbmdUb0NzcyB9IGZyb20gXCIuL3V0aWwuanNcIjtcbmltcG9ydCB7IGF0dHJpYnV0ZU1hcCB9IGZyb20gXCIuL2F0dHJpYnV0ZV9tYXBcIjtcbmltcG9ydCB7IFB1YlN1YiB9IGZyb20gXCIuL3B1Yl9zdWIuanNcIjtcbmltcG9ydCAqIGFzIENoYXNzaXMgZnJvbSBcIi4vY2hhc3Npcy5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBidWlsZFNraWxsVHJlZSh0cmVlU291cmNlKSB7XG5cbiAgdmFyIGFjdGl2ZVRyZWVOYW1lID0gdHJlZVNvdXJjZVswXS5uYW1lO1xuICBsZXQgc2tpbGxUcmVlcyA9IGJ1aWxkU2tpbGxUcmVlcyh0cmVlU291cmNlKTtcblxuICBmdW5jdGlvbiBidWlsZFNraWxsVHJlZXModHJlZVNvdXJjZSkge1xuICAgIGxldCBza2lsbFRyZWVzID0gW107XG4gICAgZm9yIChsZXQgdHJlZURlZiBvZiB0cmVlU291cmNlKSB7XG4gICAgICBsZXQgc2tpbGxUcmVlID0ge31cbiAgICAgIHNraWxsVHJlZS5uYW1lID0gdHJlZURlZi50cmVlTmFtZTtcbiAgICAgIHNraWxsVHJlZS5ub2RlcyA9IFtdO1xuICAgICAgZm9yIChsZXQgbm9kZURlZiBvZiB0cmVlRGVmLm5vZGVzKSB7XG4gICAgICAgIHNraWxsVHJlZS5ub2Rlcy5wdXNoKGJ1aWxkTm9kZShub2RlRGVmKSk7XG4gICAgICB9XG4gICAgICBza2lsbFRyZWVzLnB1c2goc2tpbGxUcmVlKTtcbiAgICB9XG4gICAgcmV0dXJuIHNraWxsVHJlZXM7XG4gIH1cblxuICBmdW5jdGlvbiBpbXBvcnRKc29uKGJsb2IpIHtcbiAgICBmb3IgKGxldCBzZXJpYWxpemVkVHJlZSBvZiBibG9iLnRyZWVzKSB7XG4gICAgICBsZXQgdHJlZSA9IGdldFRyZWUoc2VyaWFsaXplZFRyZWUubmFtZSk7XG4gICAgICBsZXQgc2VyaWFsaXplZE5vZGVzID0gc2VyaWFsaXplZFRyZWUubm9kZXM7XG4gICAgICBmb3IgKGxldCBzZXJpYWxpemVkTm9kZSBvZiBzZXJpYWxpemVkTm9kZXMpIHtcbiAgICAgICAgZm9yIChsZXQgbm9kZSBvZiB0cmVlLm5vZGVzKSB7XG4gICAgICAgICAgaWYgKHNlcmlhbGl6ZWROb2RlLmlkID09IG5vZGUuaWQpIHtcbiAgICAgICAgICAgIGlmIChzZXJpYWxpemVkTm9kZS5zID09IDEpIHtcbiAgICAgICAgICAgICAgbm9kZS5zZWxlY3RXaXRob3V0RXZlbnQodHJ1ZSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBub2RlLnNlbGVjdFdpdGhvdXRFdmVudChmYWxzZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIFB1YlN1Yi5wdWJsaXNoKFwidHJlZUltcG9ydGVkXCIsIHsgYWN0aXZlVHJlZU5hbWU6IGJsb2IuYWN0aXZlVHJlZU5hbWUgfSk7XG4gIH1cblxuICBmdW5jdGlvbiB1cGRhdGVOb09wKCkge1xuICAgIFB1YlN1Yi5wdWJsaXNoKFwidHJlZUNoYW5nZWRcIiwge30gKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHNldEFjdGl2ZVRyZWVOYW1lKG5ld05hbWUpIHtcbiAgICBhY3RpdmVUcmVlTmFtZSA9IG5ld05hbWU7XG4gIH1cblxuICBmdW5jdGlvbiBnZXRBY3RpdmVUcmVlTmFtZSgpIHtcbiAgICByZXR1cm4gYWN0aXZlVHJlZU5hbWU7XG4gIH1cblxuICBmdW5jdGlvbiBnZXRUcmVlKHRyZWVOYW1lKSB7XG4gICAgZm9yIChsZXQgdHJlZSBvZiB0cmVlcykge1xuICAgICAgaWYgKHRyZWUubmFtZSA9IHRyZWVOYW1lKSB7XG4gICAgICAgIHJldHVybiB0cmVlO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGdldFRyZWVzKCkge1xuICAgIHJldHVybiBza2lsbFRyZWVzO1xuICB9XG5cbiAgZnVuY3Rpb24gZ2V0VHJlZSh0cmVlTmFtZSkge1xuICAgIGlmICh0cmVlTmFtZSA9PSB1bmRlZmluZWQpIHtcbiAgICAgIHJldHVybiBnZXRUcmVlKGFjdGl2ZVRyZWVOYW1lKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZm9yIChsZXQgdHJlZSBvZiBza2lsbFRyZWVzKSB7XG4gICAgICAgIGlmICh0cmVlLm5hbWUgPT0gdHJlZU5hbWUpIHtcbiAgICAgICAgICByZXR1cm4gdHJlZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGdldE5vZGUobm9kZUlkKSB7XG4gICAgZm9yIChsZXQgdHJlZSBvZiBza2lsbFRyZWVzKSB7XG4gICAgICBmb3IgKGxldCBub2RlIG9mIHRyZWUubm9kZXMpIHtcbiAgICAgICAgaWYgKG5vZGUuaWQgPT0gbm9kZUlkKSB7XG4gICAgICAgICAgcmV0dXJuIG5vZGU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBub2RlTGVnYWwobm9kZSkge1xuICAgIGxldCBpc1Jvb3ROb2RlID0gcGFyZW50c09mKG5vZGUpLmxlbmd0aCA9PT0gMDtcbiAgICBsZXQgbGVnYWxQYXJlbnRJc1NlbGVjdGVkID0gZmFsc2U7XG4gICAgZm9yIChsZXQgcGFyZW50IG9mIHBhcmVudHNPZihub2RlKSkge1xuICAgICAgbGVnYWxQYXJlbnRJc1NlbGVjdGVkID0gKCBwYXJlbnQuc2VsZWN0ZWQoKSAmJiBub2RlTGVnYWwocGFyZW50KSApIHx8IGxlZ2FsUGFyZW50SXNTZWxlY3RlZDtcbiAgICB9XG4gICAgcmV0dXJuIGlzUm9vdE5vZGUgfHwgbGVnYWxQYXJlbnRJc1NlbGVjdGVkO1xuICB9XG5cbiAgZnVuY3Rpb24gZ2V0Tm9kZUNvdW50KHRyZWVOYW1lKSB7XG4gICAgdmFyIG5vZGVDb3VudCA9IDA7XG4gICAgaWYgKHRyZWVOYW1lICE9IHVuZGVmaW5lZCkge1xuICAgICAgcmV0dXJuIGdldFRyZWUodHJlZU5hbWUpLm5vZGVzLmxlbmd0aDtcbiAgICB9IGVsc2Uge1xuICAgICAgZm9yIChsZXQgdHJlZSBvZiBza2lsbFRyZWVzKSB7XG4gICAgICAgIG5vZGVDb3VudCA9IGdldE5vZGVDb3VudCh0cmVlLm5hbWUpO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbm9kZUNvdW50O1xuICB9XG5cbiAgZnVuY3Rpb24gZ2V0U2VsZWN0ZWROb2Rlcyh0cmVlTmFtZSkge1xuICAgIGxldCBzZWxlY3RlZE5vZGVzID0gW107XG4gICAgaWYgKHRyZWVOYW1lICE9IHVuZGVmaW5lZCkge1xuICAgICAgZm9yIChsZXQgbm9kZSBvZiBnZXRUcmVlKHRyZWVOYW1lKS5ub2Rlcykge1xuICAgICAgICBpZiAobm9kZS5zZWxlY3RlZCgpKSB7XG4gICAgICAgICAgc2VsZWN0ZWROb2Rlcy5wdXNoKG5vZGUpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGZvciAobGV0IHNraWxsVHJlZSBvZiBza2lsbFRyZWVzKSB7XG4gICAgICAgIHNlbGVjdGVkTm9kZXMgPSBzZWxlY3RlZE5vZGVzLmNvbmNhdChnZXRTZWxlY3RlZE5vZGVzKHNraWxsVHJlZS5uYW1lKSk7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBzZWxlY3RlZE5vZGVzO1xuICB9XG5cbiAgZnVuY3Rpb24gZ2V0TGVnYWxOb2Rlcyh0cmVlTmFtZSkge1xuICAgIGxldCBsZWdhbE5vZGVzID0gW107XG4gICAgaWYgKHRyZWVOYW1lICE9IHVuZGVmaW5lZCkge1xuICAgICAgbGV0IHNlbGVjdGVkTm9kZXMgPSBnZXRTZWxlY3RlZE5vZGVzKHRyZWVOYW1lKTtcbiAgICAgIHNlbGVjdGVkTm9kZXMuZmlsdGVyKCBub2RlID0+IHtcbiAgICAgICAgbm9kZUxlZ2FsKG5vZGUpO1xuICAgICAgfSk7XG4gICAgICBsZWdhbE5vZGVzID0gbGVnYWxOb2Rlcy5jb25jYXQoc2VsZWN0ZWROb2Rlcyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGZvciAobGV0IHNraWxsVHJlZSBvZiBza2lsbFRyZWVzKSB7XG4gICAgICAgIGxlZ2FsTm9kZXMgPSBsZWdhbE5vZGVzLmNvbmNhdChnZXRMZWdhbE5vZGVzKHNraWxsVHJlZS5uYW1lKSk7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBsZWdhbE5vZGVzO1xuICB9XG5cbiAgZnVuY3Rpb24gY2hpbGRyZW5PZihub2RlKSB7XG4gICAgbGV0IGNoaWxkTm9kZXMgPSBbXTtcbiAgICBwdXNoSWZEZWZpbmVkKGNoaWxkTm9kZXMsIGdldE5vZGUobm9kZS5sZWZ0Q2hpbGRJZCkpO1xuICAgIHB1c2hJZkRlZmluZWQoY2hpbGROb2RlcywgZ2V0Tm9kZShub2RlLmNlbnRlckNoaWxkSWQpKTtcbiAgICBwdXNoSWZEZWZpbmVkKGNoaWxkTm9kZXMsIGdldE5vZGUobm9kZS5yaWdodENoaWxkSWQpKTtcbiAgICByZXR1cm4gY2hpbGROb2RlcztcbiAgfVxuXG4gIGZ1bmN0aW9uIHBhcmVudHNPZihub2RlKSB7XG4gICAgbGV0IHBhcmVudE5vZGVzID0gW107XG4gICAgZm9yIChsZXQgdHJlZSBvZiBza2lsbFRyZWVzKSB7XG4gICAgICBmb3IgKGxldCBwb3RlbnRpYWxQYXJlbnQgb2YgdHJlZS5ub2Rlcykge1xuICAgICAgICBpZiAocG90ZW50aWFsUGFyZW50LmxlZnRDaGlsZElkID09IG5vZGUuaWQgfHwgcG90ZW50aWFsUGFyZW50LmNlbnRlckNoaWxkSWQgPT0gbm9kZS5pZCB8fCBwb3RlbnRpYWxQYXJlbnQucmlnaHRDaGlsZElkID09IG5vZGUuaWQpIHtcbiAgICAgICAgICBwYXJlbnROb2Rlcy5wdXNoKHBvdGVudGlhbFBhcmVudCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHBhcmVudE5vZGVzO1xuICB9XG5cbiAgZnVuY3Rpb24gcmVzZXRUcmVlKHRyZWVOYW1lKSB7XG4gICAgaWYgKHRyZWVOYW1lID09IHVuZGVmaW5lZCkge1xuICAgICAgZm9yIChsZXQgdHJlZSBvZiBza2lsbFRyZWVzKSB7XG4gICAgICAgIHJlc2V0VHJlZSh0cmVlLm5hbWUpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBmb3IgKGxldCBub2RlIG9mIGdldFRyZWUodHJlZU5hbWUpLm5vZGVzKSB7XG4gICAgICAgIG5vZGUuc2VsZWN0V2l0aG91dEV2ZW50KGZhbHNlKTtcbiAgICAgIH1cbiAgICAgIFB1YlN1Yi5wdWJsaXNoKFwidHJlZUNoYW5nZWRcIiwge3RyZWVOYW1lOiB0cmVlTmFtZX0pO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHNlbGVjdFRyZWUodHJlZU5hbWUpIHtcbiAgICBmb3IgKGxldCBub2RlIG9mIGdldFRyZWUodHJlZU5hbWUpLm5vZGVzKSB7XG4gICAgICBub2RlLnNlbGVjdFdpdGhvdXRFdmVudCh0cnVlKTtcbiAgICB9XG4gICAgUHViU3ViLnB1Ymxpc2goXCJ0cmVlQ2hhbmdlZFwiLCB7dHJlZU5hbWU6IHRyZWVOYW1lfSk7XG4gIH1cblxuICBmdW5jdGlvbiBwdXNoSWZEZWZpbmVkKGNvbGxlY3Rpb24sIG5vZGUpIHtcbiAgICBpZiAobm9kZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICBjb2xsZWN0aW9uLnB1c2gobm9kZSk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBpbXBvcnRKc29uOiBpbXBvcnRKc29uLFxuICAgIHVwZGF0ZU5vT3A6IHVwZGF0ZU5vT3AsXG4gICAgZ2V0QWN0aXZlVHJlZU5hbWU6IGdldEFjdGl2ZVRyZWVOYW1lLFxuICAgIHNldEFjdGl2ZVRyZWVOYW1lOiBzZXRBY3RpdmVUcmVlTmFtZSxcbiAgICBnZXRUcmVlOiBnZXRUcmVlLFxuICAgIGdldFRyZWVzOiBnZXRUcmVlcyxcbiAgICBnZXROb2RlOiBnZXROb2RlLFxuICAgIG5vZGVMZWdhbDogbm9kZUxlZ2FsLFxuICAgIGdldE5vZGVDb3VudDogZ2V0Tm9kZUNvdW50LFxuICAgIGdldFNlbGVjdGVkTm9kZXM6IGdldFNlbGVjdGVkTm9kZXMsXG4gICAgZ2V0TGVnYWxOb2RlczogZ2V0TGVnYWxOb2RlcyxcbiAgICBwYXJlbnRzT2Y6IHBhcmVudHNPZixcbiAgICBjaGlsZHJlbk9mOiBjaGlsZHJlbk9mLFxuICAgIHJlc2V0VHJlZTogcmVzZXRUcmVlLFxuICAgIHNlbGVjdFRyZWU6IHNlbGVjdFRyZWVcbiAgfVxuXG59XG5cbmZ1bmN0aW9uIGJ1aWxkTm9kZShub2RlRGVmKSB7XG5cbiAgdmFyIGlzU2VsZWN0ZWQgPSBmYWxzZTtcblxuICBmdW5jdGlvbiBzZWxlY3RXaXRob3V0RXZlbnQobmV3U2VsZWN0ZWQpIHtcbiAgICBpc1NlbGVjdGVkID0gbmV3U2VsZWN0ZWQ7XG4gIH1cblxuICBmdW5jdGlvbiBzZWxlY3RlZChuZXdTZWxlY3RlZCkge1xuICAgIGlmIChuZXdTZWxlY3RlZCA9PSB1bmRlZmluZWQpIHtcbiAgICAgIHJldHVybiBpc1NlbGVjdGVkO1xuICAgIH0gZWxzZSB7XG4gICAgICBpc1NlbGVjdGVkID0gbmV3U2VsZWN0ZWQ7XG4gICAgICBQdWJTdWIucHVibGlzaChcIm5vZGVDaGFuZ2VkXCIsIHsgbm9kZTogdGhpcyB9ICk7XG4gICAgfVxuICB9XG5cbiAgbGV0IGxvb2t1cEF0dHJpYnV0ZSA9IGF0dHJpYnV0ZU5hbWUgPT4ge1xuICAgIGZvciAobGV0IGF0dHJpYnV0ZSBvZiBhdHRyaWJ1dGVNYXApIHtcbiAgICAgIGlmIChhdHRyaWJ1dGUubmFtZSA9PSBhdHRyaWJ1dGVOYW1lKSB7XG4gICAgICAgIHJldHVybiBhdHRyaWJ1dGU7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgbGV0IHZhbHVlID0gKCkgPT4ge1xuICAgIGxldCB2YWx1ZSA9IHVuZGVmaW5lZDtcbiAgICBsZXQgYXR0cmlidXRlID0gbG9va3VwQXR0cmlidXRlKG5vZGVEZWYuYXR0cmlidXRlKTtcbiAgICBpZiAoYXR0cmlidXRlLmNoYXNzaXNWYWx1ZXMgIT0gdW5kZWZpbmVkKSB7XG4gICAgICB2YWx1ZSA9IGF0dHJpYnV0ZS5jaGFzc2lzVmFsdWVzW0NoYXNzaXMud2VpZ2h0Q2xhc3MoKV1bQ2hhc3Npcy50ZWNoTGV2ZWwoKV07XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhbHVlID0gYXR0cmlidXRlLnZhbHVlO1xuICAgIH1cbiAgICByZXR1cm4gcGFyc2VGbG9hdCh2YWx1ZSk7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIC8vIHNlbGVjdFdpdGhvdXRFdmVudCB1c2VkIGZvciBidWxrIC8gYmF0Y2ggdXBkYXRpbmcgb2Ygbm9kZXMgd2hpbGVcbiAgICAvLyAgYXZvaWRpbmcgZXZlbnQgY2FzY2FkZXNcbiAgICBzZWxlY3RXaXRob3V0RXZlbnQ6IHNlbGVjdFdpdGhvdXRFdmVudCxcbiAgICBzZWxlY3RlZDogc2VsZWN0ZWQsXG4gICAgbmFtZTogbm9kZURlZi5uYW1lLFxuICAgIGlkOiBzdHJpbmdUb0Nzcyhub2RlRGVmLm5hbWUpLFxuICAgIGF0dHJpYnV0ZTogbG9va3VwQXR0cmlidXRlKG5vZGVEZWYuYXR0cmlidXRlKSxcbiAgICB2YWx1ZTogdmFsdWUsXG4gICAgbGVmdENoaWxkSWQ6IG5vZGVEZWYubGVmdENoaWxkSWQsXG4gICAgY2VudGVyQ2hpbGRJZDogbm9kZURlZi5jZW50ZXJDaGlsZElkLFxuICAgIHJpZ2h0Q2hpbGRJZDogbm9kZURlZi5yaWdodENoaWxkSWRcbiAgfTtcbn1cbiIsIlxuXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCAqIGFzIFV0aWwgZnJvbSBcIi4vdXRpbC5qc1wiO1xuaW1wb3J0IHsgUHViU3ViIH0gZnJvbSBcIi4vcHViX3N1Yi5qc1wiO1xuaW1wb3J0IHsgZmluZEJ5SWQgfSBmcm9tIFwiLi9kb20uanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcmVuZGVyVHJlZShza2lsbFRyZWUpIHtcblxuICBza2lsbFRyZWUuZ2V0VHJlZXMoKS5mb3JFYWNoKCAodHJlZSkgPT4ge1xuICAgIGJ1aWxkVGFiKHRyZWUpO1xuICAgIGJ1aWxkVHJlZURpc3BsYXkodHJlZSk7XG4gIH0pO1xuICBmaW5kQnlJZChcIm5vZGUtdG90YWxcIikudGV4dENvbnRlbnQgPSBVdGlsLm1heFNraWxsTm9kZXM7XG5cbiAgZnVuY3Rpb24gYnVpbGRUYWIodHJlZSkge1xuICAgIGxldCB0YWJFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICB0YWJFbGVtZW50LmlkID0gVXRpbC5zdHJpbmdUb0Nzcyh0cmVlLm5hbWUgKyBcIi10YWJcIik7XG4gICAgdGFiRWxlbWVudC5jbGFzc0xpc3QuYWRkKFwidHJlZVRhYlwiKTtcbiAgICB0YWJFbGVtZW50LnRleHRDb250ZW50ID0gdHJlZS5uYW1lO1xuXG4gICAgbGV0IGNvdW50ZXJFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICBjb3VudGVyRWxlbWVudC5pZCA9IFV0aWwuc3RyaW5nVG9Dc3ModHJlZS5uYW1lKSArIFwiLXRhYi1jb3VudGVyXCI7XG4gICAgY291bnRlckVsZW1lbnQuY2xhc3NMaXN0LmFkZChcInRhYi1jb3VudGVyXCIpO1xuICAgIGNvdW50ZXJFbGVtZW50LnRleHRDb250ZW50ID0gXCIwIC8gXCIgKyBza2lsbFRyZWUuZ2V0Tm9kZUNvdW50KHRyZWUubmFtZSk7XG4gICAgdGFiRWxlbWVudC5hcHBlbmRDaGlsZChjb3VudGVyRWxlbWVudCk7XG5cbiAgICB0YWJFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICBQdWJTdWIucHVibGlzaChcInRyZWVUYWJDbGlja2VkXCIsIHt0cmVlTmFtZTogdHJlZS5uYW1lfSk7XG4gICAgfSk7XG5cbiAgICBmaW5kQnlJZChcInRhYnMtcGFuZVwiKS5hcHBlbmQodGFiRWxlbWVudCk7XG4gIH1cblxuICBmdW5jdGlvbiBidWlsZFRyZWVEaXNwbGF5KHRyZWUpIHtcbiAgICBsZXQgdHJlZUVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIHRyZWVFbGVtZW50LmlkID0gVXRpbC50cmVlTmFtZVRvSWQodHJlZS5uYW1lKTtcbiAgICB0cmVlRWxlbWVudC5jbGFzc0xpc3QuYWRkKFwic2tpbGwtdHJlZVwiKTtcbiAgICB0cmVlRWxlbWVudC5jbGFzc0xpc3QuYWRkKFwiaGlkZVwiKTtcblxuICAgIC8vIHRoZXNlIGNvbnRyb2wgdGhlIHNwYWNpbmcgYmV0d2VlbiBub2Rlc1xuICAgIGxldCB4U3BhY2luZyA9IDkwO1xuICAgIGxldCB5U3BhY2luZyA9IDU1O1xuXG4gICAgdmFyIGxlZnRtb3N0Tm9kZUVsZW1lbnQgPSAwO1xuICAgIHZhciByaWdodG1vc3ROb2RlRWxlbWVudCA9IDA7XG5cbiAgICAvLyBUT0RPOiBuZWVkIHRvIGRvIHNvbWV0aGluZyBoZXJlIHRvIHNvcnQgdGhlIG5vZGUgYXJyYXkuICBQcm9iYWJseSBzZWFyY2hcbiAgICAvLyBpdCBlYWNoIHRpbWUgeW91IGFkZCBhIG5vZGUgYW5kIGFkZCB0aGUgY2hpbGRyZW4gb2YgdGhhdCBub2RlIHRvIGEgcXVldWVcbiAgICAvLyB0byBiZSB0aGUgbmV4dCBsb2FkZWRcblxuICAgIC8vIENyZWF0ZSBncmFwaCBub2RlcyBhbmQgaW5zZXJ0IHRoZW0gaW50byB0aGUgdHJlZVxuICAgIGZvciAobGV0IG5vZGUgb2YgdHJlZS5ub2Rlcykge1xuICAgICAgbGV0IG5vZGVGcmFtZUVsZW1lbnQgPSBidWlsZE5vZGVFbGVtZW50KG5vZGUpO1xuXG4gICAgICAvLyB0aGUgZmlyc3QgZWxlbWVudCBpbiBub2RlcyBpcyB0aGUgcm9vdCBub2RlLCBzbyBpdCBzdGFydHMgYXZhaWxhYmxlXG4gICAgICBpZiAobm9kZSA9PSB0cmVlLm5vZGVzWzBdKSB7XG4gICAgICAgIG5vZGVGcmFtZUVsZW1lbnQuY2xhc3NMaXN0LmFkZChcImF2YWlsYWJsZVwiKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG5vZGVGcmFtZUVsZW1lbnQuY2xhc3NMaXN0LmFkZChcInVuYXZhaWxhYmxlXCIpO1xuICAgICAgfVxuXG4gICAgICBsZXQgcGFyZW50ID0gc2tpbGxUcmVlLnBhcmVudHNPZihub2RlKVswXTtcbiAgICAgIGlmIChwYXJlbnQgIT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIGxldCByZWxhdGl2ZUNoaWxkUG9zdGlpb24gPSBnZXRSZWxhdGl2ZUNoaWxkUG9zaXRpb24ocGFyZW50LCBub2RlKTtcbiAgICAgICAgbGV0IHBhcmVudEVsZW1lbnQgPSB0cmVlRWxlbWVudC5xdWVyeVNlbGVjdG9yKGAjJHtwYXJlbnQuaWR9YCk7XG5cbiAgICAgICAgbGV0IHBhcmVudFRvcCA9IFV0aWwuZGltZW5zaW9uQXNOdW1iZXIocGFyZW50RWxlbWVudC5zdHlsZS50b3ApO1xuICAgICAgICBsZXQgcGFyZW50TGVmdCA9IFV0aWwuZGltZW5zaW9uQXNOdW1iZXIocGFyZW50RWxlbWVudC5zdHlsZS5sZWZ0KTtcblxuICAgICAgICAvLyBkZXJpdmUgdGhlIG9mZnNldHMgZnJvbSB0aGUgcGFyZW50J3MgcG9zaXRpb24gaW4gdGhlIHBhbmUgdG8gdGhlXG4gICAgICAgIC8vIGNoaWxkJ3NcbiAgICAgICAgaWYgKHJlbGF0aXZlQ2hpbGRQb3N0aWlvbiA9PSBcImxlZnRcIikge1xuICAgICAgICAgIG5vZGVGcmFtZUVsZW1lbnQuc3R5bGUudG9wID0gcGFyZW50VG9wICsgeVNwYWNpbmcgKyBcInB4XCI7XG4gICAgICAgICAgbm9kZUZyYW1lRWxlbWVudC5zdHlsZS5sZWZ0ID0gcGFyZW50TGVmdCAtIHhTcGFjaW5nICsgXCJweFwiO1xuICAgICAgICB9IGVsc2UgaWYgKHJlbGF0aXZlQ2hpbGRQb3N0aWlvbiA9PSBcInJpZ2h0XCIpIHtcbiAgICAgICAgICBub2RlRnJhbWVFbGVtZW50LnN0eWxlLnRvcCA9IHBhcmVudFRvcCArIHlTcGFjaW5nICsgXCJweFwiO1xuICAgICAgICAgIG5vZGVGcmFtZUVsZW1lbnQuc3R5bGUubGVmdCA9IHBhcmVudExlZnQgKyB4U3BhY2luZyArIFwicHhcIjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBub2RlRnJhbWVFbGVtZW50LnN0eWxlLnRvcCA9IHBhcmVudFRvcCArICh5U3BhY2luZyAqIDIpICsgXCJweFwiO1xuICAgICAgICAgIG5vZGVGcmFtZUVsZW1lbnQuc3R5bGUubGVmdCA9IHBhcmVudExlZnQgKyBcInB4XCI7XG4gICAgICAgIH1cblxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbm9kZUZyYW1lRWxlbWVudC5zdHlsZS50b3AgPSBcIjI1cHhcIjtcbiAgICAgICAgbm9kZUZyYW1lRWxlbWVudC5zdHlsZS5sZWZ0ID0gXCIzNnB4XCI7XG4gICAgICB9XG5cbiAgICAgIGxldCBsZWZ0UG9zaXRpb24gPSBVdGlsLmRpbWVuc2lvbkFzTnVtYmVyKG5vZGVGcmFtZUVsZW1lbnQuc3R5bGUubGVmdCk7XG4gICAgICBpZiAobGVmdFBvc2l0aW9uIDwgbGVmdG1vc3ROb2RlRWxlbWVudCkge1xuICAgICAgICBsZWZ0bW9zdE5vZGVFbGVtZW50ID0gbGVmdFBvc2l0aW9uO1xuICAgICAgfVxuICAgICAgaWYgKGxlZnRQb3NpdGlvbiA+IHJpZ2h0bW9zdE5vZGVFbGVtZW50KSB7XG4gICAgICAgIHJpZ2h0bW9zdE5vZGVFbGVtZW50ID0gbGVmdFBvc2l0aW9uO1xuICAgICAgfVxuXG4gICAgICB0cmVlRWxlbWVudC5hcHBlbmRDaGlsZChub2RlRnJhbWVFbGVtZW50KTtcblxuICAgIH1cblxuICAgIGxldCBub2RlV2lkdGggPSAxMDA7IC8vIHdpZHRoIG9mIGEgZ3JhcGggbm9kZSwgcGVyIHBsYW5uZXIuY3NzXG4gICAgbGV0IGhvcnpQYWRkaW5nID0gMjU7IC8vIGhvcml6b250YWwgcGFkZGluZyBvbiBlaXRoZXIgc2lkZSBvZiB0aGUgYXNzZW1ibGVkIHRyZWVcbiAgICBsZXQgdHJlZVdpZHRoID0gcmlnaHRtb3N0Tm9kZUVsZW1lbnQgLSBsZWZ0bW9zdE5vZGVFbGVtZW50ICsgbm9kZVdpZHRoICsgKGhvcnpQYWRkaW5nICogMik7XG4gICAgdHJlZUVsZW1lbnQuc3R5bGUud2lkdGggPSB0cmVlV2lkdGggKyBcInB4XCI7XG4gICAgdHJlZUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5ub2RlXCIpLmZvckVhY2goIGVsID0+IHtcbiAgICAgIGxldCBuZXdMZWZ0ID0gVXRpbC5kaW1lbnNpb25Bc051bWJlcihlbC5zdHlsZS5sZWZ0KSArICgtbGVmdG1vc3ROb2RlRWxlbWVudCkgKyBob3J6UGFkZGluZyArIFwicHhcIjtcbiAgICAgIGVsLnN0eWxlLmxlZnQgPSBuZXdMZWZ0O1xuICAgIH0pO1xuXG4gICAgZm9yIChsZXQgbm9kZSBvZiB0cmVlLm5vZGVzKSB7XG4gICAgICBkcmF3Tm9kZUVkZ2VzKG5vZGUsIHRyZWVFbGVtZW50KTtcbiAgICB9XG5cbiAgICBmaW5kQnlJZChcImdyYXBoLXZpZXdcIikuYXBwZW5kQ2hpbGQodHJlZUVsZW1lbnQpO1xuICB9XG5cbiAgZnVuY3Rpb24gYnVpbGROb2RlRWxlbWVudChub2RlKSB7XG4gICAgbGV0IG5vZGVFbGVtZW50ID0gZmluZEJ5SWQoXCJoZXgtdGVtcGxhdGVcIikuY29udGVudC5jbG9uZU5vZGUodHJ1ZSkuZmlyc3RFbGVtZW50Q2hpbGQ7XG4gICAgbm9kZUVsZW1lbnQuaWQgPSBub2RlLmlkO1xuICAgIG5vZGVFbGVtZW50LmNsYXNzTGlzdC5hZGQoYCR7VXRpbC5zdHJpbmdUb0Nzcyhub2RlLmF0dHJpYnV0ZS5uYW1lKX1gKTtcbiAgICBub2RlRWxlbWVudC5kYXRhc2V0LmF0dHJpYnV0ZSA9IFV0aWwuc3RyaW5nVG9Dc3Mobm9kZS5hdHRyaWJ1dGUubmFtZSk7XG5cbiAgICBub2RlRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmhleC10ZXh0XCIpLnRleHRDb250ZW50ID0gbm9kZS5hdHRyaWJ1dGUubGFiZWw7XG5cbiAgICByZXR1cm4gbm9kZUVsZW1lbnQ7XG4gIH1cblxuICAvLyBUT0RPOiBjaGlsZHJlbk9mIGlzIHNsb3cgYW5kIHByb2JhYmx5IGRvZXNuJ3QgbmVlZCB0byBiZSBjYWxsZWQgaGVyZSwganVzdFxuICAvLyB0byBnZXQgdGhlIGlkcyBvZiB0aGUgY2hpbGRyZW4uICBJcyBpdCBwb3NzaWJsZSB0byBnZXQgdGhlIGNoaWxkIElEcyBvdXQgb2ZcbiAgLy8gdGhlIHBhcmVudE5vZGUgd2l0aG91dCBjYWxsaW5nIGNoaWxkcmVuT2Y/XG5cbiAgZnVuY3Rpb24gZHJhd05vZGVFZGdlcyhwYXJlbnROb2RlLCB0cmVlRWxlbWVudCkge1xuICAgIGxldCBwYXJlbnRFbGVtZW50ID0gdHJlZUVsZW1lbnQucXVlcnlTZWxlY3RvcihgIyR7cGFyZW50Tm9kZS5pZH1gKTtcbiAgICBmb3IgKGxldCBjaGlsZCBvZiBza2lsbFRyZWUuY2hpbGRyZW5PZihwYXJlbnROb2RlKSkge1xuICAgICAgbGV0IGNoaWxkRWxlbWVudCA9IHRyZWVFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoYCMke2NoaWxkLmlkfWApO1xuXG4gICAgICBsZXQgbGluZUVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgbGluZUVsZW1lbnQuY2xhc3NMaXN0LmFkZChcIm5vZGUtY29ubmVjdC1saW5lXCIpO1xuICAgICAgbGluZUVsZW1lbnQuY2xhc3NMaXN0LmFkZChwYXJlbnROb2RlLmlkKTtcblxuICAgICAgbGV0IHBhcmVudFggPSBVdGlsLmRpbWVuc2lvbkFzTnVtYmVyKHBhcmVudEVsZW1lbnQuc3R5bGUubGVmdCk7XG4gICAgICBsZXQgcGFyZW50WSA9IFV0aWwuZGltZW5zaW9uQXNOdW1iZXIocGFyZW50RWxlbWVudC5zdHlsZS50b3ApO1xuICAgICAgbGV0IGNoaWxkWCA9IFV0aWwuZGltZW5zaW9uQXNOdW1iZXIoY2hpbGRFbGVtZW50LnN0eWxlLmxlZnQpO1xuICAgICAgbGV0IGNoaWxkWSA9IFV0aWwuZGltZW5zaW9uQXNOdW1iZXIoY2hpbGRFbGVtZW50LnN0eWxlLnRvcCk7XG5cbiAgICAgIGxldCBkZWx0YVggPSBwYXJlbnRYIC0gY2hpbGRYO1xuICAgICAgbGV0IGRlbHRhWSA9IHBhcmVudFkgLSBjaGlsZFk7XG5cbiAgICAgIGxldCBhbmdsZSAgPSAoTWF0aC5hdGFuMihkZWx0YVksIGRlbHRhWCkgKiAxODAgLyBNYXRoLlBJKSArIDE4MDtcbiAgICAgIGxldCB0cmFuc2Zvcm0gPSBcInJvdGF0ZShcIiArIChhbmdsZSkgKyBcImRlZylcIjtcblxuICAgICAgaWYgKGFuZ2xlID09IDkwKSB7XG4gICAgICAgIGxpbmVFbGVtZW50LnN0eWxlLndpZHRoID0gY2hpbGRZIC0gcGFyZW50WSArIFwicHhcIjtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGxpbmVFbGVtZW50LnN0eWxlLndpZHRoID0gY2hpbGRZIC0gcGFyZW50WSArIDQwICsgXCJweFwiO1xuICAgICAgfVxuXG4gICAgICBsaW5lRWxlbWVudC5zdHlsZS50cmFuc2Zvcm0gPSB0cmFuc2Zvcm07XG4gICAgICBsaW5lRWxlbWVudC5zdHlsZS50b3AgPSAocGFyZW50WSArIDQ3KSArIFwicHhcIjtcbiAgICAgIGxpbmVFbGVtZW50LnN0eWxlLmxlZnQgPSAocGFyZW50WCArIDU1KSArIFwicHhcIjtcblxuICAgICAgdHJlZUVsZW1lbnQuYXBwZW5kQ2hpbGQobGluZUVsZW1lbnQpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGdldFJlbGF0aXZlQ2hpbGRQb3NpdGlvbihwYXJlbnQsIGNoaWxkKSB7XG4gICAgaWYgKHBhcmVudC5sZWZ0Q2hpbGRJZCA9PSBjaGlsZC5pZCkge1xuICAgICAgcmV0dXJuIFwibGVmdFwiO1xuICAgIH0gZWxzZSBpZiAocGFyZW50LmNlbnRlckNoaWxkSWQgPT0gY2hpbGQuaWQpIHtcbiAgICAgIHJldHVybiBcImNlbnRlclwiO1xuICAgIH0gZWxzZSBpZiAocGFyZW50LnJpZ2h0Q2hpbGRJZCA9PSBjaGlsZC5pZCkge1xuICAgICAgcmV0dXJuIFwicmlnaHRcIjtcbiAgICB9XG4gICAgcmV0dXJuIFwiY2hpbGQgbm90IGZvdW5kIGluIGdldFJlbGF0aXZlQ2hpbGRQb3NpdGlvbigpXCJcbiAgfVxuXG59XG4iLCJcblwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgeyBQdWJTdWIgfSBmcm9tIFwiLi9wdWJfc3ViLmpzXCI7XG5cbmxldCBzb3J0ID0gMDtcblxuY29uc3Qgc29ydHMgPSBbXCJ0cmVlXCIsIFwiYWxwaGFcIl07XG5cbmV4cG9ydCBjb25zdCBib251c1NvcnQgPSAoKSA9PiB7XG4gIHJldHVybiBzb3J0c1tzb3J0XTtcbn1cblxuZXhwb3J0IGNvbnN0IGluY3JlbWVudEJvbnVzU29ydCA9ICgpID0+IHtcbiAgc29ydCA9PSAxID8gc29ydCA9IDAgOiBzb3J0Kys7XG4gIFB1YlN1Yi5wdWJsaXNoKFwiYm9udXNTb3J0Q2hhbmdlZFwiLCB7Ym9udXNTb3J0OiBzb3J0c1tzb3J0XSwgbGFiZWw6IGRpc3BsYXlTdHJpbmdzW3NvcnRzW3NvcnRdXX0pO1xuICByZXR1cm4gc29ydHNbc29ydF07XG59XG5cbmV4cG9ydCBjb25zdCBhZ2dyZWdhdGVCb251c2VzID0gKG5vZGVzKSA9PiB7XG4gIGxldCBib251c2VzID0gW107XG4gIGZvciAobGV0IG5vZGUgb2Ygbm9kZXMpIHtcbiAgICBsZXQgYm9udXNGb3JBdHRyaWJ1dGUgPSBnZXRCb251c0ZvckF0dHJpYnV0ZShib251c2VzLCBub2RlLmF0dHJpYnV0ZSk7XG4gICAgaWYgKGJvbnVzRm9yQXR0cmlidXRlICE9IHVuZGVmaW5lZCkge1xuICAgICAgYm9udXNGb3JBdHRyaWJ1dGUudmFsdWUgPSAoKGJvbnVzRm9yQXR0cmlidXRlLnZhbHVlICogMTApICsgKG5vZGUudmFsdWUoKSAqIDEwKSkgLyAxMDtcbiAgICB9IGVsc2Uge1xuICAgICAgYm9udXNlcy5wdXNoKHthdHRyaWJ1dGU6IG5vZGUuYXR0cmlidXRlLCB2YWx1ZTogbm9kZS52YWx1ZSgpfSk7XG4gICAgfVxuICB9XG4gIGJvbnVzZXMuc29ydCggKGEsIGIpID0+IHtcbiAgICByZXR1cm4gKGEuYXR0cmlidXRlLm5hbWUgPiBiLmF0dHJpYnV0ZS5uYW1lID8gMSA6IC0xKTtcbiAgfSlcbiAgcmV0dXJuIGJvbnVzZXM7XG59XG5cbmZ1bmN0aW9uIGdldEJvbnVzRm9yQXR0cmlidXRlKGJvbnVzZXMsIGF0dHJpYnV0ZSkge1xuICBmb3IgKGxldCBib251cyBvZiBib251c2VzKSB7XG4gICAgaWYgKGJvbnVzLmF0dHJpYnV0ZSA9PSBhdHRyaWJ1dGUpIHtcbiAgICAgIHJldHVybiBib251cztcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IGRpc3BsYXlTdHJpbmcgPSAoaW5wdXQpID0+IHtcbiAgcmV0dXJuIGRpc3BsYXlTdHJpbmdzW2lucHV0XTtcbn1cblxuLy8gTm90ZTogdGhlIFRZUEUgb2Ygc29ydCBpcyBjb3JyZWxhdGVkIHdpdGggYSBidXR0b24gbGFiZWwgdGhhdCBsaXN0cyB0aGUgT1RIRVJcbi8vIHNvcnQsIGFzIHRoZSBidXR0b24gaXMgY2xhaW1pbmcgdG8gQ0hBTkdFIHRoZSBzb3J0aW5nIHR5cGUgdG8gdGhlIG5vbi1hY3RpdmVcbi8vIG9uZVxuY29uc3QgZGlzcGxheVN0cmluZ3MgPSB7XG4gIFwidHJlZVwiOiBcIlNvcnQgYnkgQWxwaGFcIixcbiAgXCJhbHBoYVwiOiBcIlNvcnQgYnkgVHJlZVwiXG59XG4iLCJcblwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgeyBQdWJTdWIgfSBmcm9tIFwiLi9wdWJfc3ViLmpzXCI7XG5pbXBvcnQgKiBhcyBVdGlsIGZyb20gXCIuL3V0aWwuanNcIjtcbmltcG9ydCB7IGZpbmRCeUlkLCBmaW5kQnlDbGFzcyB9IGZyb20gXCIuL2RvbS5qc1wiO1xuaW1wb3J0ICogYXMgQ2hhc3NpcyBmcm9tIFwiLi9jaGFzc2lzLmpzXCI7XG5pbXBvcnQgeyBib251c1NvcnQsIGFnZ3JlZ2F0ZUJvbnVzZXMgfSBmcm9tIFwiLi9ib251c2VzLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHdpcmVFdmVudHMoc2tpbGxUcmVlKSB7XG5cbiAgUHViU3ViLnN1YnNjcmliZShcIm5vZGVDbGlja2VkXCIsIGRhdGEgPT4ge1xuICAgIHRvZ2dsZU5vZGUoZGF0YS5ub2RlKTtcbiAgfSk7XG5cbiAgUHViU3ViLnN1YnNjcmliZShcIm5vZGVDaGFuZ2VkXCIsIGRhdGEgPT4ge1xuICAgIGxldCB0cmVlTmFtZSA9IHNraWxsVHJlZS5nZXRBY3RpdmVUcmVlTmFtZSgpO1xuICAgIHVwZGF0ZVRvdGFsTm9kZXNBbmRDb3N0cyhza2lsbFRyZWUuZ2V0U2VsZWN0ZWROb2RlcygpLmxlbmd0aCk7XG4gICAgdXBkYXRlUGVyVHJlZU5vZGVDb3VudERpc3BsYXkodHJlZU5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2tpbGxUcmVlLmdldFNlbGVjdGVkTm9kZXModHJlZU5hbWUpLmxlbmd0aCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBza2lsbFRyZWUuZ2V0Tm9kZUNvdW50KHRyZWVOYW1lKVxuICAgICk7XG4gICAgdXBkYXRlVHJlZUNvbG9ycyhza2lsbFRyZWUuZ2V0QWN0aXZlVHJlZU5hbWUoKSk7XG4gICAgdXBkYXRlQm9udXNlcygpO1xuICAgIHJldmVydFVSTCgpO1xuICB9KTtcblxuICBQdWJTdWIuc3Vic2NyaWJlKFwidHJlZUNoYW5nZWRcIiwgZGF0YSA9PiB7XG4gICAgdXBkYXRlVG90YWxOb2Rlc0FuZENvc3RzKHNraWxsVHJlZS5nZXRTZWxlY3RlZE5vZGVzKCkubGVuZ3RoKTtcbiAgICB1cGRhdGVQZXJUcmVlTm9kZUNvdW50RGlzcGxheShkYXRhLnRyZWVOYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNraWxsVHJlZS5nZXRTZWxlY3RlZE5vZGVzKGRhdGEudHJlZU5hbWUpLmxlbmd0aCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBza2lsbFRyZWUuZ2V0Tm9kZUNvdW50KGRhdGEudHJlZU5hbWUpXG4gICAgKTtcbiAgICB1cGRhdGVUcmVlQ29sb3JzKGRhdGEudHJlZU5hbWUpO1xuICAgIHVwZGF0ZUJvbnVzZXMoKTtcbiAgICByZXZlcnRVUkwoKTtcbiAgfSk7XG5cbiAgUHViU3ViLnN1YnNjcmliZShcInRyZWVJbXBvcnRlZFwiLCBkYXRhID0+IHtcbiAgICB1cGRhdGVUb3RhbE5vZGVzQW5kQ29zdHMoc2tpbGxUcmVlLmdldFNlbGVjdGVkTm9kZXMoKS5sZW5ndGgpO1xuICAgIHVwZGF0ZVBlclRyZWVOb2RlQ291bnREaXNwbGF5KCk7XG4gICAgdXBkYXRlVHJlZUNvbG9ycygpO1xuICAgIHVwZGF0ZUJvbnVzZXMoKTtcbiAgICBQdWJTdWIucHVibGlzaChcInRyZWVUYWJDbGlja2VkXCIsIHsgdHJlZU5hbWU6IGRhdGEuYWN0aXZlVHJlZU5hbWUgfSApO1xuICAgIFB1YlN1Yi5wdWJsaXNoKFwidG9nZ2xlQ2hhc3Npc1dlaWdodFwiLCB7fSApO1xuICAgIFB1YlN1Yi5wdWJsaXNoKFwidG9nZ2xlQ2hhc3Npc1RlY2hcIiwge30gKTtcbiAgfSk7XG5cbiAgUHViU3ViLnN1YnNjcmliZShcInRyZWVUYWJDbGlja2VkXCIsIGRhdGEgPT4ge1xuICAgIGNoYW5nZVNraWxsVHJlZShkYXRhLnRyZWVOYW1lKTtcbiAgfSk7XG5cbiAgUHViU3ViLnN1YnNjcmliZShcInJlc2V0QWN0aXZlVHJlZVwiLCBkYXRhID0+IHtcbiAgICBza2lsbFRyZWUucmVzZXRUcmVlKGRhdGEudHJlZU5hbWUpO1xuICB9KTtcblxuICBQdWJTdWIuc3Vic2NyaWJlKFwicmVzZXRBbGxUcmVlc1wiLCBkYXRhID0+IHtcbiAgICBza2lsbFRyZWUucmVzZXRUcmVlKCk7XG4gIH0pO1xuXG4gIFB1YlN1Yi5zdWJzY3JpYmUoXCJzZWxlY3RUcmVlXCIsIGRhdGEgPT4ge1xuICAgIHNraWxsVHJlZS5zZWxlY3RUcmVlKGRhdGEudHJlZU5hbWUpO1xuICB9KTtcblxuICBQdWJTdWIuc3Vic2NyaWJlKFwidG9nZ2xlTm9kZUNvbG9yaXphdGlvblwiLCBkYXRhID0+IHRvZ2dsZU5vZGVDb2xvcml6YXRpb24oKSk7XG5cbiAgUHViU3ViLnN1YnNjcmliZShcInRvZ2dsZUNoYXNzaXNXZWlnaHRcIiwgZGF0YSA9PiB7XG4gICAgbGV0IHRvZ2dsZUVsZW1lbnQgPSBmaW5kQnlJZChcImNoYXNzaXMtd2VpZ2h0LXRvZ2dsZVwiKTtcbiAgICB0b2dnbGVFbGVtZW50LnRleHRDb250ZW50ID0gQ2hhc3Npcy5kaXNwbGF5U3RyaW5nKENoYXNzaXMuaW5jcmVtZW50V2VpZ2h0Q2xhc3MoKSk7XG4gIH0pO1xuXG4gIFB1YlN1Yi5zdWJzY3JpYmUoXCJ0b2dnbGVDaGFzc2lzVGVjaFwiLCBkYXRhID0+IHtcbiAgICBsZXQgdG9nZ2xlRWxlbWVudCA9IGZpbmRCeUlkKFwiY2hhc3Npcy10ZWNoLXRvZ2dsZVwiKTtcbiAgICB0b2dnbGVFbGVtZW50LnRleHRDb250ZW50ID0gQ2hhc3Npcy5kaXNwbGF5U3RyaW5nKENoYXNzaXMuaW5jcmVtZW50VGVjaExldmVsKCkpO1xuICB9KTtcblxuICBQdWJTdWIuc3Vic2NyaWJlKFwiY2hhc3Npc1dlaWdodFVwZGF0ZWRcIiwgZGF0YSA9PiB7XG4gICAgdXBkYXRlSGV4VmFsdWVzKCk7XG4gICAgdXBkYXRlQm9udXNlcygpO1xuICB9KTtcblxuICBQdWJTdWIuc3Vic2NyaWJlKFwiY2hhc3Npc1RlY2hVcGRhdGVkXCIsIGRhdGEgPT4ge1xuICAgIHVwZGF0ZUhleFZhbHVlcygpO1xuICAgIHVwZGF0ZUJvbnVzZXMoKTtcbiAgfSk7XG5cbiAgUHViU3ViLnN1YnNjcmliZShcImJvbnVzU29ydENoYW5nZWRcIiwgZGF0YSA9PiB7XG4gICAgdXBkYXRlQm9udXNTb3J0QnV0dG9uKGRhdGEubGFiZWwpO1xuICAgIC8vIGRvbid0IHJlYWxseSBuZWVkIHRvIGRvIGEgZnVsbCByZWNhbGMgaGVyZSwganVzdCByZS1yZW5kZXIgd2l0aCB0aGUgbmV3XG4gICAgLy8gc29ydCBkaXNwbGF5LCBidXQgaXQncyBxdWljayBhbnl3YXlcbiAgICB1cGRhdGVCb251c2VzKCk7XG4gIH0pO1xuXG4gIFB1YlN1Yi5zdWJzY3JpYmUoXCJub2RlTW91c2VFbnRlclwiLCBkYXRhID0+IHtcbiAgICBmb3IgKGxldCBub2RlIG9mIGZpbmRCeUlkKGAke1V0aWwudHJlZU5hbWVUb0lkKGRhdGEudHJlZU5hbWUpfWApLnF1ZXJ5U2VsZWN0b3JBbGwoXCIubm9kZVwiKSkge1xuICAgICAgaWYgKG5vZGUuZGF0YXNldC5hdHRyaWJ1dGUgPT0gZGF0YS5hdHRyaWJ1dGUpIHtcbiAgICAgICAgbm9kZS5jbGFzc0xpc3QuYWRkKFwibW91c2Utb3ZlclwiKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG5vZGUuY2xhc3NMaXN0LnJlbW92ZShcIm1vdXNlLW92ZXJcIik7XG4gICAgICB9XG4gICAgfVxuICB9KTtcblxuICBQdWJTdWIuc3Vic2NyaWJlKFwibm9kZU1vdXNlTGVmdFwiLCBkYXRhID0+IHtcbiAgICBmb3IgKGxldCBub2RlIG9mIGZpbmRCeUlkKGAke1V0aWwudHJlZU5hbWVUb0lkKGRhdGEudHJlZU5hbWUpfWApLnF1ZXJ5U2VsZWN0b3JBbGwoXCIubm9kZVwiKSkge1xuICAgICAgbm9kZS5jbGFzc0xpc3QucmVtb3ZlKFwibW91c2Utb3ZlclwiKTtcbiAgICB9XG4gIH0pO1xuXG4gIGZ1bmN0aW9uIHRvZ2dsZU5vZGUobm9kZSkge1xuICAgIG5vZGUuc2VsZWN0ZWQoIW5vZGUuc2VsZWN0ZWQoKSk7XG4gIH1cblxuICBmdW5jdGlvbiB1cGRhdGVUcmVlQ29sb3JzKHRyZWVOYW1lKSB7XG4gICAgaWYgKHRyZWVOYW1lID09IHVuZGVmaW5lZCkge1xuICAgICAgZm9yIChsZXQgdHJlZSBvZiBza2lsbFRyZWUuZ2V0VHJlZXMoKSkge1xuICAgICAgICB1cGRhdGVUcmVlQ29sb3JzKHRyZWUubmFtZSk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGxldCB0cmVlID0gc2tpbGxUcmVlLmdldFRyZWUodHJlZU5hbWUpO1xuICAgICAgZm9yIChsZXQgbm9kZSBvZiB0cmVlLm5vZGVzKSB7XG4gICAgICAgIGxldCBub2RlRWxlbWVudCA9IGZpbmRCeUlkKG5vZGUuaWQpO1xuICAgICAgICBsZXQgY2hpbGRFZGdlcyA9IGZpbmRCeUNsYXNzKGAuJHtub2RlLmlkfWApO1xuICAgICAgICBpZiAobm9kZS5zZWxlY3RlZCgpKSB7XG4gICAgICAgICAgbm9kZUVsZW1lbnQuY2xhc3NMaXN0LmFkZChcInNlbGVjdGVkXCIpO1xuICAgICAgICAgIHNraWxsVHJlZS5ub2RlTGVnYWwobm9kZSkgPyBub2RlRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKFwiaWxsZWdhbFwiKSA6IG5vZGVFbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJpbGxlZ2FsXCIpO1xuICAgICAgICAgIGZvciAobGV0IGVkZ2Ugb2YgY2hpbGRFZGdlcykge1xuICAgICAgICAgICAgZWRnZS5jbGFzc0xpc3QuYWRkKFwic2VsZWN0ZWRcIik7XG4gICAgICAgICAgICBza2lsbFRyZWUubm9kZUxlZ2FsKG5vZGUpID8gZWRnZS5jbGFzc0xpc3QucmVtb3ZlKFwiaWxsZWdhbFwiKSA6IGVkZ2UuY2xhc3NMaXN0LmFkZChcImlsbGVnYWxcIik7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIG5vZGVFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoXCJzZWxlY3RlZFwiKTtcbiAgICAgICAgICBub2RlRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKFwiaWxsZWdhbFwiKTtcbiAgICAgICAgICBmb3IgKGxldCBlZGdlIG9mIGNoaWxkRWRnZXMpIHtcbiAgICAgICAgICAgIGVkZ2UuY2xhc3NMaXN0LnJlbW92ZShcInNlbGVjdGVkXCIpO1xuICAgICAgICAgICAgZWRnZS5jbGFzc0xpc3QucmVtb3ZlKFwiaWxsZWdhbFwiKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiB1cGRhdGVIZXhWYWx1ZXMoKSB7XG4gICAgbGV0IG5vZGVFbGVtZW50cyA9IGZpbmRCeUNsYXNzKCcubm9kZScpO1xuICAgIGZvciAobGV0IG5vZGVFbGVtZW50IG9mIG5vZGVFbGVtZW50cykge1xuICAgICAgbGV0IG5vZGUgPSBza2lsbFRyZWUuZ2V0Tm9kZShub2RlRWxlbWVudC5pZCk7XG4gICAgICBub2RlRWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuaGV4LXZhbHVlJykudGV4dENvbnRlbnQgPSBVdGlsLmZvcm1hdFZhbHVlKG5vZGUuYXR0cmlidXRlLCBub2RlLnZhbHVlKCkpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHVwZGF0ZUJvbnVzU29ydEJ1dHRvbihuZXdMYWJlbCkge1xuICAgIGZpbmRCeUlkKFwiYm9udXMtc29ydC1idXR0b25cIikudGV4dENvbnRlbnQgPSBuZXdMYWJlbDtcbiAgfVxuXG4gIGZ1bmN0aW9uIHVwZGF0ZUJvbnVzZXMoKSB7XG4gICAgZmluZEJ5SWQoXCJib251c2VzLWRpc3BsYXlcIikuaW5uZXJIVE1MID0gXCJcIjtcbiAgICBsZXQgYm9udXNGcmFtZSA9IGRvY3VtZW50LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKTtcbiAgICBpZiAoYm9udXNTb3J0KCkgPT09ICd0cmVlJykge1xuICAgICAgbGV0IHRyZWVzID0gc2tpbGxUcmVlLmdldFRyZWVzKCk7XG4gICAgICBmb3IgKGxldCB0cmVlIG9mIHRyZWVzKSB7XG4gICAgICAgIGxldCB0cmVlTmFtZSA9IHRyZWUubmFtZTtcbiAgICAgICAgaWYgKHNraWxsVHJlZS5nZXRMZWdhbE5vZGVzKHRyZWVOYW1lKS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgbGV0IHRyZWVOYW1lRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICAgICAgdHJlZU5hbWVFbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJib251cy10cmVlLW5hbWVcIik7XG4gICAgICAgICAgdHJlZU5hbWVFbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJib251cy1saXN0LWVsZW1lbnRcIik7XG4gICAgICAgICAgdHJlZU5hbWVFbGVtZW50LnRleHRDb250ZW50ID0gdHJlZU5hbWU7XG4gICAgICAgICAgYm9udXNGcmFtZS5hcHBlbmQodHJlZU5hbWVFbGVtZW50KTtcbiAgICAgICAgICBhcHBlbmRCb251c2VzKGFnZ3JlZ2F0ZUJvbnVzZXMoc2tpbGxUcmVlLmdldExlZ2FsTm9kZXModHJlZU5hbWUpKSwgYm9udXNGcmFtZSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKGJvbnVzU29ydCgpID09ICdhbHBoYScpIHtcbiAgICAgIGFwcGVuZEJvbnVzZXMoYWdncmVnYXRlQm9udXNlcyhza2lsbFRyZWUuZ2V0TGVnYWxOb2RlcygpKSwgYm9udXNGcmFtZSk7XG4gICAgfVxuXG4gICAgZmluZEJ5SWQoXCJib251c2VzLWRpc3BsYXlcIikuYXBwZW5kKGJvbnVzRnJhbWUpO1xuXG4gICAgaWYgKGZpbmRCeUlkKFwiYm9udXNlcy1kaXNwbGF5XCIpLm9mZnNldEhlaWdodCA+IDU2MCkge1xuICAgICAgZmluZEJ5Q2xhc3MoXCIuYm9udXMtbGlzdC1lbGVtZW50XCIpLmZvckVhY2goZnVuY3Rpb24gKGVsKSB7XG4gICAgICAgIGVsLmNsYXNzTGlzdC5hZGQoXCJtaW5cIik7XG4gICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgZmluZEJ5Q2xhc3MoXCIuYm9udXMtbGlzdC1lbGVtZW50XCIpLmZvckVhY2goZnVuY3Rpb24gKGVsKSB7XG4gICAgICAgIGVsLmNsYXNzTGlzdC5yZW1vdmUoXCJtaW5cIik7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgfVxuXG4gIGZ1bmN0aW9uIGFwcGVuZEJvbnVzZXMoYm9udXNlcywgYm9udXNGcmFtZSkge1xuICAgIGJvbnVzZXMuZm9yRWFjaCgoYm9udXMsIGluZGV4KSA9PiB7XG4gICAgICBsZXQgYm9udXNEaXNwbGF5RWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICBib251c0Rpc3BsYXlFbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJib251cy1kaXNwbGF5XCIpO1xuICAgICAgYm9udXNEaXNwbGF5RWxlbWVudC5jbGFzc0xpc3QuYWRkKFwiYm9udXMtbGlzdC1lbGVtZW50XCIpO1xuICAgICAgYm9udXNEaXNwbGF5RWxlbWVudC50ZXh0Q29udGVudCA9IGJvbnVzLmF0dHJpYnV0ZS5uYW1lICsgXCIgXCIgKyBVdGlsLmZvcm1hdFZhbHVlKGJvbnVzLmF0dHJpYnV0ZSwgYm9udXMudmFsdWUpOztcbiAgICAgIGJvbnVzRnJhbWUuYXBwZW5kKGJvbnVzRGlzcGxheUVsZW1lbnQpO1xuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gY2hhbmdlU2tpbGxUcmVlKHRyZWVOYW1lKSB7XG4gICAgc2tpbGxUcmVlLnNldEFjdGl2ZVRyZWVOYW1lKHRyZWVOYW1lKTtcbiAgICBmaW5kQnlDbGFzcyhcIi50cmVlVGFiXCIpLmZvckVhY2goZnVuY3Rpb24gKGVsKSB7XG4gICAgICBlbC5jbGFzc0xpc3QucmVtb3ZlKFwic2VsZWN0ZWRcIik7XG4gICAgfSk7XG4gICAgZ2V0VGFiRm9yVHJlZU5hbWUodHJlZU5hbWUpLmNsYXNzTGlzdC5hZGQoXCJzZWxlY3RlZFwiKTtcblxuICAgIGZpbmRCeUNsYXNzKFwiLnNraWxsLXRyZWVcIikuZm9yRWFjaChmdW5jdGlvbiAoZWwpIHtcbiAgICAgIGVsLmNsYXNzTGlzdC5hZGQoXCJoaWRlXCIpO1xuICAgIH0pO1xuICAgIGxldCB0cmVlRWxlbWVudCA9IGZpbmRCeUlkKFV0aWwudHJlZU5hbWVUb0lkKHRyZWVOYW1lKSk7XG4gICAgdHJlZUVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZShcImhpZGVcIik7XG4gIH1cblxuICBmdW5jdGlvbiBnZXRUYWJGb3JUcmVlTmFtZSh0cmVlTmFtZSkge1xuICAgIHJldHVybiBmaW5kQnlJZChVdGlsLnN0cmluZ1RvQ3NzKHRyZWVOYW1lKSArIFwiLXRhYlwiKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHVwZGF0ZVRvdGFsTm9kZXNBbmRDb3N0cyhzZWxlY3RlZE5vZGVDb3VudCkge1xuICAgIGZpbmRCeUlkKFwibm9kZS1zZWxlY3Rpb24tY291bnRlclwiKS50ZXh0Q29udGVudCA9IHNlbGVjdGVkTm9kZUNvdW50O1xuICAgIGlmIChzZWxlY3RlZE5vZGVDb3VudCA+IFV0aWwubWF4U2tpbGxOb2Rlcykge1xuICAgICAgZmluZEJ5SWQoXCJub2RlLXNlbGVjdGlvbi1jb3VudGVyXCIpLmNsYXNzTGlzdC5hZGQoXCJleGNlZWRlZC1tYXgtbm9kZXNcIilcbiAgICB9IGVsc2Uge1xuICAgICAgZmluZEJ5SWQoXCJub2RlLXNlbGVjdGlvbi1jb3VudGVyXCIpLmNsYXNzTGlzdC5yZW1vdmUoXCJleGNlZWRlZC1tYXgtbm9kZXNcIilcbiAgICB9XG4gICAgbGV0IHRvdGFsQ2JpbGxDb3N0ID0gYCR7KHNlbGVjdGVkTm9kZUNvdW50ICogVXRpbC5jYmlsbHNQZXJOb2RlKS50b0xvY2FsZVN0cmluZyhcImVuLVVTXCIpfSBDLUJpbGxzIGFuZGA7XG4gICAgbGV0IHRvdGFsWHBDb3N0ID0gYCR7KHNlbGVjdGVkTm9kZUNvdW50ICogVXRpbC54cFBlck5vZGUpLnRvTG9jYWxlU3RyaW5nKFwiZW4tVVNcIil9IFhQIC8gR1hQYDtcbiAgICBmaW5kQnlJZChcImNvc3QtdG90YWxzLWRpc3BsYXlcIikuaW5uZXJIVE1MID0gdG90YWxDYmlsbENvc3QgKyBcIjwvYnI+XCIgKyB0b3RhbFhwQ29zdDtcbiAgfVxuXG4gIGZ1bmN0aW9uIHVwZGF0ZVBlclRyZWVOb2RlQ291bnREaXNwbGF5KHRyZWVOYW1lLCBzZWxlY3RlZFRyZWVOb2Rlc0NvdW50LCB0cmVlTm9kZXNDb3VudCkge1xuICAgIGlmICh0cmVlTmFtZSA9PSB1bmRlZmluZWQpIHtcbiAgICAgIGZvciAobGV0IHRyZWUgb2Ygc2tpbGxUcmVlLmdldFRyZWVzKCkpIHtcbiAgICAgICAgbGV0IHRyZWVUYWJOYW1lID0gYCR7VXRpbC5zdHJpbmdUb0Nzcyh0cmVlLm5hbWUpfS10YWItY291bnRlcmA7XG4gICAgICAgIGxldCBub2RlQ291bnREaXNwbGF5ID0gZmluZEJ5SWQodHJlZVRhYk5hbWUpO1xuICAgICAgICBsZXQgc2VsZWN0ZWRDb3VudCA9IHNraWxsVHJlZS5nZXRTZWxlY3RlZE5vZGVzKHRyZWUubmFtZSkubGVuZ3RoO1xuICAgICAgICBsZXQgdG90YWxDb3VudCA9IHNraWxsVHJlZS5nZXROb2RlQ291bnQodHJlZS5uYW1lKTtcbiAgICAgICAgbm9kZUNvdW50RGlzcGxheS50ZXh0Q29udGVudCA9IGAke3NlbGVjdGVkQ291bnR9IC8gJHt0b3RhbENvdW50fWA7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGxldCBub2RlQ291bnREaXNwbGF5ID0gZmluZEJ5SWQoYCR7VXRpbC5zdHJpbmdUb0Nzcyh0cmVlTmFtZSl9LXRhYi1jb3VudGVyYCk7XG4gICAgICBub2RlQ291bnREaXNwbGF5LnRleHRDb250ZW50ID0gYCR7c2VsZWN0ZWRUcmVlTm9kZXNDb3VudH0gLyAke3RyZWVOb2Rlc0NvdW50fWA7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gcmV2ZXJ0VVJMKCkge1xuICAgIGhpc3RvcnkucHVzaFN0YXRlKHt9LCBcIlwiLCB3aW5kb3cubG9jYXRpb24ub3JpZ2luICsgd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHRvZ2dsZU5vZGVDb2xvcml6YXRpb24oKSB7XG4gICAgZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QudG9nZ2xlKFwiY29sb3JpemUtbm9kZXNcIik7XG4gIH1cblxufVxuIiwiXG5cInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgUHViU3ViIH0gZnJvbSBcIi4vcHViX3N1Yi5qc1wiO1xuaW1wb3J0ICogYXMgVXRpbCBmcm9tIFwiLi91dGlsLmpzXCI7XG5pbXBvcnQgeyBmaW5kQnlJZCB9IGZyb20gXCIuL2RvbS5qc1wiO1xuaW1wb3J0ICogYXMgQ2hhc3NpcyBmcm9tIFwiLi9jaGFzc2lzLmpzXCI7XG5cbmV4cG9ydCBjb25zdCBsb2FkRnJvbVJlbW90ZUlkID0gZnVuY3Rpb24oc2tpbGxUcmVlKSB7XG4gIGxldCByZWdleCA9IC8oW14vLz9dKikkLztcbiAgbGV0IHJlbW90ZUlkID0gcmVnZXguZXhlYyh3aW5kb3cubG9jYXRpb24uaHJlZilbMV07XG5cbiAgaWYgKChyZW1vdGVJZCAhPSB1bmRlZmluZWQpICYmIChyZW1vdGVJZCAhPT0gXCJcIikpIHtcbiAgICBVdGlsLnNob3dNb2RhbChcIlJlYWN0b3Igb25saW5lLCB3ZWFwb25zIG9ubGluZSwgc2Vuc29ycyBvbmxpbmUuLi4uXCIpO1xuXG4gICAgZmV0Y2goXCJodHRwczovL2pzb25ibG9iLmNvbS9hcGkvanNvbkJsb2IvXCIgKyByZW1vdGVJZCwge1xuICAgICAgbWV0aG9kOiBcIkdFVFwiLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIlxuICAgICAgfVxuICAgIH0pXG4gICAgLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHtcbiAgICAgIGlmIChyZXNwb25zZS5vaykge1xuICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc29sZS5sb2coXCJFcnJvciByZXNwb25zZSAtIFwiICsgcmVzcG9uc2UpO1xuICAgICAgfVxuICAgIH0pXG4gICAgLnRoZW4oZnVuY3Rpb24oanNvbikge1xuICAgICAgc2tpbGxUcmVlLmltcG9ydEpzb24oanNvbik7XG4gICAgICBDaGFzc2lzLmltcG9ydFJlbW90ZShqc29uLndlaWdodENsYXNzLCBqc29uLnRlY2hMZXZlbCk7XG4gICAgICBmaW5kQnlJZChcIm1vZGFsLW92ZXJsYXlcIikuY2xhc3NMaXN0LmFkZChcImhpZGVcIik7XG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgc2tpbGxUcmVlLnVwZGF0ZU5vT3AoKTtcbiAgfVxufVxuXG5QdWJTdWIuc3Vic2NyaWJlKFwiZ2V0UGVybWFsaW5rXCIsIChkYXRhKSA9PiB7XG4gIFV0aWwuc2hvd01vZGFsKFwiUGVybWFsaW5rIGluYm91bmQgb24geW91ciBwb3NpdGlvbi5cIik7XG4gIGZldGNoKFwiaHR0cHM6Ly9qc29uYmxvYi5jb20vYXBpL2pzb25CbG9iXCIsIHtcbiAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgIGJvZHk6IHNlcmlhbGl6ZVRyZWVzKGRhdGEuc2tpbGxUcmVlKSxcbiAgICBoZWFkZXJzOiB7XG4gICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIlxuICAgIH1cbiAgfSkudGhlbihmdW5jdGlvbihyZXNwb25zZSkge1xuICAgIGxldCByZWdleCA9IC8oW14vL10qKSQvO1xuICAgIGxldCByZW1vdGVJZCA9IHJlZ2V4LmV4ZWMocmVzcG9uc2UuaGVhZGVycy5nZXQoXCJsb2NhdGlvblwiKSlbMF07XG4gICAgZmluZEJ5SWQoXCJwZXJtYWxpbmstZGlzcGxheVwiKS50ZXh0Q29udGVudCA9IHB1c2hSZW1vdGVJZFRvVVJMKHJlbW90ZUlkKTtcbiAgICBmaW5kQnlJZChcIm1vZGFsLW92ZXJsYXlcIikuY2xhc3NMaXN0LnJlbW92ZShcImhpZGVcIik7XG4gICAgVXRpbC5zZXRNb2RhbENsb3NlYWJpbGl0eSh0cnVlKTtcbiAgfSwgZnVuY3Rpb24oZXJyb3IpIHtcbiAgICBjb25zb2xlLmxvZyhlcnJvci5tZXNzYWdlKTtcbiAgICBVdGlsLnNldE1vZGFsQ2xvc2VhYmlsaXR5KHRydWUpO1xuICB9KTtcbn0pO1xuXG5mdW5jdGlvbiBzZXJpYWxpemVUcmVlcyhza2lsbFRyZWUpIHtcbiAgbGV0IHRyZWVzID0gc2tpbGxUcmVlLmdldFRyZWVzKCk7XG4gIGxldCBzZXJpYWxpemVkVHJlZXMgPSB7fTtcbiAgc2VyaWFsaXplZFRyZWVzLnRyZWVzID0gW107XG4gIHNlcmlhbGl6ZWRUcmVlcy5hY3RpdmVUcmVlTmFtZSA9IHNraWxsVHJlZS5nZXRBY3RpdmVUcmVlTmFtZSgpO1xuICBzZXJpYWxpemVkVHJlZXMud2VpZ2h0Q2xhc3MgPSBDaGFzc2lzLmV4cG9ydFJlbW90ZSgpLndlaWdodENsYXNzO1xuICBzZXJpYWxpemVkVHJlZXMudGVjaExldmVsID0gQ2hhc3Npcy5leHBvcnRSZW1vdGUoKS50ZWNoTGV2ZWw7XG4gIGZvciAobGV0IHRyZWUgb2YgdHJlZXMpIHtcbiAgICBsZXQgc2VyaWFsaXplZFRyZWUgPSB7XG4gICAgICBuYW1lOiB0cmVlLm5hbWUsXG4gICAgICBub2RlczogW11cbiAgICB9XG4gICAgZm9yIChsZXQgbm9kZSBvZiB0cmVlLm5vZGVzKSB7XG4gICAgICBzZXJpYWxpemVkVHJlZS5ub2Rlcy5wdXNoKHNlcmlhbGl6ZU5vZGUobm9kZSkpO1xuICAgIH1cbiAgICBzZXJpYWxpemVkVHJlZXMudHJlZXMucHVzaChzZXJpYWxpemVkVHJlZSk7XG4gIH1cbiAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHNlcmlhbGl6ZWRUcmVlcyk7XG59XG5cbmZ1bmN0aW9uIHNlcmlhbGl6ZU5vZGUobm9kZSkge1xuICBsZXQgcztcbiAgaWYgKG5vZGUuc2VsZWN0ZWQoKSkge1xuICAgIHMgPSAxO1xuICB9IGVsc2Uge1xuICAgIHMgPSAwO1xuICB9XG4gIHJldHVybiB7XG4gICAgaWQ6IG5vZGUuaWQsXG4gICAgczogc1xuICB9XG59XG5cbmZ1bmN0aW9uIHB1c2hSZW1vdGVJZFRvVVJMKHJlbW90ZUlkKSB7XG4gIGxldCByZW1vdGVVUkwgPSB3aW5kb3cubG9jYXRpb24ub3JpZ2luICsgd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lICsgXCI/XCIgKyByZW1vdGVJZFxuICBoaXN0b3J5LnB1c2hTdGF0ZSh7fSwgXCJcIiwgcmVtb3RlVVJMKTtcbiAgcmV0dXJuIHJlbW90ZVVSTDtcbn1cbiIsIlxuXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCAqIGFzIFV0aWwgZnJvbSBcIi4vdXRpbC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBpbnNlcnRBdHRyaWJ1dGVDb2xvcnMoYXR0cmlidXRlTWFwKSB7XG5cbiAgbGV0IGNvbG9yaXphdGlvblN0eWxlc0VsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xuICBkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKGNvbG9yaXphdGlvblN0eWxlc0VsZW1lbnQpO1xuICBsZXQgY29sb3JpemF0aW9uU3R5bGVzID0gY29sb3JpemF0aW9uU3R5bGVzRWxlbWVudC5zaGVldDtcbiAgZm9yIChsZXQgYXR0cmlidXRlIG9mIGF0dHJpYnV0ZU1hcCkge1xuXG4gICAgLy8gYmFja2dyb3VuZFxuICAgIC8vIHNlbGVjdGVkXG4gICAgY29sb3JpemF0aW9uU3R5bGVzLmluc2VydFJ1bGUoYC5jb2xvcml6ZS1ub2RlcyAuJHtVdGlsLnN0cmluZ1RvQ3NzKGF0dHJpYnV0ZS5uYW1lKX0uc2VsZWN0ZWQgLmhleC1ncmFwaGljIHsgZmlsbDogJHsgVXRpbC5zaGFkZUNvbG9yKGF0dHJpYnV0ZS5jb2xvciwgMC4yKSB9YCk7XG4gICAgLy8gdW5zZWxlY3RlZFxuICAgIGNvbG9yaXphdGlvblN0eWxlcy5pbnNlcnRSdWxlKGAuY29sb3JpemUtbm9kZXMgLiR7VXRpbC5zdHJpbmdUb0NzcyhhdHRyaWJ1dGUubmFtZSl9IC5oZXgtZ3JhcGhpYyB7IGZpbGw6ICR7IFV0aWwuc2hhZGVDb2xvcihhdHRyaWJ1dGUuY29sb3IsIC0wLjU1KSB9YCk7XG5cbiAgICAvLyBib3JkZXJcbiAgICAvLyBzZWxlY3RlZCwgbm8gbW91c2VcbiAgICBjb2xvcml6YXRpb25TdHlsZXMuaW5zZXJ0UnVsZShgLmNvbG9yaXplLW5vZGVzIGAgK1xuICAgICAgYC4ke1V0aWwuc3RyaW5nVG9Dc3MoYXR0cmlidXRlLm5hbWUpfS5zZWxlY3RlZCAuaGV4LWdyYXBoaWMgYCArXG4gICAgICBgIHsgc3Ryb2tlOiAkeyBVdGlsLnNoYWRlQ29sb3IoYXR0cmlidXRlLmNvbG9yLCAtMC41KSB9YCk7XG4gICAgLy8gc2VsZWN0ZWQsIG1vdXNlIG92ZXJcbiAgICBjb2xvcml6YXRpb25TdHlsZXMuaW5zZXJ0UnVsZShgLmNvbG9yaXplLW5vZGVzIGAgK1xuICAgICAgYC4ke1V0aWwuc3RyaW5nVG9Dc3MoYXR0cmlidXRlLm5hbWUpfS5zZWxlY3RlZC5tb3VzZS1vdmVyIC5oZXgtZ3JhcGhpYyBgICtcbiAgICAgIGB7IHN0cm9rZTogJHsgVXRpbC5zaGFkZUNvbG9yKGF0dHJpYnV0ZS5jb2xvciwgLTAuMjUpIH1gKTtcbiAgICAvLyB1bnNlbGVjdGVkLCBubyBtb3VzZVxuICAgIGNvbG9yaXphdGlvblN0eWxlcy5pbnNlcnRSdWxlKGAuY29sb3JpemUtbm9kZXMgYCArXG4gICAgICBgLiR7VXRpbC5zdHJpbmdUb0NzcyhhdHRyaWJ1dGUubmFtZSl9IC5oZXgtZ3JhcGhpYyBgICtcbiAgICAgIGB7IHN0cm9rZTogJHsgVXRpbC5zaGFkZUNvbG9yKGF0dHJpYnV0ZS5jb2xvciwgLTAuNzUpIH1gKTtcbiAgICAvLyB1bnNlbGVjdGVkLCBtb3VzZSBvdmVyXG4gICAgY29sb3JpemF0aW9uU3R5bGVzLmluc2VydFJ1bGUoYC5jb2xvcml6ZS1ub2RlcyBgICtcbiAgICAgIGAuJHtVdGlsLnN0cmluZ1RvQ3NzKGF0dHJpYnV0ZS5uYW1lKX0ubW91c2Utb3ZlciAuaGV4LWdyYXBoaWMgYCArXG4gICAgICBgeyBzdHJva2U6ICR7IFV0aWwuc2hhZGVDb2xvcihhdHRyaWJ1dGUuY29sb3IsIC0wLjY1KSB9YCk7XG5cbiAgICAvLyBoZXggdGV4dFxuICAgIGNvbG9yaXphdGlvblN0eWxlcy5pbnNlcnRSdWxlKGAuY29sb3JpemUtbm9kZXMgYCArXG4gICAgIGAuJHtVdGlsLnN0cmluZ1RvQ3NzKGF0dHJpYnV0ZS5uYW1lKX0gYCArXG4gICAgIGAuaGV4LXRleHQgeyBjb2xvcjogJHsgVXRpbC5zaGFkZUNvbG9yKGF0dHJpYnV0ZS5jb2xvciwgMC45KSB9YCk7XG4gICAgIGNvbG9yaXphdGlvblN0eWxlcy5pbnNlcnRSdWxlKGAuY29sb3JpemUtbm9kZXMgYCArXG4gICAgICBgLiR7VXRpbC5zdHJpbmdUb0NzcyhhdHRyaWJ1dGUubmFtZSl9LnNlbGVjdGVkIGAgK1xuICAgICAgYC5oZXgtdGV4dCB7IGNvbG9yOiAkeyBVdGlsLnNoYWRlQ29sb3IoYXR0cmlidXRlLmNvbG9yLCAtMC44KSB9YCk7XG5cbiAgICAvLyBib3ggc2hhZG93XG4gICAgLy8gc2VsZWN0ZWQsIG1vdXNlIG92ZXJcbiAgICBjb2xvcml6YXRpb25TdHlsZXMuaW5zZXJ0UnVsZShgLmNvbG9yaXplLW5vZGVzIGAgK1xuICAgICAgYC4ke1V0aWwuc3RyaW5nVG9Dc3MoYXR0cmlidXRlLm5hbWUpfS5tb3VzZS1vdmVyLnNlbGVjdGVkIGAgK1xuICAgICAgYC5oZXgtZ3JhcGhpYyB7IGAgK1xuICAgICAgYC13ZWJraXQtZmlsdGVyOiBkcm9wLXNoYWRvdygwcHggMHB4IDhweCAkeyBVdGlsLnNoYWRlQ29sb3IoYXR0cmlidXRlLmNvbG9yLCAwLjUpIH0pOyBgICtcbiAgICAgIGBmaWx0ZXI6ICAgICAgICAgZHJvcC1zaGFkb3coMHB4IDBweCA4cHggJHsgVXRpbC5zaGFkZUNvbG9yKGF0dHJpYnV0ZS5jb2xvciwgMC41KSB9KTsgYCArXG4gICAgICBgfWApO1xuICAgIC8vIHVuc2VsZWN0ZWQsIG1vdXNlIG92ZXJcbiAgICBjb2xvcml6YXRpb25TdHlsZXMuaW5zZXJ0UnVsZShgLmNvbG9yaXplLW5vZGVzIGAgK1xuICAgICAgYC4ke1V0aWwuc3RyaW5nVG9Dc3MoYXR0cmlidXRlLm5hbWUpfS5tb3VzZS1vdmVyIGAgK1xuICAgICAgYC5oZXgtZ3JhcGhpYyB7IGAgK1xuICAgICAgYC13ZWJraXQtZmlsdGVyOiBkcm9wLXNoYWRvdygwcHggMHB4IDhweCAkeyBVdGlsLnNoYWRlQ29sb3IoYXR0cmlidXRlLmNvbG9yLCAwLjMpIH0pOyBgICtcbiAgICAgIGBmaWx0ZXI6ICAgICAgICAgZHJvcC1zaGFkb3coMHB4IDBweCA4cHggJHsgVXRpbC5zaGFkZUNvbG9yKGF0dHJpYnV0ZS5jb2xvciwgMC4zKSB9KTsgYCArXG4gICAgICBgfWApO1xuICAgIC8vIGlsbGVnYWwsIG1vdXNlIG92ZXJcbiAgICBjb2xvcml6YXRpb25TdHlsZXMuaW5zZXJ0UnVsZShgYm9keS5jb2xvcml6ZS1ub2RlcyBgICtcbiAgICAgIGAuJHtVdGlsLnN0cmluZ1RvQ3NzKGF0dHJpYnV0ZS5uYW1lKX0ubW91c2Utb3Zlci5pbGxlZ2FsIGAgK1xuICAgICAgYC5oZXgtZ3JhcGhpYyB7IGAgK1xuICAgICAgYC13ZWJraXQtZmlsdGVyOiBkcm9wLXNoYWRvdygwcHggMHB4IDhweCByZWQpOyBgICtcbiAgICAgIGBmaWx0ZXI6ICAgICAgICAgZHJvcC1zaGFkb3coMHB4IDBweCA4cHggcmVkKTsgYCArXG4gICAgICBgfWApO1xuXG4gICAgLy8gdG9vbHRpcFxuICAgIC8vIHRvb2x0aXAgYm9yZGVyXG4gICAgY29sb3JpemF0aW9uU3R5bGVzLmluc2VydFJ1bGUoYC5jb2xvcml6ZS1ub2RlcyBgICtcbiAgICBgI3Rvb2x0aXAuJHtVdGlsLnN0cmluZ1RvQ3NzKGF0dHJpYnV0ZS5uYW1lKX0gYCArXG4gICAgYHsgYm9yZGVyLWNvbG9yOiAkeyBVdGlsLnNoYWRlQ29sb3IoYXR0cmlidXRlLmNvbG9yLCAtMC43NSkgfWApO1xuICAgIC8vIHRvb2x0aXAgbmFtZWJhciB0ZXh0XG4gICAgY29sb3JpemF0aW9uU3R5bGVzLmluc2VydFJ1bGUoYC5jb2xvcml6ZS1ub2RlcyBgICtcbiAgICBgI3Rvb2x0aXAuJHtVdGlsLnN0cmluZ1RvQ3NzKGF0dHJpYnV0ZS5uYW1lKX0gI3Rvb2x0aXAtbmFtZS1iYXIgYCArXG4gICAgYHsgY29sb3I6ICR7IFV0aWwuc2hhZGVDb2xvcihhdHRyaWJ1dGUuY29sb3IsIDAuOSkgfTsgfWApO1xuXG4gICAgLy8gdG9vbHRpcCBuYW1lYmFyIGJhY2tncm91bmRcbiAgICBjb2xvcml6YXRpb25TdHlsZXMuaW5zZXJ0UnVsZShgLmNvbG9yaXplLW5vZGVzIGAgK1xuICAgIGAjdG9vbHRpcC4ke1V0aWwuc3RyaW5nVG9Dc3MoYXR0cmlidXRlLm5hbWUpfSAjdG9vbHRpcC1uYW1lLWJhciBgICtcbiAgICBgeyBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTM1ZGVnLCAkeyBVdGlsLnNoYWRlQ29sb3IoYXR0cmlidXRlLmNvbG9yLCAtMC43NSkgfUJCLCBgICtcbiAgICBgJHsgVXRpbC5zaGFkZUNvbG9yKGF0dHJpYnV0ZS5jb2xvciwgLTAuNCkgfUJCKTsgfWApO1xuXG4gICAgLy8gdG9vbHRpcCBkZXNjcmlwdGlvbiBiYWNrZ3JvdW5kXG4gICAgY29sb3JpemF0aW9uU3R5bGVzLmluc2VydFJ1bGUoYC5jb2xvcml6ZS1ub2RlcyBgICtcbiAgICBgI3Rvb2x0aXAuJHtVdGlsLnN0cmluZ1RvQ3NzKGF0dHJpYnV0ZS5uYW1lKX0gYCArXG4gICAgYHsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgJHsgVXRpbC5zaGFkZUNvbG9yKGF0dHJpYnV0ZS5jb2xvciwgMC4yKSB9QkIsIGAgK1xuICAgIGAkeyBVdGlsLnNoYWRlQ29sb3IoYXR0cmlidXRlLmNvbG9yLCAwLjUpIH1CQik7IH1gKTtcblxuICB9XG59XG4iLCJcblwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgZG9tdG9pbWFnZSBmcm9tICdkb20tdG8taW1hZ2UnO1xuaW1wb3J0IHsgdHJlZVNvdXJjZSB9IGZyb20gXCIuL3RyZWVfc291cmNlXCI7XG5pbXBvcnQgeyBmaW5kQnlJZCB9IGZyb20gXCIuL2RvbS5qc1wiO1xuaW1wb3J0IHsgdHJlZU5hbWVUb0lkIH0gZnJvbSBcIi4vdXRpbC5qc1wiO1xuXG5leHBvcnQgbGV0IHNhdmVUb0ZpbGUgPSBmdW5jdGlvbiAocm9vdE5vZGUpIHtcblxuICBsZXQgdHJlZVZpZXcgPSBidWlsZFRyZWVWaWV3KCk7XG4gIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQodHJlZVZpZXcpO1xuICBkb210b2ltYWdlLnRvSnBlZyh0cmVlVmlldywgeyBxdWFsaXR5OiAwLjkgfSApXG4gIC50aGVuKCBkYXRhVXJsID0+IHtcbiAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKHRyZWVWaWV3KTtcblxuICAgIC8vIGxldCBpbWFnZSA9IG5ldyBJbWFnZSgpO1xuICAgIC8vIGltYWdlLnNyYyA9IGRhdGFVcmw7XG4gICAgLy8gZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChpbWFnZSk7XG5cbiAgICB2YXIgbGluayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTtcbiAgICBsaW5rLmRvd25sb2FkID0gJ3NraWxsX3RyZWUnO1xuICAgIGxpbmsuaHJlZiA9IGRhdGFVcmw7XG4gICAgbGluay5jbGljaygpO1xuXG5cbiAgfSk7XG5cblxufVxuXG5mdW5jdGlvbiBidWlsZFRyZWVWaWV3KCkge1xuXG4gIGxldCB0cmVlc1ZpZXcgPSBmaW5kQnlJZChcInRyZWVzLXZpZXctdGVtcGxhdGVcIikuY29udGVudC5jbG9uZU5vZGUodHJ1ZSkuZmlyc3RFbGVtZW50Q2hpbGQ7XG5cbiAgZm9yIChsZXQgdHJlZSBvZiB0cmVlU291cmNlKSB7XG4gICAgbGV0IGxhYmVsZWRUcmVlID0gZmluZEJ5SWQoXCJsYWJlbGVkLXRyZWUtdGVtcGxhdGVcIikuY29udGVudC5jbG9uZU5vZGUodHJ1ZSkuZmlyc3RFbGVtZW50Q2hpbGQ7XG4gICAgbGFiZWxlZFRyZWUucXVlcnlTZWxlY3RvcignLnRyZWUtbGFiZWwnKS50ZXh0Q29udGVudCA9IHRyZWUudHJlZU5hbWU7XG4gICAgbGV0IHRyZWVFbGVtZW50ID0gZmluZEJ5SWQodHJlZU5hbWVUb0lkKHRyZWUudHJlZU5hbWUpKS5jbG9uZU5vZGUodHJ1ZSk7XG4gICAgdHJlZUVsZW1lbnQuaWQgPSAnJztcbiAgICB0cmVlRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKCdoaWRlJyk7XG4gICAgbGFiZWxlZFRyZWUuYXBwZW5kQ2hpbGQodHJlZUVsZW1lbnQpO1xuICAgIHRyZWVzVmlldy5hcHBlbmRDaGlsZChsYWJlbGVkVHJlZSk7XG4gIH1cblxuICByZXR1cm4gdHJlZXNWaWV3O1xuXG59XG4iLCJcblwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgeyB0cmVlU291cmNlIH0gZnJvbSBcIi4vdHJlZV9zb3VyY2VcIjtcbmltcG9ydCB7IGF0dHJpYnV0ZU1hcCB9IGZyb20gXCIuL2F0dHJpYnV0ZV9tYXBcIjtcbmltcG9ydCBidWlsZFNraWxsVHJlZSBmcm9tIFwiLi9za2lsbF90cmVlXCI7XG5pbXBvcnQgeyBkZWJvdW5jZSwgZGltZW5zaW9uQXNOdW1iZXIsIHN0cmluZ1RvQ3NzIH0gZnJvbSBcIi4vdXRpbC5qc1wiO1xuaW1wb3J0IHsgUHViU3ViIH0gZnJvbSBcIi4vcHViX3N1Yi5qc1wiO1xuaW1wb3J0IHJlbmRlclRyZWUgZnJvbSBcIi4vcmVuZGVyX3RyZWUuanNcIjtcbmltcG9ydCB3aXJlRXZlbnRzIGZyb20gXCIuL2V2ZW50X3dpcmluZy5qc1wiO1xuaW1wb3J0IHsgbG9hZEZyb21SZW1vdGVJZCB9IGZyb20gXCIuL2NvbGRfc3RvcmFnZS5qc1wiO1xuaW1wb3J0IHsgZmluZEJ5SWQsIGZpbmRCeUNsYXNzIH0gZnJvbSBcIi4vZG9tLmpzXCI7XG5pbXBvcnQgaW5zZXJ0QXR0cmlidXRlQ29sb3JzIGZyb20gXCIuL2F0dHJpYnV0ZV9jb2xvcnMuanNcIjtcbmltcG9ydCB7IGluY3JlbWVudEJvbnVzU29ydCB9IGZyb20gXCIuL2JvbnVzZXMuanNcIjtcbmltcG9ydCB7IHNhdmVUb0ZpbGUgfSBmcm9tIFwiLi9leHBvcnRfdG9faW1hZ2UuanNcIjtcblxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIiwgZnVuY3Rpb24oKSB7XG5cbiAgbGV0IHNraWxsVHJlZSA9IGJ1aWxkU2tpbGxUcmVlKHRyZWVTb3VyY2UpO1xuXG4gIGluc2VydEF0dHJpYnV0ZUNvbG9ycyhhdHRyaWJ1dGVNYXApO1xuICByZW5kZXJUcmVlKHNraWxsVHJlZSk7XG4gIHdpcmVFdmVudHMoc2tpbGxUcmVlKTtcbiAgbG9hZEZyb21SZW1vdGVJZChza2lsbFRyZWUpO1xuICBQdWJTdWIucHVibGlzaChcInRvZ2dsZUNoYXNzaXNXZWlnaHRcIik7XG4gIFB1YlN1Yi5wdWJsaXNoKFwidG9nZ2xlQ2hhc3Npc1RlY2hcIik7XG4gIFB1YlN1Yi5wdWJsaXNoKFwiYm9udXNTb3J0Q2hhbmdlZFwiLCB7Ym9udXNTb3J0OiBcInRyZWVcIiwgbGFiZWw6IFwiU29ydCBCeSBBbHBoYVwifSk7XG4gIFB1YlN1Yi5wdWJsaXNoKFwidHJlZVRhYkNsaWNrZWRcIiwge3RyZWVOYW1lOiBza2lsbFRyZWUuZ2V0VHJlZXMoKVswXS5uYW1lfSk7XG5cbiAgZmluZEJ5SWQoXCJyZXNldC10cmVlLWJ1dHRvblwiKS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgIFB1YlN1Yi5wdWJsaXNoKFwicmVzZXRBY3RpdmVUcmVlXCIsIHt0cmVlTmFtZTogc2tpbGxUcmVlLmdldEFjdGl2ZVRyZWVOYW1lKCl9KTtcbiAgfSk7XG5cbiAgZmluZEJ5SWQoXCJyZXNldC1hbGwtYnV0dG9uXCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgUHViU3ViLnB1Ymxpc2goXCJyZXNldEFsbFRyZWVzXCIpO1xuICB9KTtcblxuICBmaW5kQnlJZChcInNlbGVjdC10cmVlLWJ1dHRvblwiKS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgIFB1YlN1Yi5wdWJsaXNoKFwic2VsZWN0VHJlZVwiLCB7dHJlZU5hbWU6IHNraWxsVHJlZS5nZXRBY3RpdmVUcmVlTmFtZSgpfSk7XG4gIH0pO1xuXG4gIGZpbmRCeUlkKFwicGVybWFsaW5rLWJ1dHRvblwiKS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgIFB1YlN1Yi5wdWJsaXNoKFwiZ2V0UGVybWFsaW5rXCIsIHtza2lsbFRyZWU6IHNraWxsVHJlZX0gKTtcbiAgfSk7XG5cbiAgZmluZEJ5SWQoXCJjb2xvcml6ZS1ub2Rlcy1idXR0b25cIikuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgUHViU3ViLnB1Ymxpc2goXCJ0b2dnbGVOb2RlQ29sb3JpemF0aW9uXCIpO1xuICB9KTtcblxuICBmaW5kQnlJZChcInNhdmUtdG8tZmlsZS1idXR0b25cIikuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgc2F2ZVRvRmlsZShmaW5kQnlJZChcImdyYXBoLXZpZXdcIikpO1xuICB9KTtcblxuICBmaW5kQnlJZChcImNoYXNzaXMtd2VpZ2h0LXRvZ2dsZVwiKS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24oZXZlbnQpIHtcbiAgICBQdWJTdWIucHVibGlzaChcInRvZ2dsZUNoYXNzaXNXZWlnaHRcIik7XG4gIH0pO1xuXG4gIGZpbmRCeUlkKFwiY2hhc3Npcy10ZWNoLXRvZ2dsZVwiKS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24oZXZlbnQpIHtcbiAgICBQdWJTdWIucHVibGlzaChcInRvZ2dsZUNoYXNzaXNUZWNoXCIpO1xuICB9KTtcblxuICBmaW5kQnlJZChcImJvbnVzLXNvcnQtYnV0dG9uXCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbihldmVuKSB7XG4gICAgaW5jcmVtZW50Qm9udXNTb3J0KCk7XG4gIH0pO1xuXG4gIGZvciAobGV0IG5vZGUgb2YgZmluZEJ5Q2xhc3MoXCIubm9kZVwiKSkge1xuICAgIG5vZGUuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlZW50ZXJcIiwgZnVuY3Rpb24oZXZlbnQpIHtcbiAgICAgIFB1YlN1Yi5wdWJsaXNoKFwibm9kZU1vdXNlRW50ZXJcIiwge2F0dHJpYnV0ZTogdGhpcy5kYXRhc2V0LmF0dHJpYnV0ZSwgdHJlZU5hbWU6IHNraWxsVHJlZS5nZXRBY3RpdmVUcmVlTmFtZSgpfSApO1xuICAgIH0pO1xuICB9XG5cbiAgZm9yIChsZXQgbm9kZSBvZiBmaW5kQnlDbGFzcyhcIi5ub2RlXCIpKSB7XG4gICAgbm9kZS5hZGRFdmVudExpc3RlbmVyKFwibW91c2VsZWF2ZVwiLCBmdW5jdGlvbihldmVudCkge1xuICAgICAgUHViU3ViLnB1Ymxpc2goXCJub2RlTW91c2VMZWZ0XCIsIHthdHRyaWJ1dGU6IHRoaXMuZGF0YXNldC5hdHRyaWJ1dGUsIHRyZWVOYW1lOiBza2lsbFRyZWUuZ2V0QWN0aXZlVHJlZU5hbWUoKX0gKTtcbiAgICB9KTtcbiAgfVxuXG4gIHZhciBpc01vdXNlRHJhZ2dpbmcgPSBmYWxzZTtcbiAgZmluZEJ5SWQoXCJncmFwaC12aWV3XCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd25cIiwgZnVuY3Rpb24oZXZlbnQpIHtcbiAgICBpc01vdXNlRHJhZ2dpbmcgPSB0cnVlO1xuICB9KTtcblxuICBmaW5kQnlJZChcImdyYXBoLXZpZXdcIikuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNldXBcIiwgZnVuY3Rpb24oZXZlbnQpIHtcbiAgICBpc01vdXNlRHJhZ2dpbmcgPSBmYWxzZTtcbiAgfSk7XG5cbiAgdmFyIHByZXZpb3VzTm9kZSA9IHVuZGVmaW5lZDtcbiAgZmluZEJ5SWQoXCJncmFwaC12aWV3XCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZW1vdmVcIiwgZnVuY3Rpb24oZXZlbnQpIHtcbiAgICBpZiAoaXNNb3VzZURyYWdnaW5nKSB7XG4gICAgICBsZXQgbm9kZUVsZW1lbnQgPSBldmVudC50YXJnZXQuY2xvc2VzdCgnLm5vZGUnKTtcbiAgICAgIGlmIChub2RlRWxlbWVudCAhPSB1bmRlZmluZWQgJiYgbm9kZUVsZW1lbnQgIT0gcHJldmlvdXNOb2RlKSB7XG4gICAgICAgIGxldCBub2RlID0gc2tpbGxUcmVlLmdldE5vZGUobm9kZUVsZW1lbnQuaWQpXG4gICAgICAgIG5vZGUuc2VsZWN0ZWQoIW5vZGUuc2VsZWN0ZWQoKSk7XG4gICAgICAgIHByZXZpb3VzTm9kZSA9IG5vZGVFbGVtZW50O1xuICAgICAgfTtcbiAgICB9XG4gIH0pO1xuXG4gIGZpbmRCeUlkKFwiZ3JhcGgtdmlld1wiKS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24oZXZlbnQpIHtcbiAgICBsZXQgbm9kZSA9IGV2ZW50LnRhcmdldC5jbG9zZXN0KCcubm9kZScpO1xuICAgIGlmIChub2RlICE9IHVuZGVmaW5lZCkge1xuICAgICAgUHViU3ViLnB1Ymxpc2goXCJub2RlQ2xpY2tlZFwiLCB7IG5vZGU6IHNraWxsVHJlZS5nZXROb2RlKG5vZGUuaWQpIH0gKTtcbiAgICB9O1xuICB9KTtcblxuICB2YXIgbGFzdFRvb2x0aXBUYXJnZXQgPSB1bmRlZmluZWQ7XG4gIGZpbmRCeUlkKFwiZ3JhcGgtdmlld1wiKS5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vtb3ZlXCIsIGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgbGV0IHRvb2x0aXAgPSBmaW5kQnlJZCgndG9vbHRpcCcpO1xuICAgIGxldCBub2RlID0gZXZlbnQudGFyZ2V0LmNsb3Nlc3QoJy5ub2RlJyk7XG4gICAgaWYgKG5vZGUgPT0gdW5kZWZpbmVkIHx8IG5vZGUgIT0gbGFzdFRvb2x0aXBUYXJnZXQpIHtcbiAgICAgIHRvb2x0aXAuY2xhc3NMaXN0LnJlbW92ZSgnZnVsbC10b29sdGlwJyk7XG4gICAgICB0b29sdGlwLmNsYXNzTGlzdC5hZGQoJ3plcm8tdG9vbHRpcCcpO1xuICAgIH1cbiAgICBkZWJvdW5jZWRNb3VzZU1vdmUodG9vbHRpcCwgbm9kZSwgZXZlbnQpO1xuICAgIGxhc3RUb29sdGlwVGFyZ2V0ID0gbm9kZTtcbiAgfSk7XG5cbiAgdmFyIGRlYm91bmNlZE1vdXNlTW92ZSA9IGRlYm91bmNlKGZ1bmN0aW9uKHRvb2x0aXAsIG5vZGUsIGV2ZW50KSB7XG4gICAgaWYgKG5vZGUgIT0gdW5kZWZpbmVkKSB7XG4gICAgICBzdHlsZVRvb2x0aXAodG9vbHRpcCwgbm9kZSwgZXZlbnQpO1xuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIHRvb2x0aXAuY2xhc3NMaXN0LnJlbW92ZSgnemVyby10b29sdGlwJyk7XG4gICAgICAgIHRvb2x0aXAuY2xhc3NMaXN0LmFkZCgnZnVsbC10b29sdGlwJyk7XG4gICAgICB9LCAxMCk7XG4gICAgfVxuICB9LCA4MDApO1xuXG4gIGZ1bmN0aW9uIHN0eWxlVG9vbHRpcCh0b29sdGlwLCBub2RlRWxlbWVudCwgZXZlbnQpIHtcbiAgICB0b29sdGlwLnN0eWxlLnRvcCA9IGRpbWVuc2lvbkFzTnVtYmVyKG5vZGVFbGVtZW50LnN0eWxlLnRvcCkgKyA2NSArXCJweFwiO1xuICAgIHRvb2x0aXAuc3R5bGUubGVmdCA9IGRpbWVuc2lvbkFzTnVtYmVyKG5vZGVFbGVtZW50LnN0eWxlLmxlZnQpICsgMjI1ICsgXCJweFwiO1xuICAgIGxldCBhdHRyaWJ1dGUgPSBnZXRBdHRyaWJ1dGUobm9kZUVsZW1lbnQuZGF0YXNldC5hdHRyaWJ1dGUpO1xuICAgIHRvb2x0aXAuY2xhc3NMaXN0LnJlbW92ZSh0b29sdGlwLmRhdGFzZXQuYXR0cmlidXRlKTtcbiAgICB0b29sdGlwLmNsYXNzTGlzdC5hZGQobm9kZUVsZW1lbnQuZGF0YXNldC5hdHRyaWJ1dGUpO1xuICAgIHRvb2x0aXAuZGF0YXNldC5hdHRyaWJ1dGUgPSBub2RlRWxlbWVudC5kYXRhc2V0LmF0dHJpYnV0ZTtcbiAgICBsZXQgbm9kZSA9IHNraWxsVHJlZS5nZXROb2RlKG5vZGVFbGVtZW50LmlkKTtcbiAgICBmaW5kQnlJZChcInRvb2x0aXAtbmFtZS1iYXJcIikudGV4dENvbnRlbnQgPSBub2RlLm5hbWU7XG4gICAgZmluZEJ5SWQoXCJ0b29sdGlwLWRlc2NyaXB0aW9uXCIpLnRleHRDb250ZW50ID0gYXR0cmlidXRlLmRlc2NyaXB0aW9uO1xuICB9XG5cbiAgZnVuY3Rpb24gZ2V0QXR0cmlidXRlKGF0dHJpYnV0ZUNzcykge1xuICAgIGZvciAobGV0IGF0dHJpYnV0ZSBvZiBhdHRyaWJ1dGVNYXApIHtcbiAgICAgIGlmIChzdHJpbmdUb0NzcyhhdHRyaWJ1dGUubmFtZSkgPT0gYXR0cmlidXRlQ3NzKSB7XG4gICAgICAgIHJldHVybiBhdHRyaWJ1dGU7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZmluZEJ5SWQoXCJwZXJtYWxpbmstZGlzcGxheVwiKS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24oZXZlbnQpIHtcbiAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgfSk7XG5cbiAgZmluZEJ5SWQoXCJtb2RhbC1vdmVybGF5XCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbigpIHtcbiAgICBsZXQgY2xvc2VhYmxlID0gZmluZEJ5SWQoXCJtb2RhbC1vdmVybGF5XCIpLmdldEF0dHJpYnV0ZShcImRhdGEtY2xvc2VhYmxlXCIpO1xuICAgIGlmIChjbG9zZWFibGUgPT0gXCJ0cnVlXCIpIHtcbiAgICAgIGZpbmRCeUlkKFwibW9kYWwtb3ZlcmxheVwiKS5jbGFzc0xpc3QuYWRkKFwiaGlkZVwiKTtcbiAgICB9XG4gIH0pO1xuXG59KTtcbiJdLCJtYXBwaW5ncyI6Ijs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUM3bUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDamlCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDVEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDMURBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDN0JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUN0REE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUNwUUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUNoTEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUNyREE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUMzUEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUMvRkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7QUMxRkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUMvQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1\n')}]);